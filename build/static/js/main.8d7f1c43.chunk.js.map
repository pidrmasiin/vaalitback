{"version":3,"sources":["components/form/FormInput.js","components/form/TextArea.js","reducers/htmlReducer.js","reducers/kysymysReducer.js","reducers/notifyReducer.js","components/Notification.js","services/kysymys.js","services/yle.js","reducers/ylenKysymyksetReducer.js","components/form/HtmlForm.js","components/Home.js","reducers/kayttajaReducer.js","components/yle/ylesQuestionsCategories.js","components/yleParties/YleKannat.js","components/questions/MembersAnswers.js","components/AnswersTable.js","components/Machine.js","components/Settings.js","components/Menu.js","components/nolansMap/NolansMap.js","components/questions/Questions.js","components/yle/Answers.js","reducers/edustajaReducer.js","components/yle/FindAnswer.js","services/kategoria.js","components/kategoriat/UusiKategoria.js","reducers/kategoriatReducer.js","components/kategoriat/Kategoriat.js","components/kategoriat/YleKategoriat.js","components/kategoriat/Kategoria.js","components/questions/Question.js","services/login.js","reducers/userReducer.js","components/Login.js","reducers/kysymyksetReducer.js","App.js","store.js","index.js"],"names":["FormInput","_ref","placeholder","name","label","react_default","a","createElement","className","dist_es","Input","type","TextArea","rows","cols","form","intialState","puolueet","edustajat","htmlReducer","store","arguments","length","undefined","action","Object","objectSpread","html","initialState","kysymys","selitys","url","kategoriat","vuosi","vastaus","kysymysReducer","details","hot","kysymyksenAsettelu","jaaLiberal","jaaLeftist","jaaGreen","notifyCreation","content","time","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","notify","setTimeout","stop","this","_x","apply","notifyReducer","Notification","componentDidMount","props","divStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","React","Component","ConnectedNotification","connect","baseUrl","token","services_kysymys","getAll","response","axios","get","sent","abrupt","data","setToken","newToken","concat","addKysymys","_ref2","_callee2","newObject","config","_context2","console","log","headers","Authorization","post","remove","_ref3","_callee3","id","_context3","delete","_x2","addKategoria","_ref4","_callee4","_context4","_x3","modifyKysymys","_ref5","_callee5","_context5","put","_x4","_x5","yle","kysymykset","getYlenKysymykset","all","yleService","ylenKysymyksetReducer","HtmlForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","ylenKysymykset","window","location","assign","onSubmit","e","loggedUserJSON","handleDetails","handleHtml","handlePuolueet","handleEdustajat","addKatet","includes","localStorage","getItem","kysymysService","JSON","parse","history","push","t0","doc","DOMParser","parseFromString","getElementsByTagName","_loop","i","puolue","nimi","cells","innerHTML","jaa","Number","replace","ei","tyhjia","kanta","keys","reduce","b","poissa","yhteensa","filter","p","addPuolueet","_loop2","edustaja","addEdustajat","preventDefault","target","htmlEdustajat","value","htmlPuolueet","state","green","addDetails","map","k","document","getElementById","checked","idt","addKategoriat","handleJaaLiberal","setState","handleJaaLeftist","handleGreen","disClick","field","defineProperty","_this2","values","x","text","form_FormInput","form_TextArea","compact","toggle","onChange","handleHot","radio","key","handleChange","bind","fluid","search","selection","options","handleRistiriita","components_Notification","positive","Home","rel","href","Link","to","size","inverted","onClick","aanet","kayttajaReducer","filtered","old","parseParties","party","YleKannat","eit","jaat","kannat","red","etunimi","sukunimi","toString","textAlign","show","Math","round","celled","striped","Header","Row","HeaderCell","Body","Cell","Members","panes","out","split","sliced","chunkArray","forEach","index","menuItem","render","Pane","y","myArray","chunk","arrayLength","tempArray","myChunk","slice","AnswersTable","monta","kayttaja","paddingLeft","open","closeOnDocumentClick","transition","animation","duration","left","position","top","floated","textDecoration","find","trigger","icon","on","Content","MembersAnswers","yleParties_YleKannat","_","orderBy","src","alt","height","width","addPuolue","Machine","questions","satunnainenKysymys","filterQuestions","shuffle","monesko","handledQuestions","selected_categories","hots","question","q","some","cat","array","temporaryValue","randomIndex","currentIndex","floor","random","naytaKysymys","tulokset","jaaPuolueet","addVastaus","element","visible","display","basic","components_AnswersTable","as","Column","verticalAlign","Description","_id","Settings","renderMachine","hotQuestions","categories","handleHotquestions","handleCategories","categ","copy","src_components_Machine","margin","borderColor","kateg","children","Nav","logout","removeItem","event","white","paddingTop","BurgerMenu","right","isOpen","paddingBottom","user","NolansMap","valuesCount","greenCount","economicsCount","maxDataValue","dataSets","partiesData","backgroundColor","selectedParties","allParties","dataToRadar","set","valueQuestions","hasOwnProperty","economicQuestions","greenQuestions","setValuesToDataset","setValuesToDataHelper","setDataToPartyHelper","partiesDataCopy","orginalValue","handleParties","parti","marginTop","react_chartjs_2_es","layout","legend","labels","datasets","marginRight","linkStyle","fontWeight","Questions","confirm","error","selectable","Vastaukset","tiedot","nayta","edustajaReducer","EtsiVastaus","etsi","toLowerCase","addEdustaja","err","muodosta","piilotaKannat","change","valuesP","Answers","services_kategoria","vastausKategoriat","sosiaalipolitiikka","kaupansaantely","tyoehdot","eu","talouspolitiikka","verotus","turvallisuus","maahanmuutto","ulkopolitiikka","yksityisyys","ymparisto","hallinto","koulutus","UusiKategoria","kategoria","katet","vastaukset","kategoriaService","getKategoriat","kategoriatService","kategoriatReducer","Kategoriat","kategoriat_UusiKategoria","YleKategoriat","Kategoria","Group","kategoriat_YleKategoriat","divided","unstackable","Kysymys","muokkaa","muokattava","asettelu","booleans","muutos","onKategoriat","showBooleans","handleAsettelu","Or","defaultChecked","List","Item","Extra","services_login","login","credentials","userReducer","Login","loginService","username","password","setItem","stringify","userLogin","kysymyksetReducer","App","getKysymykset","kysymysById","kategoriaById","BrowserRouter","fixed","paddingRight","marginLeft","Menu","boxShadow","Route","exact","path","components_Home","kategoriat_Kategoriat","questions_Questions","components_Settings","FindAnswer","nolansMap_NolansMap","components_Login","form_HtmlForm","match","Question","params","kategoriat_Kategoria","reducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","es","src_App_0"],"mappings":"iUAWeA,EAPG,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,KAAMC,EAAtBH,EAAsBG,MAAtB,OAChBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAIH,GACJC,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CAAYC,KAAK,OAAOH,UAAU,eAAeN,YAAaA,EAAaC,KAAMA,MCWtES,EAfE,SAAAX,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,KAAMC,EAAtBH,EAAsBG,MAAtB,OACfC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIH,GACJC,EAAAC,EAAAC,cAACE,EAAA,EAAKG,SAAN,CACED,KAAK,OACLH,UAAU,eACVN,YAAaA,EACbW,KAAK,KACLC,KAAK,KACLX,KAAMA,EACNY,KAAK,uBCbLC,EAAc,CAClBC,SAAU,GACVC,UAAW,IA4BEC,EAzBK,WAAiC,IAAhCC,EAAgCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAxBL,EAAaQ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,MAAoB,kBAAhBC,EAAOb,KACFc,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBH,SAAUO,EAAOG,OAChB,mBAAhBH,EAAOb,KACJc,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBF,UAAWM,EAAOG,OAIhCP,GCbHQ,EAAe,CACnBC,QAAS,GACTC,QAAS,GACTC,IAAK,GACLd,SAAU,GACVC,UAAW,GACXc,WAAY,GACZC,MAAO,GACPC,QAAS,IAyDIC,EAtDQ,WAAkC,IAAjCf,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBO,EAAcJ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,MAAoB,eAAhBC,EAAOb,KACFc,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBH,SAAUO,EAAOP,WAChB,gBAAhBO,EAAOb,KACJc,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEES,QAASL,EAAOY,QAAQP,QACxBC,QAASN,EAAOY,QAAQN,QACxBC,IAAKP,EAAOY,QAAQL,IACpBE,MAAOT,EAAOY,QAAQH,MACtBC,QAASV,EAAOY,QAAQF,QACxBG,IAAKb,EAAOY,QAAQC,IACpBC,mBAAoBd,EAAOY,QAAQE,mBACnCC,WAAYf,EAAOY,QAAQG,WAC3BC,WAAYhB,EAAOY,QAAQI,WAC3BC,SAAUjB,EAAOY,QAAQK,WAEP,kBAAhBjB,EAAOb,KACJc,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBF,UAAWM,EAAON,YACjB,mBAAhBM,EAAOb,KACJc,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBY,WAAYR,EAAOQ,aAEjCZ,GC1BMsB,EAAiB,SAACC,EAASC,GACtC,sBAAA3C,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAO,SAAAC,EAAOC,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACLJ,EAAS,CACPtC,KAAM,OACN2C,OAAQX,IAEVY,WAAW,kBAAMN,EAAS,CACxBtC,KAAM,OACN2C,OAAQ,MACC,IAAPV,GARC,wBAAAO,EAAAK,SAAAR,EAAAS,SAAP,gBAAAC,GAAA,OAAAzD,EAAA0D,MAAAF,KAAApC,YAAA,IAYauC,EApBK,WAAwB,IAAvBxC,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,MAAkB,SAAdC,EAAOb,KACFa,EAAO8B,OAETlC,GCDLyC,6MACJC,kBAAoB,qFAGlB,GAA0B,KAAtBL,KAAKM,MAAMT,OACb,OAAO,KAET,IAAMU,EAAW,CACfC,MAAO,QACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,IAKhB,MAH0B,mBAAtBd,KAAKM,MAAMT,SACbU,EAASC,MAAQ,OAGjB5D,EAAAC,EAAAC,cAAA,OAAKiE,MAAOR,GACV3D,EAAAC,EAAAC,cAAA,SAAIkD,KAAKM,MAAMT,gBArBImB,IAAMC,WAkClBC,EAHeC,YAJN,SAAAxD,GAAK,MAAK,CAChCkC,OAAQlC,EAAMkC,SAGcsB,CAAyBf,oBChCjDgB,EAAU,kBAEZC,EAAQ,KA8CGC,EAAA,CACbC,OA7CU,eAAA/E,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAG,SAAAC,IAAA,IAAAiC,EAAA,OAAAnC,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACU6B,IAAMC,IAAIN,GADpB,cACPI,EADO9B,EAAAiC,KAAAjC,EAAAkC,OAAA,SAENJ,EAASK,MAFH,wBAAAnC,EAAAK,SAAAR,EAAAS,SAAH,yBAAAxD,EAAA0D,MAAAF,KAAApC,YAAA,GA8CVkE,SAzCe,SAACC,GAChBV,EAAK,UAAAW,OAAaD,IAyClBE,WAtCc,eAAAC,EAAAlE,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAG,SAAA6C,EAAOC,GAAP,IAAAC,EAAAb,EAAA,OAAAnC,EAAAxC,EAAA4C,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cACjB2C,QAAQC,IAAIJ,GACNC,EAAS,CACbI,QAAS,CAAEC,cAAerB,IAHXiB,EAAA1C,KAAA,EAKM6B,IAAMkB,KAAKvB,EAASgB,EAAWC,GALrC,cAKXb,EALWc,EAAAX,KAAAW,EAAAV,OAAA,SAMVJ,EAASK,MANC,wBAAAS,EAAAvC,SAAAoC,EAAAnC,SAAH,gBAAAC,GAAA,OAAAiC,EAAAhC,MAAAF,KAAApC,YAAA,GAuCdgF,OA9BU,eAAAC,EAAA7E,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAG,SAAAwD,EAAOC,GAAP,IAAAV,EAAAb,EAAA,OAAAnC,EAAAxC,EAAA4C,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cACPyC,EAAS,CACbI,QAAS,CAAEC,cAAerB,IAFf2B,EAAApD,KAAA,EAIU6B,IAAMwB,OAAN,GAAAjB,OAAgBZ,EAAhB,KAAAY,OAA2Be,GAAMV,GAJ3C,cAIPb,EAJOwB,EAAArB,KAAAqB,EAAApB,OAAA,SAKNJ,EAASK,MALH,wBAAAmB,EAAAjD,SAAA+C,EAAA9C,SAAH,gBAAAkD,GAAA,OAAAL,EAAA3C,MAAAF,KAAApC,YAAA,GA+BVuF,aAtBgB,eAAAC,EAAApF,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAG,SAAA+D,EAAOjB,GAAP,IAAAC,EAAAb,EAAA,OAAAnC,EAAAxC,EAAA4C,KAAA,SAAA6D,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,cACbyC,EAAS,CACbI,QAAS,CAAEC,cAAerB,IAFTiC,EAAA1D,KAAA,EAII6B,IAAMkB,KAAK,kBAAmBP,EAAWC,GAJ7C,cAIbb,EAJa8B,EAAA3B,KAAA2B,EAAA1B,OAAA,SAKZJ,EAASK,MALG,wBAAAyB,EAAAvD,SAAAsD,EAAArD,SAAH,gBAAAuD,GAAA,OAAAH,EAAAlD,MAAAF,KAAApC,YAAA,GAuBhB4F,cAfiB,eAAAC,EAAAzF,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAG,SAAAoE,EAAOX,EAAIX,GAAX,IAAAC,EAAAb,EAAA,OAAAnC,EAAAxC,EAAA4C,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,cACdyC,EAAS,CACbI,QAAS,CAAEC,cAAerB,IAFRsC,EAAA/D,KAAA,EAIG6B,IAAMmC,IAAN,GAAA5B,OAAaZ,EAAb,KAAAY,OAAwBe,GAAMX,EAAWC,GAJ5C,cAIdb,EAJcmC,EAAAhC,KAAAgC,EAAA/B,OAAA,SAKbJ,EAASK,MALI,wBAAA8B,EAAA5D,SAAA2D,EAAA1D,SAAH,gBAAA6D,EAAAC,GAAA,OAAAL,EAAAvD,MAAAF,KAAApC,YAAA,IC1BJmG,EAAA,CACbxC,OAXU,eAAA/E,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAG,SAAAC,IAAA,IAAAiC,EAAA,OAAAnC,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACU6B,IAAMC,IAJf,YAGD,cACPF,EADO9B,EAAAiC,KAAAjC,EAAAkC,OAAA,SAENJ,EAASK,MAFH,wBAAAnC,EAAAK,SAAAR,EAAAS,SAAH,yBAAAxD,EAAA0D,MAAAF,KAAApC,YAAA,ICHNO,EAAe,CACnBV,UAAW,GACXD,SAAU,GACVwG,WAAY,IAeDC,EAAoB,iCAAAzH,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAM,SAAAC,EAAOC,GAAP,IAAA0E,EAAA,OAAA7E,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACnBuE,EAAW5C,SADQ,OAC/B2C,EAD+BxE,EAAAiC,KAErCnC,EAAS,CACPtC,KAAM,OACN2E,KAAMqC,EAAI,KAJyB,wBAAAxE,EAAAK,SAAAR,EAAAS,SAAN,gBAAAC,GAAA,OAAAzD,EAAA0D,MAAAF,KAAApC,YAAA,IA8IlBwG,EA1Je,WAAkC,IAAjCzG,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBO,EAAcJ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9D,MAAoB,SAAhBC,EAAOb,KACFc,OAAAC,EAAA,EAAAD,CAAA,GACFL,EADL,CAEEF,UAAWM,EAAO8D,KAAKpE,UACvBD,SAAUO,EAAO8D,KAAKrE,SACtBwG,WAAYjG,EAAO8D,KAAKmC,aAGrBrG,GCLH0G,cACJ,SAAAA,EAAY/D,GAAO,IAAAgE,EAAA,OAAAtG,OAAAuG,EAAA,EAAAvG,CAAAgC,KAAAqE,IACjBC,EAAAtG,OAAAwG,EAAA,EAAAxG,CAAAgC,KAAAhC,OAAAyG,EAAA,EAAAzG,CAAAqG,GAAAK,KAAA1E,KAAMM,KAURqE,mBAXmB3G,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAWE,SAAAC,IAAA,OAAAF,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd0E,EAAKhE,MAAMsE,eAAeZ,YAAca,OAAOC,SAASC,OAAO,KADjD,wBAAArF,EAAAK,SAAAR,EAAAS,SAXFsE,EAenBU,SAfmB,eAAA9C,EAAAlE,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAeR,SAAA6C,EAAO8C,GAAP,IAAAC,EAAA,OAAA7F,EAAAxC,EAAA4C,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cACT0E,EAAKa,cAAcF,GADV3C,EAAA1C,KAAA,EAEH0E,EAAKc,WAAWH,GAFb,UAGTX,EAAKe,iBACLf,EAAKgB,kBACLhB,EAAKiB,SAASN,GACTX,EAAKhE,MAAMT,OAAO2F,SAAS,iBANvB,CAAAlD,EAAA1C,KAAA,gBAAA0C,EAAA3C,KAAA,EAQCuF,EAAiBL,OAAOY,aAAaC,QAAQ,cACnDC,EAAe7D,SAAS8D,KAAKC,MAAMX,GAAgB7D,OAT9CiB,EAAA1C,KAAA,GAUC+F,EAAe1D,WAAWqC,EAAKhE,MAAMlC,SAVtC,QAWLkG,EAAKhE,MAAMwF,QAAQC,KAAK,KAXnBzD,EAAA1C,KAAA,iBAAA0C,EAAA3C,KAAA,GAAA2C,EAAA0D,GAAA1D,EAAA,SAaLgC,EAAKhE,MAAMrB,eAAe,iBAAkB,GAbvC,yBAAAqD,EAAAvC,SAAAoC,EAAAnC,KAAA,aAfQ,gBAAAC,GAAA,OAAAiC,EAAAhC,MAAAF,KAAApC,YAAA,GAAA0G,EAiCnBe,eAAiB,WACf,IACMY,GADS,IAAIC,WACAC,gBAAgB7B,EAAKhE,MAAMpC,KAAKV,SAAU,aACvDA,EAAW,GACjB,GAAiC,KAA7B8G,EAAKhE,MAAMpC,KAAKV,UAAmByI,EAAIG,qBAAqB,SAAS,GAGvE,IADA,IAAMhJ,EAAO6I,EAAIG,qBAAqB,SAAS,GAAGhJ,KAFyBiJ,EAAA,SAGlEC,GACP,IAAMC,EAAS,CACbC,KAAMpJ,EAAKkJ,GAAGG,MAAM,GAAGC,UACvBC,IAAKC,OAAOxJ,EAAKkJ,GAAGG,MAAM,GAAGC,UAAUG,QAAQ,MAAO,KACtDC,GAAIF,OAAOxJ,EAAKkJ,GAAGG,MAAM,GAAGC,UAAUG,QAAQ,MAAO,KACrDE,OAAQH,OAAOxJ,EAAKkJ,GAAGG,MAAM,GAAGC,UAAUG,QAAQ,MAAO,MAE3DN,EAAOS,MAAQhJ,OAAOiJ,KAAKV,GAAQW,OAAO,SAACrK,EAAGsK,GAAJ,OAAWZ,EAAO1J,GAAK0J,EAAOY,GAAKtK,EAAIsK,IACjFZ,EAAOa,OAASR,OAAOxJ,EAAKkJ,GAAGG,MAAM,GAAGC,UAAUG,QAAQ,MAAO,KACjEN,EAAOc,SAAWT,OAAOxJ,EAAKkJ,GAAGG,MAAM,GAAGC,UAAUG,QAAQ,MAAO,KACP,IAAxDrJ,EAAS8J,OAAO,SAAAC,GAAC,OAAIA,EAAEf,OAASD,EAAOC,OAAM3I,QAC/CL,EAASuI,KAAKQ,IAXTD,EAAI,EAAGA,EAAIlJ,EAAKS,OAAQyI,GAAQ,EAAGD,EAAnCC,QAeThC,EAAKhE,MAAMrB,eAAe,sCAAuC,GAE/DzB,EAASK,OAAS,GAAKL,EAASK,OAAS,IAC3CyG,EAAKhE,MAAMrB,eAAe,oBAAkB,GAC5CqF,EAAKhE,MAAMkH,YAAYhK,IAEvB8G,EAAKhE,MAAMrB,eAAe,sCAAuC,IA7DlDqF,EAiEnBgB,gBAAkB,WAChB,IACMW,GADS,IAAIC,WACAC,gBAAgB7B,EAAKhE,MAAMpC,KAAKT,UAAW,aACxDA,EAAY,GAClB,GAAkC,KAA9B6G,EAAKhE,MAAMpC,KAAKT,WAAoBwI,EAAIG,qBAAqB,SAAS,GAGxE,IADA,IAAMhJ,EAAO6I,EAAIG,qBAAqB,SAAS,GAAGhJ,KAF0BqK,EAAA,SAGnEnB,GACP,IAAMoB,EAAW,CACflB,KAAMpJ,EAAKkJ,GAAGG,MAAM,GAAGC,UAAUG,QAAQ,MAAO,IAChDG,MAAO5J,EAAKkJ,GAAGG,MAAM,GAAGC,UAAUG,QAAQ,MAAO,KAGY,IAA3DpJ,EAAU6J,OAAO,SAAAC,GAAC,OAAIA,EAAEf,OAASkB,EAASlB,OAAM3I,QAClDJ,EAAUsI,KAAK2B,IAPVpB,EAAI,EAAGA,EAAIlJ,EAAKS,OAAQyI,GAAQ,EAAGmB,EAAnCnB,QAWThC,EAAKhE,MAAMrB,eAAe,yCAA0C,GAGlExB,EAAUI,OAAS,KAAOJ,EAAUI,OAAS,KAC/CyG,EAAKhE,MAAMrB,eAAe,oBAAkB,GAC5CqF,EAAKhE,MAAMqH,aAAalK,IAExB6G,EAAKhE,MAAMrB,eAAe,yCAA0C,IA1FrDqF,EA8FnBc,WAAa,SAACH,GACZA,EAAE2C,iBACF,IAAMnK,EAAYwH,EAAE4C,OAAOC,cAAcC,MACzCzD,EAAKhE,MAAMwH,cAAcrK,GACzB,IAAMD,EAAWyH,EAAE4C,OAAOG,aAAaD,MACvCzD,EAAKhE,MAAM0H,aAAaxK,GACxByH,EAAE4C,OAAOG,aAAaD,MAAQ,GAC9B9C,EAAE4C,OAAOC,cAAcC,MAAQ,IArGdzD,EAwGnBa,cAAgB,SAACF,GACfA,EAAE2C,iBACF,IAAMjJ,EAAU,CACdL,IAAK2G,EAAE4C,OAAOvJ,IAAIyJ,MAClB1J,QAAS4G,EAAE4C,OAAOxJ,QAAQ0J,MAC1B3J,QAAS6G,EAAE4C,OAAOzJ,QAAQ2J,MAC1BvJ,MAAOyG,EAAE4C,OAAOrJ,MAAMuJ,MACtBtJ,QAAS6F,EAAK2D,MAAMxJ,QACpBI,mBAAoByF,EAAK2D,MAAMpJ,mBAC/BD,IAAK0F,EAAK2D,MAAMrJ,KAEmB,mBAA1B0F,EAAK2D,MAAMlJ,aACpBJ,EAAQI,WAAauF,EAAK2D,MAAMlJ,YACK,mBAA1BuF,EAAK2D,MAAMnJ,aACtBH,EAAQG,WAAawF,EAAK2D,MAAMnJ,YACA,mBAArBwF,EAAK2D,MAAMC,QACtBvJ,EAAQuJ,MAAQ5D,EAAK2D,MAAMC,OAE7B5D,EAAKhE,MAAM6H,WAAWxJ,GACtBsG,EAAE4C,OAAOvJ,IAAIyJ,MAAQ,GACrB9C,EAAE4C,OAAOxJ,QAAQ0J,MAAQ,GACzB9C,EAAE4C,OAAOzJ,QAAQ2J,MAAQ,GACzB9C,EAAE4C,OAAOrJ,MAAMuJ,MAAQ,IA9HNzD,EAiInBiB,SAAW,WAET,IAAMhH,EAAa,GACnB+F,EAAKhE,MAAM/B,WAAW6J,IAAI,SAAAC,GAAC,OAAKC,SAASC,eAAeF,EAAE7B,MAAMgC,QAC5DjK,EAAWwH,KAAKsC,GAAK,OACzB,IAAMI,EAAMlK,EAAW6J,IAAI,SAAAC,GAAC,OAAIA,EAAEtF,KAClCuB,EAAKhE,MAAMoI,cAAcD,IAvIRnE,EAsJnBqE,iBAAmB,SAACZ,GAClBzD,EAAKsE,SAAS,CACZ9J,WAAYiJ,KAxJGzD,EA4JnBuE,iBAAmB,SAACd,GAClBzD,EAAKsE,SAAS,CACZ7J,WAAYgJ,KA9JGzD,EAkKnBwE,YAAc,SAACf,GACbzD,EAAKsE,SAAS,CACZV,MAAOH,KApKQzD,EAwKnByE,SAAW,SAACC,GACV1E,EAAKsE,SAAL5K,OAAAiL,EAAA,EAAAjL,CAAA,GACGgL,EAAQ,MAxKX1E,EAAK2D,MAAQ,CACXxJ,QAAS,GACTI,oBAAoB,EACpBD,KAAK,EACLG,WAAY,GACZD,WAAY,GACZoJ,MAAO,IARQ5D,4EA0INW,KAAoB,IAAfvI,EAAemG,EAAfnG,KAAMqL,EAASlF,EAATkF,MACtB/H,KAAK4I,SAAL5K,OAAAiL,EAAA,EAAAjL,CAAA,GAAiBtB,EAAOqL,+CAIxB/H,KAAK4I,SAAS,CAAE/J,oBAAqBmB,KAAKiI,MAAMpJ,yDAIhDmB,KAAK4I,SAAS,CAAEhK,KAAMoB,KAAKiI,MAAMrJ,uCA2B1B,IAAAsK,EAAAlJ,KAEFmJ,EAASnJ,KAAKM,MAAMsE,eAAeZ,WAAWoE,IAAI,SAAAgB,GAAC,MAAQ,CAAEC,KAAMD,EAAGrB,MAAOqB,KAElF,OACExM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMkI,SAAUhF,KAAKgF,SAAUjC,GAAG,YAChCnG,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAACwM,EAAD,CAAW3M,MAAM,wDAAkDF,YAAY,UAAUC,KAAK,YAC9FE,EAAAC,EAAAC,cAACwM,EAAD,CAAW3M,MAAM,kBAAkBF,YAAY,OAAOC,KAAK,UAC3DE,EAAAC,EAAAC,cAACwM,EAAD,CAAW3M,MAAM,4BAA4BF,YAAY,MAAMC,KAAK,QACpEE,EAAAC,EAAAC,cAACyM,EAAD,CAAU5M,MAAM,kCAA+BF,YAAY,UAAUC,KAAK,YAC1EE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASwM,SAAO,EAACzI,MAAO,CAAEN,WAAY,YACpC7D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUyM,QAAM,EAACC,SAAU,kBAAMR,EAAKS,eADxC,iDAGE/M,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLlN,KAAK,oBACL8L,SAAmC,IAA1BxI,KAAKiI,MAAMnJ,WACpBnC,MAAM,wBACN+M,SAAU,kBAAMR,EAAKP,kBAAiB,OAGtC/L,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLlN,KAAK,oBACL8L,SAAmC,IAA1BxI,KAAKiI,MAAMnJ,WACpBnC,MAAM,+BACN+M,SAAU,kBAAMR,EAAKP,kBAAiB,OAGxC/L,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLlN,KAAK,oBACL8L,QAAmC,KAA1BxI,KAAKiI,MAAMnJ,WACpBnC,MAAM,UACN+M,SAAU,kBAAMR,EAAKH,SAAS,mBAIlCnM,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLpB,SAAmC,IAA1BxI,KAAKiI,MAAMlJ,WACpBpC,MAAM,+BACN+M,SAAU,kBAAMR,EAAKL,kBAAiB,OAGxCjM,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLpB,SAAmC,IAA1BxI,KAAKiI,MAAMlJ,WACpBpC,MAAM,6BACN+M,SAAU,kBAAMR,EAAKL,kBAAiB,OAGxCjM,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLpB,QAAmC,KAA1BxI,KAAKiI,MAAMlJ,WACpBpC,MAAM,UACN+M,SAAU,kBAAMR,EAAKH,SAAS,mBAKnCnM,EAAAC,EAAAC,cAAA,UAEKF,EAAAC,EAAAC,cAAA,UACFF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLpB,SAA8B,IAArBxI,KAAKiI,MAAMC,MACpBvL,MAAM,wBACN+M,SAAU,kBAAMR,EAAKJ,aAAY,OAGnClM,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLpB,SAA8B,IAArBxI,KAAKiI,MAAMC,MACpBvL,MAAM,uBACN+M,SAAU,kBAAMR,EAAKJ,aAAY,OAGnClM,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLpB,QAA8B,KAArBxI,KAAKiI,MAAMC,MACpBvL,MAAM,UACN+M,SAAU,kBAAMR,EAAKH,SAAS,gBAO1CnM,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,WACCkD,KAAKM,MAAM/B,WAAW6J,IAAI,SAAAC,GAAC,OACzBzL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACC6M,IAAKxB,EAAE7B,KACP7J,MAAO0L,EAAE7B,KACT9J,KAAK,aACLqG,GAAIsF,EAAE7B,SAEV5J,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUE,KAAK,OAAOR,KAAK,UAAUD,YAAY,kBAAkBiN,SAAU1J,KAAK8J,aAAaC,KAAK/J,MAAOgK,OAAK,EAACC,QAAM,EAACC,WAAS,EAACC,QAAShB,IAC3IvM,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASwM,SAAO,EAACzI,MAAO,CAAEN,WAAY,YACpC7D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUyM,QAAM,EAACC,SAAU,kBAAMR,EAAKkB,sBADxC,wDAIAxN,EAAAC,EAAAC,cAACuN,EAAD,MACAzN,EAAAC,EAAAC,cAACyM,EAAD,CACE9M,YAAY,oCACZC,KAAK,eACLC,MAAM,qIAERC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACyM,EAAD,CACE9M,YAAY,oCACZC,KAAK,gBACLC,MAAM,4HAERC,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQsN,UAAQ,EAACpN,KAAK,SAASH,UAAU,mBAAzC,WACHH,EAAAC,EAAAC,cAAA,oBArTakE,IAAMC,WAoUdE,cATS,SAAA8G,GAAK,MAAK,CAChC/J,KAAM+J,EAAM/J,KACZE,QAAS6J,EAAM7J,QACf4F,WAAYiE,EAAMjE,WAClBnE,OAAQoI,EAAMpI,OACdtB,WAAY0J,EAAM1J,WAClBqG,eAAgBqD,EAAMrD,iBAKtB,CACEkD,cP5TyB,SAAA5J,GAAI,sBAAAgE,EAAAlE,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAA6C,EAAO3C,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OACnCJ,EAAS,CACPtC,KAAM,iBACNgB,SAHiC,wBAAAoE,EAAAvC,SAAAoC,EAAAnC,SAAJ,gBAAAkD,GAAA,OAAAhB,EAAAhC,MAAAF,KAAApC,YAAA,IO6T7BoK,aPpUwB,SAAA9J,GAAI,sBAAA1B,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAAC,EAAOC,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClCJ,EAAS,CACPtC,KAAM,gBACNgB,SAHgC,wBAAAwB,EAAAK,SAAAR,EAAAS,SAAJ,gBAAAC,GAAA,OAAAzD,EAAA0D,MAAAF,KAAApC,YAAA,IOqU5B4J,YNjTuB,SAAAhK,GAAQ,sBAAAhB,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAAC,EAAOC,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrCJ,EAAS,CACPtC,KAAM,aACNM,aAHmC,wBAAAkC,EAAAK,SAAAR,EAAAS,SAAJ,gBAAAC,GAAA,OAAAzD,EAAA0D,MAAAF,KAAApC,YAAA,IMkT/B+J,aN3SwB,SAAAlK,GAAS,sBAAAyE,EAAAlE,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAA6C,EAAO3C,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OACvCJ,EAAS,CACPtC,KAAM,gBACNO,cAHqC,wBAAA6E,EAAAvC,SAAAoC,EAAAnC,SAAJ,gBAAAkD,GAAA,OAAAhB,EAAAhC,MAAAF,KAAApC,YAAA,IM4SjCuK,WNrSsB,SAAAxJ,GAAO,sBAAAkE,EAAA7E,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAAwD,EAAOtD,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OACnCJ,EAAS,CACPtC,KAAM,cACNyB,YAHiC,wBAAAqE,EAAAjD,SAAA+C,EAAA9C,SAAJ,gBAAAuD,GAAA,OAAAV,EAAA3C,MAAAF,KAAApC,YAAA,IMsS7BqB,iBACAyJ,cNhSyB,SAAAnK,GAAU,sBAAA6E,EAAApF,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAA+D,EAAO7D,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAA6D,GAAA,cAAAA,EAAA3D,KAAA2D,EAAA1D,MAAA,OACzCJ,EAAS,CACPtC,KAAM,iBACNqB,eAHuC,wBAAA+E,EAAAvD,SAAAsD,EAAArD,SAAJ,gBAAA6D,GAAA,OAAAT,EAAAlD,MAAAF,KAAApC,YAAA,IMiSnCqG,qBAVW9C,CAYbkD,YCxTakG,EAhCF,kBACX3N,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEL,SAAU,UAAtB,uGAEE9D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAHF,qjBAUEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAXF,uIAcEF,EAAAC,EAAAC,cAAA,KAAG+K,OAAO,SAAS2C,IAAI,sBAAsBC,KAAK,oCAAlD,yBAdF,wHAiBE7N,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CACEC,GAAG,SAEH/N,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ4N,KAAK,MAAMC,UAAQ,EAACrK,MAAM,QAAlC,wBAEF5D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ4N,KAAK,MAAMC,UAAQ,EAACrK,MAAM,SAASsK,QAAS,kBAAMjG,OAAOC,SAASC,OAAO,eAAjF,yBC/BA5G,EAAe,CACnB6F,WAAY,GACZxG,SAAU,CACR,CAAEd,KAAM,0CAAwCqO,MAAO,EAAGzM,IAAK,mCAC/D,CAAE5B,KAAM,8BAA4BqO,MAAO,EAAGzM,IAAK,mCACnD,CAAE5B,KAAM,sCAAoCqO,MAAO,EAAGzM,IAAK,mCAC3D,CAAE5B,KAAM,4CAA0CqO,MAAO,EAAGzM,IAAK,mCACjE,CAAE5B,KAAM,iCAA+BqO,MAAO,EAAGzM,IAAK,mCACtD,CAAE5B,KAAM,8BAAyBqO,MAAO,EAAGzM,IAAK,mCAChD,CAAE5B,KAAM,6CAA2CqO,MAAO,EAAGzM,IAAK,mCAClE,CAAE5B,KAAM,qCAAmCqO,MAAO,EAAGzM,IAAK,mCAC1D,CAAE5B,KAAM,4BAA0BqO,MAAO,EAAGzM,IAAK,mCACjD,CAAE5B,KAAM,8BAA4BqO,MAAO,EAAGzM,IAAK,mFAErDiI,OAAQ,IAmEKyE,EAhES,WAAkC,IAAjCrN,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBO,EAAcJ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClDyI,EAAS5I,EAAMH,SAAS8J,OAAO,SAAAC,GAAC,OAAIA,EAAE7K,OAASqB,EAAOb,OACtD+N,EAAWtN,EAAMH,SAAS8J,OAAO,SAAAC,GAAC,OAAIA,EAAE7K,OAASqB,EAAOb,OAM9D,GALIqJ,EAAO1I,OAAS,IAClB0I,EAAO,GAAGwE,MAAQxE,EAAO,GAAGwE,MAAQ,EACpCE,EAASlF,KAAKQ,EAAO,KAGH,YAAhBxI,EAAOb,KAAoB,CAC7B,IAAMgO,EAAMvN,EAAMqG,WAAWsD,OAAO,SAAAe,GAAC,OAAIA,EAAEtF,KAAOhF,EAAOK,QAAQ2E,KAEjE,OADAmI,EAAInF,KAAKhI,EAAOK,SACTJ,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBqG,WAAYkH,IAGjC,GAAoB,WAAhBnN,EAAOb,KACT,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmB4I,OAAQxI,EAAOwI,SAEpC,OAAQxI,EAAOb,MACb,IAAK,8BAEL,IAAK,8BAEL,IAAK,sCAEL,IAAK,4CAEL,IAAK,0CAEL,IAAK,8BAEL,IAAK,qCAEL,IAAK,4BAEL,IAAK,iCAEL,IAAK,6CACH,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBH,SAAUyN,IAGjC,OAAOtN,qBCxCIH,EAAW,CACtB,CACE6L,KAAM,WACNtB,MAAO,QAET,CACEsB,KAAM,WACNtB,MAAO,OAET,CACEsB,KAAM,MACNtB,MAAO,OAET,CACEsB,KAAM,aACNtB,MAAO,QAET,CACEsB,KAAM,mBACNtB,MAAO,OAET,CACEsB,KAAM,MACNtB,MAAO,OAET,CACEsB,KAAM,wBACNtB,MAAO,MAET,CACEsB,KAAM,mBACNtB,MAAO,OAIJ,SAASoD,EAAaC,GAC3B,IAAI7E,EAAS6E,EACb,OAAQA,GACN,IAAK,8BACH7E,EAAS,OACT,MACF,IAAK,sCACHA,EAAS,KACT,MACF,IAAK,4CACHA,EAAS,MACT,MACF,IAAK,0CACHA,EAAS,MACT,MACF,IAAK,8BACHA,EAAS,OACT,MACF,IAAK,qCACHA,EAAS,MACT,MACF,IAAK,iCACHA,EAAS,MACT,MACF,IAAK,6CACHA,EAAS,KAKb,OAAOA,EAEM,IC/ET8E,6MACJpD,MAAQ,CACNqD,KAAK,EACLC,MAAM,EACNlE,UAAU,EACVmE,QAAQ,EACRC,IAAK,GACLvD,MAAO,MAETvD,mBAAqB,WACnB,IAAMnH,EAAW8G,EAAKhE,MAAMsE,eAAepH,SACrC+I,EAAS4E,EAAa7G,EAAKhE,MAAMiG,QACvC,GAAIjC,EAAKhE,MAAMiG,QAAUjC,EAAKhE,MAAMlC,QAAS,CAC3C,IAAMoN,EAAShO,EAAS+I,GAAQ6B,IAAI,SAAAgB,GAAC,MACnC,CACE1B,SAAQ,GAAA1F,OAAKoH,EAAEsC,QAAP,KAAA1J,OAAkBoH,EAAEuC,UAC5B3E,MAAOoC,EAAE9E,EAAKhE,MAAMlC,YAElBkN,EAAME,EAAOlE,OAAO,SAAA8B,GAAC,MAA2B,6BAAvBA,EAAEpC,MAAM4E,YACf,4BAAvBxC,EAAEpC,MAAM4E,aACHL,EAAOC,EAAOlE,OAAO,SAAA8B,GAAC,MAA2B,+BAAvBA,EAAEpC,MAAM4E,YAChB,8BAAvBxC,EAAEpC,MAAM4E,aACHvE,EAAWmE,EAAO3N,OACpByN,EAAIzN,OAAS0N,EAAK1N,QACpByG,EAAKsE,SAAS,CACZ6C,IAAK,YAEHH,EAAIzN,OAAS0N,EAAK1N,QACtByG,EAAKsE,SAAS,CACZV,MAAO,eAGX5D,EAAKsE,SAAS,CACZ0C,MACAC,OACAlE,WACAmE,qFAMJ,OACE5O,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIiE,MAAO,CAAE8K,UAAW,WAAxB,4BACE7L,KAAKM,MAAMwL,MACblP,EAAAC,EAAAC,cAAA,MAAIiE,MAAO,CAAEN,WAAY,UAAWoL,UAAW,WAAa7L,KAAKM,MAAMiG,QAEvE3J,EAAAC,EAAAC,cAAA,UAAKkD,KAAKM,MAAMlC,SAChBxB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uDAAkDkD,KAAKiI,MAAMZ,UAChEzK,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEN,WAAYT,KAAKiI,MAAMC,QAAStL,EAAAC,EAAAC,cAAA,kBACzCkD,KAAKiI,MAAMsD,KAAK1N,OADnB,IAEIkO,KAAKC,MAAOhM,KAAKiI,MAAMsD,KAAK1N,OAASmC,KAAKiI,MAAMZ,SAAY,KAFhE,MAIAzK,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEN,WAAYT,KAAKiI,MAAMwD,MACjC7O,EAAAC,EAAAC,cAAA,iBADF,IACekD,KAAKiI,MAAMqD,IAAIzN,OAD9B,IAEIkO,KAAKC,MAAOhM,KAAKiI,MAAMqD,IAAIzN,OAASmC,KAAKiI,MAAMZ,SAAY,KAF/D,MAIErH,KAAKM,MAAMwL,MACblP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOiP,QAAM,EAACC,SAAO,EAACnJ,GAAG,SACvBnG,EAAAC,EAAAC,cAACE,EAAA,EAAMmP,OAAP,KACEvP,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,CAAkB/B,UAAQ,GAA1B,YACA1N,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,gBAKJzP,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACGtM,KAAKiI,MAAMuD,OAAOpD,IAAI,SAAAgB,GAAC,OAEvBxM,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKT,EAAE1B,UAChB9K,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,SAAcnD,EAAE1B,UAChB9K,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAanD,EAAEpC,oBAzENhG,IAAMC,WAsFfE,cAJS,SAAA8G,GAAK,MAAK,CAChCrD,eAAgBqD,EAAMrD,iBAGTzD,CAAyBkK,GCvFlCmB,6MACJvE,MAAQ,CACNxK,UAAW,GACXgP,MAAO,MAET9H,mBAAqB,WACnB,IAKM+H,EALYpI,EAAKhE,MAAM7C,UAAU2K,IAAI,SAAAgB,GAAC,MAAK,CAC/C5C,KAAM4C,EAAE5C,KAAKmG,MAAM,KAAK,GACxBpG,OAAQjC,EAAK6G,aAAa/B,EAAE5C,KAAKmG,MAAM,KAAK,IAC5C3F,MAAOoC,EAAEpC,SAEWM,OAAO,SAAA8B,GAAC,OAAIA,EAAE7C,SAAWjC,EAAKhE,MAAMiG,SAC1D,GAAImG,EAAI7O,OAAS,GACfyG,EAAKsE,SAAS,CACZnL,UAAWiP,QAER,CACL,IAAME,EAAStI,EAAKuI,WAAWH,EAAK,IAC9BD,EAAQ,GACdG,EAAOE,QAAQ,SAAC/E,EAAOgF,GACrBN,EAAM1G,KAAK,CACTiH,SAAUD,EAAMnB,WAChBqB,OAAQ,kBAEJrQ,EAAAC,EAAAC,cAACE,EAAA,EAAIkQ,KAAL,KACEtQ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOiP,QAAM,EAAClJ,GAAG,OACfnG,EAAAC,EAAAC,cAACE,EAAA,EAAMmP,OAAP,KACEvP,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,aACAzP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,gBAGJzP,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACGvE,EAAMK,IAAI,SAAA+E,GAAC,OACVvQ,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKsD,EAAE3G,MAChB5J,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAaY,EAAE3G,MACf5J,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,CAAYxL,MAAO,CACrBN,WACE6D,EAAK9D,MAAM2M,EAAEnG,SAEXmG,EAAEnG,kBAUtB1C,EAAKsE,SAAS,CACZ6D,cAKNI,WAAa,SAACO,EAASC,GACrB,IAAIN,EAAQ,EACNO,EAAcF,EAAQvP,OACtB0P,EAAY,GAElB,IAAKR,EAAQ,EAAGA,EAAQO,EAAaP,GAAgBM,EAAO,CAC1D,IAAMG,EAAUJ,EAAQK,MAAMV,EAAOA,EAAQM,GAC7CE,EAAUxH,KAAKyH,GAGjB,OAAOD,KAGVpC,aAAe,SAACC,GACd,IAAI7E,EAAS6E,EACb,OAAQA,GACN,IAAK,OACH7E,EAAS,8BACT,MACF,IAAK,KACHA,EAAS,sCACT,MACF,IAAK,MACHA,EAAS,4CACT,MACF,IAAK,KACHA,EAAS,0CACT,MACF,IAAK,OACHA,EAAS,8BACT,MACF,IAAK,MACHA,EAAS,qCACT,MACF,IAAK,IACHA,EAAS,iCACT,MACF,IAAK,KACHA,EAAS,6CAKb,OAAOA,KAGT/F,MAAQ,SAACmG,GACP,MAAY,QAARA,EACK,UACK,OAARA,EACG,UAEF,8EAGA,IAAAuC,EAAAlJ,KACP,OACEpD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKkD,KAAKM,MAAMiG,QACfvG,KAAKiI,MAAMxK,UAAUI,OAAS,GAC/BjB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOiP,QAAM,GACXrP,EAAAC,EAAAC,cAACE,EAAA,EAAMmP,OAAP,KACEvP,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,aACAzP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,gBAGJzP,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACGtM,KAAKiI,MAAMxK,UAAU2K,IAAI,SAAAgB,GAAC,OACzBxM,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKT,EAAE5C,MAChB5J,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAanD,EAAE5C,MACf5J,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,CAAYxL,MAAO,CACZN,WACEyI,EAAK1I,MAAM4I,EAAEpC,SAEpBoC,EAAEpC,YAOZpK,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAKyP,MAAOzM,KAAKiI,MAAMwE,MAAO1L,MAAO,CAAEN,WAAY,mBA1IpCO,IAAMC,WAmJbE,cAHS,SAAA8G,GAAK,MAAK,CAChCjE,WAAYiE,EAAMjE,aAIlB,KAFa7C,CAGbqL,GCjJIkB,8MACJzF,MAAQ,CACN0F,MAAOrJ,EAAKhE,MAAMsN,SAAS5J,WAAWnG,OACtCiO,MAAM,EACNvF,OAAQ,iCAGVuF,KAAO,SAACvF,GACFA,GACFjC,EAAKsE,SAAS,CACZrC,WAGJjC,EAAKsE,SAAS,CACZkD,MAAOxH,EAAK2D,MAAM6D,UAGxBtL,MAAQ,SAACmG,GACP,MAAY,QAARA,EACK,UACK,OAARA,EACG,UAEF,8EAGA,IAAAuC,EAAAlJ,KAGP,OACEpD,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAAEF,QAAS,MAAOgN,YAAa,QACzCjR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE8Q,KAAM9N,KAAKiI,MAAM6D,KACjBiC,sBAAsB,EACtBC,WAAY,CAAEC,UAPF,kBAOaC,SANd,MAQXtR,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAS+D,MAAO,CACNoN,KAAM,MACNC,SAAU,QACVC,IAAK,MACLxN,QAAS,QAGjBjE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQsR,QAAQ,QAAQ9N,MAAM,MAAMqK,UAAQ,EAACC,QAAS,kBAAM5B,EAAK4C,SAAjE,sBACAlP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ+D,MAAO,CAAEwN,eAAgB,cAAgBvO,KAAKiI,MAAM1B,QAE5D3J,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOkP,SAAO,EAACD,QAAM,EAAClJ,GAAG,SACvBnG,EAAAC,EAAAC,cAACE,EAAA,EAAMmP,OAAP,KACEvP,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,gBACAzP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,uBACAzP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,0BACAzP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,0CAGJzP,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACGtM,KAAKM,MAAMsN,SAAS5J,WAAWoE,IAAI,SAAAgB,GAAC,OAEnCxM,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKT,EAAErG,IAChBnG,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KACE3P,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEL,SAAU,UAAY0I,EAAEhL,UAEtCxB,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,CACExL,MAAO,CACLN,WACEyI,EAAK1I,MAAM4I,EAAE5L,SAASgR,KAAK,SAAArB,GAAC,OAAIA,EAAE3G,OAAS0C,EAAKjB,MAAM1B,SAAQS,SAGjEoC,EAAE5L,SAASgR,KAAK,SAAArB,GAAC,OAAIA,EAAE3G,OAAS0C,EAAKjB,MAAM1B,SAAQS,OAEtDpK,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KACE3P,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEyR,QAAS7R,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQwD,MAAM,OAAOkO,KAAK,QACnCC,GAAG,QACHP,SAAS,cACTrN,MAAO,CACLN,WAAY,YAGd7D,EAAAC,EAAAC,cAACE,EAAA,EAAM4R,QAAP,CAAe7N,MAAO,CAAEF,QAAS,MAAOJ,WAAY,UAClD7D,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEL,SAAU,QAAU0I,EAAEhL,SAClCxB,EAAAC,EAAAC,cAAC+R,EAAD,CAASpR,UAAW2L,EAAE3L,UAAW8I,OAAQ2C,EAAKjB,MAAM1B,YAI1D3J,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KACE3P,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEyR,QAAS7R,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQwD,MAAM,OAAOkO,KAAK,QACnCC,GAAG,QACH5N,MAAO,CACLN,WAAY,YAGd7D,EAAAC,EAAAC,cAACE,EAAA,EAAM4R,QAAP,CAAe7N,MAAO,CACpBN,WAAY,QACZI,QAAS,QAGRuI,EAAEvK,oBACHjC,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEF,QAAS,QAASJ,WAAY,YAA1C,4CAIA7D,EAAAC,EAAAC,cAACgS,EAAD,CAAWvI,OAAQ2C,EAAKjB,MAAM1B,OAAQnI,QAASgL,EAAE3K,oBASnE7B,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOkP,SAAO,EAACD,QAAM,EAAClJ,GAAG,SACvBnG,EAAAC,EAAAC,cAACE,EAAA,EAAMmP,OAAP,KACEvP,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,CAAkB/B,UAAQ,GAA1B,QACA1N,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,CAAkB/B,UAAQ,GAA1B,qBACA1N,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,8BAC6BrM,KAAKiI,MAAM0F,MADxC,0BAGA/Q,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,CAAkB/B,UAAQ,GAA1B,2BAGJ1N,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACGyC,IAAEC,QAAQhP,KAAKM,MAAMsN,SAASpQ,SAAU,CAAC,SAAU,CAAC,SAAS4K,IAAI,SAAAgB,GAAC,OAE7DxM,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKT,EAAE1M,MAChBE,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KACE3P,EAAAC,EAAAC,cAAA,OAAKmS,IAAK7F,EAAE9K,IAAK4Q,IAAK9F,EAAE1M,KAAMyS,OAAO,OAAOC,MAAM,WAEpDxS,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KACE3P,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEL,SAAU,UAAY0I,EAAE1M,OAEtCE,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAaR,KAAKC,MAAO5C,EAAE2B,MAAQ7B,EAAKjB,MAAM0F,MAAS,KAAvD,MACA/Q,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KACc,gCAAXnD,EAAE1M,MAAkD,8BAAX0M,EAAE1M,KAC1CE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQwD,MAAM,OAAOqK,UAAQ,EAACC,QAAS,kBAAM5B,EAAK4C,KAAK1C,EAAE1M,QAAzD,0BACAE,EAAAC,EAAAC,cAAA,gDAzIKkE,IAAMC,WAwJlBE,eALS,SAAA8G,GAAK,MAAK,CAChC2F,SAAU3F,EAAM2F,SAChBhJ,eAAgBqD,EAAMrD,iBAKtB,CAAEyK,UJhGqB,SAAAnQ,GAAO,sBAAAgD,EAAAlE,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAA6C,EAAO3C,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,OAClCJ,EAAS,CACPtC,KAAM,SACNqJ,OAAQrH,IAHwB,wBAAAoD,EAAAvC,SAAAoC,EAAAnC,SAAJ,gBAAAkD,GAAA,OAAAhB,EAAAhC,MAAAF,KAAApC,YAAA,KI8FjBuD,CAGbuM,IC5JI4B,uBACJ,SAAAA,EAAYhP,GAAO,IAAAgE,EAAA,OAAAtG,OAAAuG,EAAA,EAAAvG,CAAAgC,KAAAsP,IACjBhL,EAAAtG,OAAAwG,EAAA,EAAAxG,CAAAgC,KAAAhC,OAAAyG,EAAA,EAAAzG,CAAAsR,GAAA5K,KAAA1E,KAAMM,KAWRqE,mBAZmB3G,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAYE,SAAAC,IAAA,IAAAgQ,EAAAC,EAAA,OAAAnQ,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb2P,EAAYjL,EAAKmL,gBAAgBnL,EAAKhE,MAAM0D,aAC5CwL,EAAqBlL,EAAKoL,QAAQH,IACf,GACvBC,EAAmB/B,MAAM,GAE3BnJ,EAAKsE,SAAS,CACZ5E,WAAYwL,IAETlL,EAAK2D,MAAM7J,QAKdyG,OAAOC,SAASC,OAAO,KAJvBT,EAAKsE,SAAS,CACZxK,QAASoR,EAAmBlL,EAAK2D,MAAM0H,WAXxB,wBAAAjQ,EAAAK,SAAAR,EAAAS,SAZFsE,EA8BnBmL,gBAAkB,SAACF,GACjB,IAAIK,EAAmBL,EACjBM,EAAsBvL,EAAKhE,MAAMuP,oBASvC,OARIvL,EAAKhE,MAAMwP,OACbF,EAAmBL,EAAUjI,OAAQ,SAAAyI,GAAQ,OAAIA,EAASnR,OACtDiR,EAAoBhS,OAAS,GAED,KADhC+R,EAAmBL,EAAUjI,OAAQ,SAAA0I,GAAC,OAAIH,EAAoBI,KAAK,SAAAC,GAAG,OAAIF,EAAEzR,WAAW6J,IAAI,SAAAC,GAAC,OAAIA,EAAE7B,OAAMhB,SAAS0K,QAC5FrS,QACnByG,EAAKhE,MAAMrB,eAAe,oHAAmG,IAG1H2Q,GAzCUtL,EA4CnBoL,QAAU,SAACS,GAMT,IAJA,IACEC,EACAC,EAFEC,EAAeH,EAAMtS,OAID,IAAjByS,GAELD,EAActE,KAAKwE,MAAMxE,KAAKyE,SAAWF,GAIzCF,EAAiBD,EAHjBG,GAA8B,GAI9BH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OAAOD,GA7DU7L,EAgEnBwH,KAAO,WACLxH,EAAKsE,SAAS,CACZkD,MAAOxH,EAAK2D,MAAM6D,QAlEHxH,EAsEnBmM,aAAe,WACbnM,EAAKsE,SAAS,CACZ6H,cAAenM,EAAK2D,MAAMwI,gBAxEXnM,EA4EnBoM,SAAU,WACRpM,EAAKsE,SAAS,CACZ8H,UAAWpM,EAAK2D,MAAMyI,YA9EPpM,EAmFnB7F,QAAU,SAACA,GACT6F,EAAKhE,MAAM2B,WAAWqC,EAAK2D,MAAM7J,SACjC,IAAMuS,EAAcrM,EAAK2D,MAAM7J,QAAQZ,SAAS8J,OAAO,SAAAC,GAAC,OAAIA,EAAEP,QAAUvI,IAExE,IADa6F,EAAKhE,MAAMsN,SAAS5J,WAAWwK,KAAK,SAAApF,GAAC,OAAIA,EAAEhL,UAAYkG,EAAK2D,MAAM7J,QAAQA,UAErF,IAAK,IAAIkI,EAAI,EAAGA,EAAIqK,EAAYvI,IAAI,SAAAb,GAAC,OAAIA,EAAEf,OAAM3I,OAAQyI,GAAQ,EAC/DhC,EAAKhE,MAAMsQ,WAAWD,EAAYvI,IAAI,SAAAb,GAAC,OAAIA,EAAEf,OAAMF,IAGvDhC,EAAKsE,SAAS,CACZ+G,QAASrL,EAAK2D,MAAM0H,QAAU,EAC9BvR,QAASkG,EAAK2D,MAAMjE,WAAWM,EAAK2D,MAAM0H,QAAU,GACpDc,cAAc,EACd3E,MAAM,KA9FRxH,EAAK2D,MAAQ,CACXjE,WAAY,GACZ2L,QAAS,EACTvR,QAAS,KACT0N,MAAM,EACN4E,UAAU,EACVD,cAAc,GARCnM,wEAoGV,IAAA4E,EAAAlJ,KAEP,GADAuC,QAAQC,IAAI,QAASxC,KAAKiI,OACtBK,SAASC,eAAe,gBAAiB,CAC3C,IAAMsI,EAAUvI,SAASC,eAAe,gBACxChG,QAAQC,IAAIqO,GAEd,IAAMC,EAAU,CAAEC,QAAS/Q,KAAKiI,MAAM6D,KAAO,GAAK,QAElD,OAAI9L,KAAKM,MAAMsN,SAAS5J,WAAWnG,SAAWmC,KAAKiI,MAAMjE,WAAWnG,OAEhEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS,kBAAMjG,OAAOC,SAASC,OAAO,UAAUiM,OAAK,EAACxQ,MAAM,QAApE,uDAGA5D,EAAAC,EAAAC,cAACmU,GAAD,QAIDjR,KAAKiI,MAAM7J,SACdyG,OAAOC,SAASC,OAAO,KAGvBnI,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQkU,GAAG,MAAMtU,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAE8M,YAAa,QAASnN,SAAU,UAA5C,wBAEnB9D,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,IACpBxS,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,EAAGvD,UAAU,SAASuF,cAAc,UACtDxU,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBiD,KAAKM,MAAMsN,SAAS5J,WAAWnG,OAAS,KAG3EjB,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,KACEvU,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAK4R,QAAN,KACEhS,EAAAC,EAAAC,cAACE,EAAA,EAAKmP,OAAN,KACEvP,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEL,SAAU,QAAUV,KAAKiI,MAAM7J,QAAQA,QAAQxB,EAAAC,EAAAC,cAAA,YAC3DF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS9K,KAAK8L,KAAMlB,KAAK,OAAOoG,OAAK,GAA7C,sBAEFpU,EAAAC,EAAAC,cAACE,EAAA,EAAKqU,YAAN,CAAkBtQ,MAAO+P,GACvBlU,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAKkD,KAAKiI,MAAM7J,QAAQC,SACxBzB,EAAAC,EAAAC,cAAA,mCAAqBkD,KAAKiI,MAAM7J,QAAQI,OACxC5B,EAAAC,EAAAC,cAAA,cAAKF,EAAAC,EAAAC,cAAA,KAAG+K,OAAO,SAAS2C,IAAI,sBAAsBC,KAAMzK,KAAKiI,MAAM7J,QAAQE,KAAtE,8BASjB1B,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQgN,OAAK,EAACc,QAAS,kBAAM5B,EAAKzK,QAAQ,QAAQmM,KAAK,MAAMpK,MAAM,SAAnE,QAEF5D,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQgN,OAAK,EAACc,QAAS,kBAAM5B,EAAKzK,QAAQ,QAAQmM,KAAK,MAAMpK,MAAM,SAAnE,iBAEF5D,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQgN,OAAK,EAACc,QAAS,kBAAM5B,EAAKzK,QAAQ,OAAOmM,KAAK,MAAMpK,MAAM,OAAlE,OAEF5D,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAAEL,SAAU,QACtB9D,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UACGkD,KAAKiI,MAAM7J,QAAQG,WAAW6J,IAAI,SAAAgB,GAAC,OAClCxM,EAAAC,EAAAC,cAAA,MAAI+M,IAAKT,EAAEkI,KAAMlI,EAAE5C,oBAzKbxF,IAAMC,YAyLbE,eALS,SAAA8G,GAAK,MAAK,CAChCjE,WAAYiE,EAAMjE,WAClB4J,SAAU3F,EAAM2F,WAKhB,CACEgD,WL1HsB,SAAA1R,GAAO,sBAAA2D,EAAA7E,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAAwD,EAAOtD,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,OACnCJ,EAAS,CACPtC,KAAMgC,IAF2B,wBAAA8D,EAAAjD,SAAA+C,EAAA9C,SAAJ,gBAAAuD,GAAA,OAAAV,EAAA3C,MAAAF,KAAApC,YAAA,IK2H7BqE,WLzIsB,SAAA/C,GAAO,sBAAA1C,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAAC,EAAOC,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnCJ,EAAS,CACPtC,KAAM,UACNkB,QAASc,IAHwB,wBAAAQ,EAAAK,SAAAR,EAAAS,SAAJ,gBAAAC,GAAA,OAAAzD,EAAA0D,MAAAF,KAAApC,YAAA,IK0I7BqB,kBALWkC,CAObmO,ICnMIiC,8MACFtJ,MAAQ,CACNuJ,eAAe,EACfC,cAAc,EACdC,WAAY,MAIdC,mBAAqB,WACnBrN,EAAKsE,SAAS,CACZ6I,cAAenN,EAAK2D,MAAMwJ,kBAI9BD,cAAgB,WACdlN,EAAKsE,SAAS,CACZ4I,eAAe,OAInBI,iBAAmB,SAACC,GAClB,GAAIvN,EAAK2D,MAAMyJ,WAAWlM,SAASqM,GACjCvN,EAAKsE,SAAS,CACZ8I,WAAYpN,EAAK2D,MAAMyJ,WAAWpK,OAAO,SAAA4I,GAAG,OAAIA,IAAQ2B,UAErD,CACL,IAAMC,EAAOxN,EAAK2D,MAAMyJ,WACxBI,EAAK/L,KAAK8L,GACVvN,EAAKsE,SAAS,CACZ8I,WAAYI,8EAKT,IAAA5I,EAAAlJ,KACP,OAAIA,KAAKiI,MAAMuJ,cAEX5U,EAAAC,EAAAC,cAACiV,GAAD,CAASjC,KAAM9P,KAAKiI,MAAMwJ,aAAc5B,oBAAqB7P,KAAKiI,MAAMyJ,aAI1E9U,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mDACAF,EAAAC,EAAAC,cAAA,kEAGAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE+D,MAAO,CAAEF,QAAS,MAAOC,aAAc,OACvC2I,QAAM,EACN9M,MAAM,yBACN6L,QAASxI,KAAKiI,MAAMwJ,aACpB/H,SAAU,kBAAMR,EAAKyI,yBAErB3R,KAAKiI,MAAMwJ,cACb7U,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAACF,QAAS,MAAOmR,OAAQ,MAAOC,YAAa,UAAWtR,YAAa,UAC/E/D,EAAAC,EAAAC,cAAA,wBACCkD,KAAKM,MAAM/B,WAAW6J,IAAI,SAAA8J,GAAK,OAC9BtV,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE6M,IAAKqI,EAAMnP,GACXpG,MAAO,CAAEwV,SAAUD,EAAM1L,MACzBzF,MAAO,CAACF,QAAS,SACjB2H,QAASU,EAAKjB,MAAMyJ,WAAWlM,SAAS0M,EAAM1L,MAC9CkD,SAAU,kBAAMR,EAAK0I,iBAAiBM,EAAM1L,YAIlD5J,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ4N,KAAK,MAAMC,UAAQ,EAACrK,MAAM,OAAOsK,QAAS,kBAAM5B,EAAKsI,kBAA7D,+BAnEaxQ,IAAMC,WA6EdE,eAJS,SAAA8G,GAAK,MAAK,CAChC1J,WAAY0J,EAAM1J,aAGL4C,CAAyBoQ,cC5ElCa,eACJ,SAAAA,EAAY9R,GAAO,IAAAgE,EAAA,OAAAtG,OAAAuG,EAAA,EAAAvG,CAAAgC,KAAAoS,IACjB9N,EAAAtG,OAAAwG,EAAA,EAAAxG,CAAAgC,KAAAhC,OAAAyG,EAAA,EAAAzG,CAAAoU,GAAA1N,KAAA1E,KAAMM,KAKN+R,OAAS,WACPxN,OAAOY,aAAa6M,WAAW,cAC/BzN,OAAOC,SAASC,OAAO,MARRT,EAWjBwH,KAAO,SAACyG,GACNA,EAAM3K,iBACNtD,EAAKsE,SAAS,CACZkD,MAAOxH,EAAK2D,MAAM6D,QAZtBxH,EAAK2D,MAAQ,CACX6D,MAAM,GAHSxH,wEAkBR,IAAA4E,EAAAlJ,KACDwS,EAAQ,CAAEhS,MAAO,QAASiS,WAAY,OAC5C,OACE7V,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAAEL,SAAU,QACtB9D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE8N,QAAS9K,KAAK8L,KACd/K,MAAO,CACDiR,OAAQ,OAEdtV,KAAK,SAENsD,KAAKiI,MAAM6D,MACZlP,EAAAC,EAAAC,cAAC4V,GAAA,MAAD,CAAQC,OAAK,EAACvD,MAAM,MAAMwD,QAAM,GAC9BhW,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE8N,QAAS9K,KAAK8L,KACd/K,MAAO,CACHP,MAAO,QACPiS,WAAY,MACZI,cAAe,OAEnBnW,KAAK,+BAEPE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAM3J,MAAOyR,EAAO7H,GAAG,KAAvB,YACA/N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAM3J,MAAOyR,EAAO7H,GAAG,SAAvB,aACA/N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAM3J,MAAOyR,EAAO7H,GAAG,eAAvB,cACA/N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAM3J,MAAOyR,EAAO7H,GAAG,eAAvB,cACA/N,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAM3J,MAAOyR,EAAO7H,GAAG,eAAvB,cACC9F,OAAOY,aAAaC,QAAQ,eAC7B9I,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAM3J,MAAOyR,EAAO7H,GAAG,UAAvB,gBAEC9F,OAAOY,aAAaC,QAAQ,eAC7B9I,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAAE0R,WAAY,QACxB7V,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS,kBAAM5B,EAAKmJ,UAAUzH,KAAK,OAAO1N,KAAK,UAAvD,4BArDI8D,IAAMC,WAkETE,eAJS,SAAA8G,GAAK,MAAK,CAChC6K,KAAM7K,EAAM6K,OAGC3R,CAAyBiR,cClElCW,8MACJ9K,MAAQ,CACNsH,UAAWjL,EAAKhE,MAAMiP,UACtByD,YAAa,EACbC,WAAY,EACZC,eAAgB,EAChBC,aAAc,EACdC,SAAU,GACVC,YAAa,CACX,CACExR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,8BACPsV,YAAa,mBACbqB,gBAAiB,yBAEnB,CACEzR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,4CACPsV,YAAa,oBACbqB,gBAAiB,0BAEnB,CACEzR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,0CACPsV,YAAa,iBACbqB,gBAAiB,uBAEnB,CACEzR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,4BACPsV,YAAa,qBACbqB,gBAAiB,2BAEnB,CACEzR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,sCACPsV,YAAa,iBACbqB,gBAAiB,uBAEnB,CACEzR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,8BACPsV,YAAa,qBACbqB,gBAAiB,2BAEnB,CACEzR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,iCACPsV,YAAa,mBACbqB,gBAAiB,yBAEnB,CACEzR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,qCACPsV,YAAa,qBACbqB,gBAAiB,2BAEnB,CACEzR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,6CACPsV,YAAa,oBACbqB,gBAAiB,0BAEnB,CACEzR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,+BACPsV,YAAa,mBACbqB,gBAAiB,yBAEnB,CACEzR,KAAM,CAAC,KAAM,KAAM,KAAM,KAAM,MAC/BlF,MAAO,uCAGX4W,gBAAiB,GACjBC,YAAY,KAGdC,YAAc,WACZnP,EAAKsE,SAAS,CACZ2K,gBAAiBjP,EAAK2D,MAAMoL,YAAYjL,IAAI,SAAAsL,GAAG,OAAIA,EAAI/W,UAEzD,IAAM4S,EAAYjL,EAAKhE,MAAMiP,UACvBoE,EAAiBpE,EAAUjI,OAAO,SAAA0I,GAAC,OAAIA,EAAE4D,eAAe,gBACxDC,EAAoBtE,EAAUjI,OAAO,SAAA0I,GAAC,OAAIA,EAAE4D,eAAe,gBAC3DE,EAAiBvE,EAAUjI,OAAO,SAAA0I,GAAC,OAAIA,EAAE4D,eAAe,WAE9DD,EAAe7G,QAAQ,SAAAkD,GAAC,OAAI1L,EAAKyP,mBAAmB/D,EAAG,YACvD6D,EAAkB/G,QAAQ,SAAAkD,GAAC,OAAI1L,EAAKyP,mBAAmB/D,EAAG,eAC1D8D,EAAehH,QAAQ,SAAAkD,GAAC,OAAI1L,EAAKyP,mBAAmB/D,EAAG,cAGzD+D,mBAAqB,SAAChE,EAAUpT,GAC1BoT,EAASjR,WACXiR,EAASvS,SAASsP,QAAS,SAAA1B,GAAK,OAAI9G,EAAK0P,sBAAsB5I,GAAO,EAAMzO,KAE5EoT,EAASvS,SAASsP,QAAS,SAAA1B,GAAK,OAAI9G,EAAK0P,sBAAsB5I,GAAO,EAAOzO,QAIjFqX,sBAAwB,SAAC5I,EAAOzE,EAAKhK,GACnC,IAAIoQ,EAAQ,GACE,WAAVpQ,EACFoQ,EAAQpG,EAAM,EAAI,EACA,cAAThK,EACToQ,EAAQpG,EAAM,EAAI,EACC,UAAVhK,IACToQ,EAAQ,GAEVxK,QAAQC,IAAI,QAASuK,GAED,QAAhB3B,EAAMpE,MAEP1C,EAAK2P,qBAAqB7I,EAAO2B,GAChB,GAATA,GAETzI,EAAK2P,qBAAqB7I,EAAO2B,MAIrCkH,qBAAuB,SAAC7I,EAAO2B,GAC7B,IAAImH,EAAkB5P,EAAK2D,MAAMoL,YACjC9Q,QAAQC,IAAI,YAAa4I,EAAM5E,MAC/B,IAAM2N,EAAeD,EAAgB1F,KAAK,SAAA3M,GAAI,OAAIA,EAAKlF,MAAMkK,QAAQ,MAAO,MAAQuE,EAAM5E,KAAKK,QAAQ,MAAO,MAAKhF,KAAKkL,GACxHxK,QAAQC,IAAI,UAAW2R,GAEvBD,EAAgB1F,KAAK,SAAA3M,GAAI,OAAIA,EAAKlF,MAAMkK,QAAQ,MAAO,MAAQuE,EAAM5E,KAAKK,QAAQ,MAAO,MAAKhF,KAAKkL,GAASoH,EAAe,EAC3H5R,QAAQC,IAAI,WAAY0R,EAAgB1F,KAAK,SAAA3M,GAAI,OAAIA,EAAKlF,MAAMkK,QAAQ,MAAO,MAAQuE,EAAM5E,KAAKK,QAAQ,MAAO,MAAKhF,MAEtHyC,EAAKsE,SAAS,CACZyK,YAAaa,OAIjBV,WAAa,SAACvO,GACZ,IAAMsO,EAAkBjP,EAAK2D,MAAMuL,WAAa,GAAKlP,EAAK2D,MAAMoL,YAAYjL,IAAI,SAAAsL,GAAG,OAAIA,EAAI/W,QAC3F2H,EAAKsE,SAAS,CACZ4K,YAAalP,EAAK2D,MAAMuL,WACxBD,uBAIJa,cAAgB,SAAChJ,GACf,GAAI9G,EAAK2D,MAAMsL,gBAAgB/N,SAAS4F,GACtC9G,EAAKsE,SAAS,CACZ2K,gBAAiBjP,EAAK2D,MAAMsL,gBAAgBjM,OAAO,SAAA+M,GAAK,OAAIA,IAAUjJ,UAEnE,CACL,IAAM0G,EAAOxN,EAAK2D,MAAMsL,gBACxBzB,EAAK/L,KAAKqF,GACV9G,EAAKsE,SAAS,CACZ8I,WAAYI,8EAKT,IAAA5I,EAAAlJ,KACHA,KAAKM,MAAMiP,WAAavP,KAAKiI,MAAMsH,YACrCvP,KAAK4I,SAAS,CACZ2G,UAAWvP,KAAKM,MAAMiP,YAExBvP,KAAKyT,eAEP,IAAMD,EAAaxT,KAAKiI,MAAMoL,YAAYjL,IAAI,SAAAsL,GAAG,OAAIA,EAAI/W,QAEzD,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIiE,MAAO,CAAC8K,UAAW,WAAvB,kCACC7L,KAAKiI,MAAMsH,WACV3S,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAAC0R,WAAY,MAAO5G,UAAW,WACzCjP,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAACiR,OAAQ,MAAOnR,QAAS,UAAnC,0FACAjE,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAAC8K,UAAW,SAAUyI,UAAU,QAC9C1X,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACIL,MAAO,CAAEwV,SAAU,sBACnBpR,MAAO,CAACF,QAAS,SACjB2H,QAASxI,KAAKiI,MAAMuL,WACpB9J,SAAU,kBAAMR,EAAKsK,gBACrB5W,EAAAC,EAAAC,cAAA,WACH0W,EAAWpL,IAAI,SAAAgD,GAAK,OACnBxO,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE6M,IAAKuB,EACLzO,MAAO,CAAEwV,SAAU/G,GACnBrK,MAAO,CAACF,QAAS,SACjB2H,QAASU,EAAKjB,MAAMsL,gBAAgB/N,SAAS4F,GAC7C1B,SAAU,kBAAMR,EAAKkL,cAAchJ,QAExCxO,EAAAC,EAAAC,cAAA,YAEGF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyX,GAAA,EAAD,CACEpK,QAAW,CACTqK,OAAQ,CACN3T,QAAS,IAEX4T,OAAQ,CACNC,OAAQ,CAEJhU,SAAU,MAKlBmB,KAAQ,CACN6S,OAAQ,CAAC,oBAAqB,kBAAoB,UAAW,cAAe,qBAC5EC,SAAU3U,KAAKiI,MAAMoL,YAAY/L,OAAO,SAAA8D,GAAK,OAAIlC,EAAKjB,MAAMsL,gBAAgB/N,SAAS4F,EAAMzO,cAOrGC,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAACiR,OAAQ,MAAOnR,QAAS,MAAO+T,YAAa,MAAO3C,YAAa,UAAWtR,YAAa,UACnG/D,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAACL,SAAU,UAArB,ugBArNcM,IAAMC,WAwOfE,eAJS,SAAA8G,GAAK,MAAK,CAChCsH,UAAWtH,EAAMjE,aAKjB,KAFa7C,CAGb4R,IC3OI8B,GAAY,CAChBrU,MAAO,QACPE,SAAU,GACVoU,WAAY,UAGRC,8MACFnS,OAAQ,SAAAyF,GAAC,OAAI,WAGX,GAFWxD,OAAOmQ,QAAP,gBAAAhT,OAA+BqG,EAAEjK,QAAjC,aAKX,IACE,IAAM8G,EAAiBL,OAAOY,aAAaC,QAAQ,cACnDC,EAAe7D,SAAS8D,KAAKC,MAAMX,GAAgB7D,OACnDsE,EAAe/C,OAAOyF,EAAEtF,IACxB,MAAOkS,GACP1S,QAAQC,IAAI,iGAIP,IAAA0G,EAAAlJ,KACP,OACEpD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOiP,QAAM,GACXrP,EAAAC,EAAAC,cAACE,EAAA,EAAMmP,OAAP,KACEvP,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,CAAkB/B,UAAQ,GAA1B,WACCzF,OAAOY,aAAaC,QAAQ,eAC7B9I,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,iBAGJzP,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACGtM,KAAKM,MAAM0D,WAAWoE,IAAI,SAAAC,GAAC,OAEpBzL,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKxB,EAAEtF,IAChBnG,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,CAAY2I,YAAU,GAACtY,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAM3J,MAAO8T,GAAWlK,GAAE,eAAA3I,OAAiBqG,EAAEtF,KAAOsF,EAAEjK,UAC7ExB,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAA2D,OAA9C1H,OAAOY,aAAaC,QAAQ,cAC/C,KAAO9I,EAAAC,EAAAC,cAAA,QAAMkI,SAAUkE,EAAKtG,OAAOyF,IAAIzL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ6N,UAAQ,EAACrK,MAAM,MAAMtD,KAAK,UAAlC,wBAhC/B8D,IAAMC,WA2CfE,eAHS,SAAA8G,GAAK,MAAK,CAChCjE,WAAYiE,EAAMjE,aAIlB,KAFa7C,CAGb4T,ICrDII,8MACJlN,MAAM,CACJmN,QAAQ,KAER/U,kBAAoB,eAGpBgV,MAAQ,WACN/Q,EAAKsE,SAAS,CACZwM,QAAS9Q,EAAK2D,MAAMmN,kFAItB,GAAIpV,KAAKM,MAAMoH,SAAU,CACvB,IAAMA,EAAW1H,KAAKM,MAAMoH,SACtB1D,EAAahG,OAAOiJ,KAAKS,GACzB0N,EAASpR,EAAWyJ,MAAM,EAAG,IAC7Bb,EAAS5I,EAAWyJ,MAAM,GAAI,IACpC,OACE7Q,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAW+D,MAAO,CAAEN,WAAY,YAC9B7D,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAAS0K,EAASgE,QAAS,IAAKhE,EAASiE,UACzC/O,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEN,WAAY,YAAxB,kBAAqDiH,EAAS,kBAC9D9K,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEN,WAAY,YAAxB,kBAAqDiH,EAAS,kBAC9D9K,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CAAEN,WAAY,YAAxB,kBAAqDiH,EAAS,kBAC9D9K,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS9K,KAAKqV,MAAOxK,UAAQ,EAACrK,MAAM,QAA5C,IAAsDR,KAAKiI,MAAMmN,OACtCxY,EAAAC,EAAAC,cAAA,qBAAzBF,EAAAC,EAAAC,cAAA,kCADF,gBAICkD,KAAKiI,MAAMmN,QACZxY,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOkP,SAAO,GACZtP,EAAAC,EAAAC,cAACE,EAAA,EAAMmP,OAAP,KACEvP,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,CAAkBtL,MAAO,CAAEN,WAAY,gBAAvC,SACA7D,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,kBAGJzP,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACG8I,EAAOhN,IAAI,SAAAgB,GAAC,OAEbxM,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKT,GACdxM,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAanD,GACbxM,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAa7E,EAAS0B,QAI1BxM,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS9K,KAAKqV,MAAOxK,UAAQ,EAACrK,MAAM,QAA5C,yBAIF5D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOkP,SAAO,EAACD,QAAM,GACnBrP,EAAAC,EAAAC,cAACE,EAAA,EAAMmP,OAAP,KACEvP,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,CAAkBtL,MAAO,CAAEN,WAAY,YAAvC,WACA7D,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,CAAkBtL,MAAO,CAAEN,WAAY,YAAvC,aAGJ7D,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACGM,EAAOxE,IAAI,SAAAgB,GAAC,OAEbxM,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKT,GACdxM,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAanD,GACbxM,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAa7E,EAAS0B,UAOhC,OAAO,YAxEUpI,IAAMC,WAgFhBE,eAJS,SAAA8G,GAAK,MAAK,CAChCP,SAAUO,EAAMP,WAKhB,KAFavG,CAGbgU,ICxEaG,GAdS,WAA0B,IAAzB3X,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,MAAoB,QAAhBC,EAAOb,KACFa,EAAO8D,KAETlE,GCIH4X,eACJ,SAAAA,EAAYjV,GAAO,IAAAgE,EAAA,OAAAtG,OAAAuG,EAAA,EAAAvG,CAAAgC,KAAAuV,IACjBjR,EAAAtG,OAAAwG,EAAA,EAAAxG,CAAAgC,KAAAhC,OAAAyG,EAAA,EAAAzG,CAAAuX,GAAA7Q,KAAA1E,KAAMM,KAURqE,mBAXmB3G,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAWE,SAAAC,IAAA,OAAAF,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACd0E,EAAKhE,MAAMsE,eAAeZ,YAAca,OAAOC,SAASC,OAAO,KADjD,wBAAArF,EAAAK,SAAAR,EAAAS,SAXFsE,EAejBkR,KAAO,WAGL,IACA,IAAM9N,EAAWpD,EAAKhE,MAAMsE,eAAenH,UAAU+Q,KAAK,SAAApF,GAAC,OAAIA,EAAEuC,SAAS8J,cAAc5O,QAAQ,MAAO,MAAQvC,EAAK2D,MAAM0D,SAAS8J,cAAc5O,QAAQ,MAAO,MAE1Ja,EAASgE,QAAQ+J,cAAc5O,QAAQ,MAAO,MAAQvC,EAAK2D,MAAMyD,QAAQ+J,cAAc5O,QAAQ,MAAO,KACxGvC,EAAKhE,MAAMoV,YAAYhO,GAEzB,MAAOiO,GACPrR,EAAKhE,MAAMrB,eAAe,6EAAyD,KAzBtEqF,EA6BjBsR,SAAW,WACT,IAAMpY,EAAW8G,EAAKhE,MAAMsE,eAAepH,SAC3C,GAAI8G,EAAK2D,MAAM1B,QAAUjC,EAAK2D,MAAM7J,QAAS,CAC3C,IAAMoN,EAAShO,EAAS8G,EAAK2D,MAAM1B,QAAQ6B,IAAI,SAAAgB,GAAC,MAC9C,CACE1B,SAAQ,GAAA1F,OAAKoH,EAAEsC,QAAP,KAAA1J,OAAkBoH,EAAEuC,UAC5B3E,MAAOoC,EAAE9E,EAAK2D,MAAM7J,YAExBkG,EAAKsE,SAAS,CACZ4C,gBAGFlH,EAAKhE,MAAMrB,eAAe,4EAA8D,IAzC3EqF,EAyDjBuR,cAAgB,WACdvR,EAAKsE,SAAS,CACZ4C,QAAQ,KAzDZlH,EAAK2D,MAAQ,CACXyD,QAAS,GACTC,SAAU,GACVvN,QAAS,GACTmI,OAAQ,GACRiF,QAAQ,GAPOlH,4EA6CJW,KAAoB,IAAfvI,EAAewF,EAAfxF,KAAMqL,EAAS7F,EAAT6F,MAGtB,GAAIrL,GAAQqL,EACV/H,KAAK4I,SAAL5K,OAAAiL,EAAA,EAAAjL,CAAA,GAAiBtB,EAAOqL,QACnB,CACL,IAAM+N,EAAS,GACfA,EAAO7Q,EAAE4C,OAAOnL,MAAQuI,EAAE4C,OAAOE,MACjC/H,KAAK4I,SAASkN,qCAyBhB,GAAI9V,KAAKM,MAAMsE,eAAgB,CAE/B,IAAMuE,EAASnJ,KAAKM,MAAMsE,eAAeZ,WAAWoE,IAAI,SAAAgB,GAAC,MAAQ,CAAEC,KAAMD,EAAGrB,MAAOqB,KAEjF,OACExM,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAAEN,WAAY,cACxB7D,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,2FAGAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUE,KAAK,OAAOR,KAAK,SAASD,YAAY,iBAAiBiN,SAAU1J,KAAK8J,aAAaC,KAAK/J,MAAOgK,OAAK,EAACC,QAAM,EAACC,WAAS,EAACC,QAAS4L,IACzInZ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUE,KAAK,OAAOR,KAAK,UAAUD,YAAY,kBAAkBiN,SAAU1J,KAAK8J,aAAaC,KAAK/J,MAAOgK,OAAK,EAACC,QAAM,EAACC,WAAS,EAACC,QAAShB,IAC3IvM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQsN,UAAQ,EAACQ,QAAS9K,KAAK4V,UAA/B,0BACD5V,KAAKiI,MAAMuD,QACb5O,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS9K,KAAK6V,eAAtB,WAA8C7V,KAAKiI,MAAM1B,OAAzD,WACA3J,EAAAC,EAAAC,cAACgS,EAAD,CAAWvI,OAAQvG,KAAKiI,MAAM1B,OAAQnI,QAAS4B,KAAKiI,MAAM7J,QAAS0N,MAAI,MAI3ElP,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAAEN,WAAY,cACxB7D,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,sHAGAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOE,KAAK,OAAOwM,SAAU1J,KAAK8J,aAAaC,KAAK/J,MAAOjD,UAAU,eAAeN,YAAY,OAAOC,KAAK,UAAUC,MAAM,YAC5HC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOE,KAAK,OAAOwM,SAAU1J,KAAK8J,aAAaC,KAAK/J,MAAOjD,UAAU,eAAeN,YAAY,YAASC,KAAK,WAAWC,MAAM,aAC/HC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQsN,UAAQ,EAAC9J,MAAM,QAAQsK,QAAS9K,KAAKwV,MAA7C,0BACH5Y,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACkZ,GAAD,QAKR,OAAO,YArHahV,IAAMC,WAgIjBE,eANS,SAAA8G,GAAK,MAAK,CAChCP,SAAUO,EAAMP,SAChB1D,WAAYiE,EAAMjE,WAClBY,eAAgBqD,EAAMrD,iBAKtB,CACE8Q,YDpIuB,SAAA7T,GAAI,sBAAArF,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAAC,EAAOC,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACjCJ,EAAS,CACPtC,KAAM,MACN2E,SAH+B,wBAAAnC,EAAAK,SAAAR,EAAAS,SAAJ,gBAAAC,GAAA,OAAAzD,EAAA0D,MAAAF,KAAApC,YAAA,ICqI3BqB,iBACAgF,qBALW9C,CAOboU,IC7IElU,GAAQ,KA4BG4U,GAAA,CACb1U,OA3BU,eAAA/E,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAG,SAAAC,IAAA,IAAAiC,EAAA,OAAAnC,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACU6B,IAAMC,IALf,mBAID,cACPF,EADO9B,EAAAiC,KAAAjC,EAAAkC,OAAA,SAENJ,EAASK,MAFH,wBAAAnC,EAAAK,SAAAR,EAAAS,SAAH,yBAAAxD,EAAA0D,MAAAF,KAAApC,YAAA,GA4BVkE,SAtBe,SAACC,GAChBV,GAAK,UAAAW,OAAaD,IAsBlBoB,aAnBgB,eAAAjB,EAAAlE,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAG,SAAA6C,EAAOC,GAAP,IAAAC,EAAAb,EAAA,OAAAnC,EAAAxC,EAAA4C,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cACbyC,EAAS,CACbI,QAAS,CAAEC,cAAerB,KAFTiB,EAAA1C,KAAA,EAII6B,IAAMkB,KAlBf,kBAkB6BP,EAAWC,GAJnC,cAIbb,EAJac,EAAAX,KAAAW,EAAAV,OAAA,SAKZJ,EAASK,MALG,wBAAAS,EAAAvC,SAAAoC,EAAAnC,SAAH,gBAAAC,GAAA,OAAAiC,EAAAhC,MAAAF,KAAApC,YAAA,GAoBhBgF,OAZU,eAAAC,EAAA7E,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAG,SAAAwD,EAAOC,GAAP,IAAAV,EAAAb,EAAA,OAAAnC,EAAAxC,EAAA4C,KAAA,SAAAuD,GAAA,cAAAA,EAAArD,KAAAqD,EAAApD,MAAA,cACPyC,EAAS,CACbI,QAAS,CAAEC,cAAerB,KAFf2B,EAAApD,KAAA,EAIU6B,IAAMwB,OAAN,GAAAjB,OA1BT,kBA0BS,KAAAA,OAA2Be,GAAMV,GAJ3C,cAIPb,EAJOwB,EAAArB,KAAAqB,EAAApB,OAAA,SAKNJ,EAASK,MALH,wBAAAmB,EAAAjD,SAAA+C,EAAA9C,SAAH,gBAAAkD,GAAA,OAAAL,EAAA3C,MAAAF,KAAApC,YAAA,ICpBNsY,GAAoB,CACxBC,mBAAoB,CAAC,kGAAuF,2FAAgF,wFAAgF,oFAAqF,0EAA2E,iEAA4D,4GAAiG,0DAAwD,kFACjoBC,eAAgB,CAAC,2EAA4E,mGAA+E,6FAAwF,oFAAqF,gEACzVC,SAAU,CAAC,iEAAyD,kFACpEC,GAAI,CAAC,8FAAyF,yDAC9FC,iBAAkB,CAAC,wFAAsF,6FAAwF,2FAAgF,wDAAmD,0FAA2F,kFAC/ZC,QAAS,CAAC,+CAA0C,2DACpDC,aAAc,CAAC,2EAAsE,uGAAwG,0EAAwE,8CAA4C,qEAAsE,+GACvXC,aAAc,CAAC,8FAAyF,sEACxGC,eAAgB,CAAC,uGAAwG,yDAAoD,wDAAmD,2EAChOC,YAAa,CAAC,oHAA+G,+GAC7HC,UAAW,CAAC,mGAA+E,2EAAsE,8FACjKC,SAAU,CAAC,qFAAiE,kGAAuF,mFACnKC,SAAU,CAAC,uFA0CEC,8MAtCXhS,+CAAW,SAAAzF,EAAO0F,GAAP,IAAAgS,EAAAC,EAAAzY,EAAA0Y,EAAAjS,EAAA,OAAA7F,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACTqF,EAAE2C,iBACIqP,EAAY,CAChBzQ,KAAMvB,EAAE4C,OAAOoP,UAAUlP,OAE3B9C,EAAE4C,OAAOoP,UAAUlP,MAAQ,GACrBmP,EAAQlZ,OAAOiJ,KAAKiP,KACpBzX,EAAUyY,EAAM1I,KAAK,SAAApF,GAAC,OAAIA,IAAM6N,EAAUzQ,KAAKiP,mBAE7C0B,EAAajB,GAAkBzX,GACrCwY,EAAUE,WAAaA,GAVhBzX,EAAAC,KAAA,EAaDuF,EAAiBL,OAAOY,aAAaC,QAAQ,cACnD0R,GAAiBtV,SAAS8D,KAAKC,MAAMX,GAAgB7D,OAd9C3B,EAAAE,KAAA,GAeDwX,GAAiBjU,aAAa8T,GAf7B,QAgBPpS,OAAOC,SAASC,OAAO,eAhBhBrF,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAsG,GAAAtG,EAAA,SAkBP6C,QAAQC,IAAI,kBAlBL,yBAAA9C,EAAAK,SAAAR,EAAAS,KAAA,2IAuBT,OACEpD,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMgI,SAAUhF,KAAKgF,UACnBpI,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CACEN,MAAM,+BACNF,YAAY,YACZC,KAAK,cAEPE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ6N,UAAQ,EAACrK,MAAM,QAAQtD,KAAK,UAApC,oBA/BkB8D,IAAMC,WCTrBoW,GAAgB,iCAAA7a,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAM,SAAAC,EAAOC,GAAP,IAAA0E,EAAA,OAAA7E,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACf0X,GAAkB/V,SADH,OAC3B2C,EAD2BxE,EAAAiC,KAEjCnC,EAAS,CACPtC,KAAM,iBACN2E,KAAMqC,IAJyB,wBAAAxE,EAAAK,SAAAR,EAAAS,SAAN,gBAAAC,GAAA,OAAAzD,EAAA0D,MAAAF,KAAApC,YAAA,IAgBd2Z,GAzBW,WAAwB,IAAvB5Z,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,MAAoB,mBAAhBC,EAAOb,KACFa,EAAO8D,KACM,mBAAhB9D,EAAOb,KACJS,EAAMqE,OAAOjE,EAAO8D,MAEtBlE,GCAHkX,GAAY,CAChBrU,MAAO,QACPE,SAAU,GACVoU,WAAY,UAGR0C,8MACFnX,uCAAoB,SAAAd,IAAA,OAAAF,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClB0E,EAAKhE,MAAM+W,gBADO,wBAAA3X,EAAAK,SAAAR,EAAAS,WAIpB4C,OAAQ,SAAAyF,GAAC,OAAI,WAGX,GAFWxD,OAAOmQ,QAAP,gBAAAhT,OAA+BqG,EAAE7B,KAAjC,aAKX,IACE,IAAMtB,EAAiBL,OAAOY,aAAaC,QAAQ,cACnD0R,GAAiBtV,SAAS8D,KAAKC,MAAMX,GAAgB7D,OACrD+V,GAAiBxU,OAAOyF,EAAEtF,IAC1B,MAAOkS,GACP1S,QAAQC,IAAI,iGAKP,IAAA0G,EAAAlJ,KACP,OACEpD,EAAAC,EAAAC,cAAA,WACG+H,OAAOY,aAAaC,QAAQ,eAC7B9I,EAAAC,EAAAC,cAAC2a,GAAD,MAEA7a,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOiP,QAAM,GACXrP,EAAAC,EAAAC,cAACE,EAAA,EAAMmP,OAAP,KACEvP,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,CAAkB/B,UAAQ,GAA1B,cAC+C,OAA9CzF,OAAOY,aAAaC,QAAQ,cAC3B9I,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,MAAuBzP,EAAAC,EAAAC,cAACE,EAAA,EAAMqP,WAAP,iBAG7BzP,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACGtM,KAAKM,MAAM/B,WAAW6J,IAAI,SAAAC,GAAC,OAEtBzL,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKxB,EAAEtF,IAChBnG,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,CAAY2I,YAAU,GAACtY,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAM3J,MAAO8T,GAAWlK,GAAE,eAAA3I,OAAiBqG,EAAEtF,KAAOsF,EAAE7B,OAC7E5J,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAa1H,OAAOY,aAAaC,QAAQ,eACzC9I,EAAAC,EAAAC,cAAA,QAAMkI,SAAUkE,EAAKtG,OAAOyF,IAAIzL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ6N,UAAQ,EAACrK,MAAM,MAAMtD,KAAK,UAAlC,yBAzC7B8D,IAAMC,WAsDhBE,eAHS,SAAA8G,GAAK,MAAK,CAChC1J,WAAY0J,EAAM1J,aAIlB,CAAE8Y,kBAFWlW,CAGbqW,IC9BaE,8MArCXzP,MAAM,CACJlE,KAAK,KAEPsR,MAAQ,WACN/Q,EAAKsE,SAAS,CACZ7E,KAAMO,EAAK2D,MAAMlE,+EAInB,OAAI/D,KAAKM,MAAM6W,WAEXva,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ4N,KAAK,OAAOC,UAAQ,EAACrK,MAAM,OAAOsK,QAAS9K,KAAKqV,OACtDzY,EAAAC,EAAAC,cAAA,SAAKkD,KAAKiI,MAAMlE,IACEnH,EAAAC,EAAAC,cAAA,qBAAhBF,EAAAC,EAAAC,cAAA,yBADF,wDAKDkD,KAAKiI,MAAMlE,KACZnH,EAAAC,EAAAC,cAAA,WACGkD,KAAKM,MAAM6W,WAAWA,WAAW/O,IAAI,SAAAC,GAAC,OAEnCzL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAM+D,MAAO,CAAEN,WAAY,aAAcoJ,IAAKxB,GAAIA,EAAEzL,EAAAC,EAAAC,cAACE,EAAA,EAAD,SACxDJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQgU,OAAK,EAAClG,QAAS9K,KAAKqV,OAA5B,2DASN,YAjCoBrU,IAAMC,WCoCnB0W,8MAhCbtX,kBAAoB,qFAEX,IAAA6I,EAAAlJ,KACP,OAAIA,KAAKM,MAAM2W,UAEXra,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACE,EAAA,EAAK4a,MAAN,KACEhb,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAK4R,QAAN,KACEhS,EAAAC,EAAAC,cAACE,EAAA,EAAKmP,OAAN,KAAavP,EAAAC,EAAAC,cAAA,UAAKkD,KAAKM,MAAM2W,UAAUzQ,OACvC5J,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC+a,GAAD,CAAeV,WAAYnX,KAAKM,MAAM2W,cAGzCjX,KAAKM,MAAM2W,UAAUjT,WAAWoE,IAAI,SAAAC,GAAC,OAExCzL,EAAAC,EAAAC,cAACE,EAAA,EAAK4a,MAAN,CAAY/N,IAAKxB,EAAGyP,SAAO,EAACC,aAAW,GACrCnb,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAMC,GAAE,eAAA3I,OAAiBkH,EAAK5I,MAAM0D,WAAWwK,KAAK,SAAApF,GAAC,OAAIA,EAAErG,KAAOsF,IAAGtF,KAClEmG,EAAK5I,MAAM0D,WAAWwK,KAAK,SAAApF,GAAC,OAAIA,EAAErG,KAAOsF,IAAGjK,cAQrD,YA3BkB4C,IAAMC,WCAxB+W,8MACJ/P,MAAQ,CACN1J,YAAY,EACZ0Z,SAAS,EACTC,WAAY,KACZpM,MAAM,EACNtO,UAAU,EACVC,WAAW,EACXmB,KAAK,EACLuZ,UAAU,EACVC,UAAU,EACVrZ,WAAY,GACZD,WAAY,GACZoJ,MAAO,MAGTvD,mBAAqB,WACfL,EAAKhE,MAAMlC,SACbkG,EAAKsE,SAAS,CACZhK,IAAK0F,EAAKhE,MAAMlC,QAAQQ,IACxBuZ,SAAU7T,EAAKhE,MAAMlC,QAAQS,wBAKnCmG,+CAAW,SAAAzF,EAAO0F,GAAP,IAAA7G,EAAA8G,EAAA,OAAA7F,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACHxB,EAAUkG,EAAKhE,MAAMlC,QACG,YAA1BkG,EAAK2D,MAAMiQ,aACb9Z,EAAQA,QAAU6G,EAAE4C,OAAOwQ,OAAOtQ,OACJ,YAA1BzD,EAAK2D,MAAMiQ,aACf9Z,EAAQC,QAAU4G,EAAE4C,OAAOwQ,OAAOtQ,OACJ,QAA1BzD,EAAK2D,MAAMiQ,aACf9Z,EAAQE,IAAM2G,EAAE4C,OAAOwQ,OAAOtQ,OACO,mBAA1BzD,EAAK2D,MAAMlJ,aACtBX,EAAQW,WAAauF,EAAK2D,MAAMlJ,YACK,mBAA1BuF,EAAK2D,MAAMnJ,aACtBV,EAAQU,WAAawF,EAAK2D,MAAMnJ,YACA,mBAArBwF,EAAK2D,MAAMC,QACtB9J,EAAQ8J,MAAQ5D,EAAK2D,MAAMC,OAE7B9J,EAAQQ,IAAM0F,EAAK2D,MAAMrJ,IACzBR,EAAQS,mBAAqByF,EAAK2D,MAAMkQ,SAExC5V,QAAQC,IAAIpE,GACN8G,EAAiBL,OAAOY,aAAaC,QAAQ,cACnDC,EAAe7D,SAAS8D,KAAKC,MAAMX,GAAgB7D,OApB1C3B,EAAAE,KAAA,GAqBH+F,EAAenC,cAAcpF,EAAQ2E,GAAI3E,GArBtC,QAsBTkG,EAAKsE,SAAS,CACZrK,YAAY,EACZ0Z,SAAS,EACTC,WAAY,OAzBL,yBAAAxY,EAAAK,SAAAR,EAAAS,iEA4BXsY,kCAAe,SAAAnW,IAAA,IAAA5D,EAAAH,EAAA8G,EAAA,OAAA7F,EAAAxC,EAAA4C,KAAA,SAAA6C,GAAA,cAAAA,EAAA3C,KAAA2C,EAAA1C,MAAA,cACPrB,EAAa,GACnB+F,EAAKhE,MAAM/B,WAAW6J,IAAI,SAAAC,GAAC,OAAKC,SAASC,eAAeF,EAAE7B,MAAMgC,QAC5DjK,EAAWwH,KAAKsC,GAAK,QAEnBjK,EAAUkG,EAAKhE,MAAMlC,SACnBG,WAAaA,EAAW6J,IAAI,SAAAgB,GAAC,OAAIA,EAAErG,KACrCmC,EAAiBL,OAAOY,aAAaC,QAAQ,cACnDC,EAAe7D,SAAS8D,KAAKC,MAAMX,GAAgB7D,OARtCiB,EAAA1C,KAAA,EASP+F,EAAenC,cAAcpF,EAAQ2E,GAAI3E,GATlC,wBAAAkE,EAAAvC,SAAAoC,EAAAnC,WAYfzB,WAAa,WACX+F,EAAKsE,SAAS,CACZrK,YAAY,EACZ0Z,SAAS,OAIbA,QAAU,SAAC7O,GACT9E,EAAKsE,SAAS,CACZqP,SAAS,EACT1Z,YAAY,EACZ2Z,WAAY9O,EACZgP,UAAU,OAIdtM,KAAO,WACLxH,EAAKsE,SAAS,CACZkD,MAAOxH,EAAK2D,MAAM6D,UAItByM,aAAe,WACbjU,EAAKsE,SAAS,CACZwP,UAAW9T,EAAK2D,MAAMmQ,SACtBH,SAAS,OAIbza,SAAW,WACT8G,EAAKsE,SAAS,CACZpL,UAAW8G,EAAK2D,MAAMzK,cAG1BC,UAAY,WACV6G,EAAKsE,SAAS,CACZnL,WAAY6G,EAAK2D,MAAMxK,eAI3BkM,UAAY,WACVrF,EAAKsE,SAAS,CACZhK,KAAM0F,EAAK2D,MAAMrJ,SAIrB4Z,eAAiB,WACflU,EAAKsE,SAAS,CACZuP,UAAW7T,EAAK2D,MAAMkQ,cAI1BxP,iBAAmB,SAACZ,GAClBzD,EAAKsE,SAAS,CACZ9J,WAAYiJ,OAIhBc,iBAAmB,SAACd,GAClBzD,EAAKsE,SAAS,CACZ7J,WAAYgJ,OAIhBe,YAAc,SAACf,GACbzD,EAAKsE,SAAS,CACZV,MAAOH,6EAKF,IAAAmB,EAAAlJ,KAEP,OADAuC,QAAQC,IAAI,QAASxC,KAAKiI,OACtBjI,KAAKM,MAAMlC,QAEXxB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAEG6H,OAAOY,aAAaC,QAAQ,eAC7B9I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,IACpBxS,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,IAClBxS,EAAAC,EAAAC,cAACE,EAAA,EAAO4a,MAAR,CAAc/M,UAAQ,EAACrK,MAAM,QAC3B5D,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS,kBAAM5B,EAAK+O,QAAQ,aAApC,WACArb,EAAAC,EAAAC,cAACE,EAAA,EAAOyb,GAAR,MACA7b,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS,kBAAM5B,EAAK+O,QAAQ,aAApC,WACArb,EAAAC,EAAAC,cAACE,EAAA,EAAOyb,GAAR,MACA7b,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS9K,KAAKzB,YAAtB,cACA3B,EAAAC,EAAAC,cAACE,EAAA,EAAOyb,GAAR,MACA7b,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS,kBAAM5B,EAAK+O,QAAQ,SAApC,UACArb,EAAAC,EAAAC,cAACE,EAAA,EAAOyb,GAAR,MACA7b,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ8N,QAAS,kBAAM5B,EAAKqP,iBAA5B,0DAMLvY,KAAKiI,MAAMmQ,UACZxb,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEyM,QAAM,EACNC,SAAU,kBAAMR,EAAKS,aACrB+O,eAAgB1Y,KAAKiI,MAAMrJ,IAC3BjC,MAAM,mDAERC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE0b,eAAgB1Y,KAAKiI,MAAMkQ,SAC3B1O,QAAM,EACNC,SAAU,kBAAMR,EAAKsP,kBACrB7b,MAAM,kEAERC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLlN,KAAK,oBACL8L,SAAmC,IAA1BxI,KAAKiI,MAAMnJ,WACpBnC,MAAM,wBACN+M,SAAU,kBAAMR,EAAKP,kBAAiB,MAExC/L,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLlN,KAAK,oBACL8L,SAAmC,IAA1BxI,KAAKiI,MAAMnJ,WACpBnC,MAAM,+BACN+M,SAAU,kBAAMR,EAAKP,kBAAiB,MAExC/L,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLpB,SAAmC,IAA1BxI,KAAKiI,MAAMlJ,WACpBpC,MAAM,+BACN+M,SAAU,kBAAMR,EAAKL,kBAAiB,MAExCjM,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLpB,SAAmC,IAA1BxI,KAAKiI,MAAMlJ,WACpBpC,MAAM,6BACN+M,SAAU,kBAAMR,EAAKL,kBAAiB,MAEvCjM,EAAAC,EAAAC,cAAA,WACDF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLpB,SAA8B,IAArBxI,KAAKiI,MAAMC,MACpBvL,MAAM,wBACN+M,SAAU,kBAAMR,EAAKJ,aAAY,MAEnClM,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACE4M,OAAK,EACLpB,SAA8B,IAArBxI,KAAKiI,MAAMC,MACpBvL,MAAM,uBACN+M,SAAU,kBAAMR,EAAKJ,aAAY,MAEnClM,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAMkI,SAAUhF,KAAKgF,UACnBpI,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQE,KAAK,SAASsD,MAAM,SAA5B,oCAIHR,KAAKiI,MAAM1J,YACZ3B,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAAA,QAAMkI,SAAUhF,KAAKsY,cAClBtY,KAAKM,MAAM/B,WAAW6J,IAAI,SAAAC,GAAC,OAC3BzL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACC6M,IAAKxB,EAAE7B,KACP7J,MAAO0L,EAAE7B,KACT9J,KAAK,aACLqG,GAAIsF,EAAE7B,SAER5J,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQE,KAAK,SAASsD,MAAM,SAA5B,aAGHR,KAAKiI,MAAMgQ,SACZrb,EAAAC,EAAAC,cAAA,QAAMkI,SAAUhF,KAAKgF,UACnBpI,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAUN,KAAK,YAEjBE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQE,KAAK,SAASsD,MAAM,SAA5B,WAA6CR,KAAKiI,MAAMiQ,cAG5Dtb,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,IAClBxS,EAAAC,EAAAC,cAACE,EAAA,EAAK4a,MAAN,CAAYE,SAAO,GACjBlb,EAAAC,EAAAC,cAACE,EAAA,EAAD,gBACAJ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAK4R,QAAN,KACEhS,EAAAC,EAAAC,cAACE,EAAA,EAAKmP,OAAN,KAAcnM,KAAKM,MAAMlC,QAAQA,QAAjC,KACAxB,EAAAC,EAAAC,cAACE,EAAA,EAAKqU,YAAN,KACEzU,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ4N,KAAK,OAAOoG,OAAK,EAAClG,QAAS9K,KAAK8L,MAAxC,kBACC9L,KAAKiI,MAAM6D,MAAQlP,EAAAC,EAAAC,cAAA,WAAMkD,KAAKM,MAAMlC,QAAQC,QAAQzB,EAAAC,EAAAC,cAAA,aAEvDF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,4DACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAIkD,KAAKM,MAAMlC,QAAQK,SACvB7B,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAACE,EAAA,EAAK2b,KAAN,KACG3Y,KAAKM,MAAMlC,QAAQG,WAAW6J,IAAI,SAAAgB,GAAC,OAEhCxM,EAAAC,EAAAC,cAACE,EAAA,EAAK4b,KAAN,CAAW1H,GAAG,KAAKrH,IAAKT,EAAEkI,KAAK1U,EAAAC,EAAAC,cAAC4N,EAAA,EAAD,CAAMC,GAAE,eAAA3I,OAAiBoH,EAAEkI,MAAQlI,EAAE5C,WAI5E5J,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ4N,KAAK,OAAOoG,OAAK,EAAClG,QAAS9K,KAAKxC,UAAWwC,KAAKiI,MAAMzK,SAAW,UAAY,eACpFwC,KAAKiI,MAAMzK,UACZZ,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACGtM,KAAKM,MAAMlC,QAAQZ,SAAS4K,IAAI,SAAAgB,GAAC,OAEhCxM,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKT,EAAE5C,MAChB5J,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAanD,EAAE5C,MACf5J,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAanD,EAAEpC,WAGrBpK,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACE1P,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KACE3P,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ4N,KAAK,OAAOoG,OAAK,EAAClG,QAAS9K,KAAKvC,WAAxC,wBAILuC,KAAKiI,MAAMxK,WACZb,EAAAC,EAAAC,cAACE,EAAA,EAAMsP,KAAP,KACGtM,KAAKM,MAAMlC,QAAQX,UAAU2K,IAAI,SAAAgB,GAAC,OAEjCxM,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,CAAWvC,IAAKT,EAAE5C,MAChB5J,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAanD,EAAE5C,MACf5J,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KAAanD,EAAEpC,UAEnBpK,EAAAC,EAAAC,cAACE,EAAA,EAAMoP,IAAP,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAMuP,KAAP,KACE3P,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ4N,KAAK,OAAOoG,OAAK,EAAClG,QAAS9K,KAAKvC,WAAxC,kCASVb,EAAAC,EAAAC,cAACE,EAAA,EAAK6b,MAAN,KACEjc,EAAAC,EAAAC,cAAA,KAAG+K,OAAO,SAAS2C,IAAI,sBAAsBC,KAAMzK,KAAKM,MAAMlC,QAAQE,KAAtE,mCAMV1B,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,GAClBxS,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,QAIJxP,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,QAMNxP,EAAAC,EAAAC,cAAA,mBA5UgBkE,IAAMC,WAsVbE,eALS,SAAA8G,GAAK,MAAK,CAChC1J,WAAY0J,EAAM1J,WAClBqP,SAAU3F,EAAM2F,WAKhB,GAFazM,CAIb6W,ICvVac,GAAA,CAAEC,MALN,eAAAvc,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAG,SAAAC,EAAOyZ,GAAP,IAAAxX,EAAA,OAAAnC,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACW6B,IAAMkB,KAHf,aAG6BqW,GAD/B,cACNxX,EADM9B,EAAAiC,KAAAjC,EAAAkC,OAAA,SAELJ,EAASK,MAFJ,wBAAAnC,EAAAK,SAAAR,EAAAS,SAAH,gBAAAC,GAAA,OAAAzD,EAAA0D,MAAAF,KAAApC,YAAA,ICWIqb,GAdK,WAAwB,IAAvBtb,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,MAAoB,SAAhBC,EAAOb,KACFa,EAAO+U,KAETnV,GCIHub,8MACFH,4CAAQ,SAAAxZ,EAAO0F,GAAP,IAAA6N,EAAA5N,EAAA,OAAA7F,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACNqF,EAAE2C,iBADIlI,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGeuZ,GAAaJ,MAAM,CACpCK,SAAUnU,EAAE4C,OAAOuR,SAASrR,MAC5BsR,SAAUpU,EAAE4C,OAAOwR,SAAStR,QAL1B,OAGE+K,EAHFpT,EAAAiC,KAOJkD,OAAOY,aAAa6T,QAAQ,aAAc1T,KAAK2T,UAAUzG,IACzDxO,EAAKhE,MAAMkZ,UAAU1G,EAAKsG,UACpBlU,EAAiBL,OAAOY,aAAaC,QAAQ,cACnDC,EAAe7D,SAAS8D,KAAKC,MAAMX,GAAgB7D,OAV/C3B,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAsG,GAAAtG,EAAA,SAYJ6C,QAAQC,IAAI,SAZR,yBAAA9C,EAAAK,SAAAR,EAAAS,KAAA,2IAkBN,OACEpD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBAEAF,EAAAC,EAAAC,cAAA,QAAMkI,SAAUhF,KAAK+Y,OACnBnc,EAAAC,EAAAC,cAAA,qCAEEF,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CACEP,KAAK,cAGTE,EAAAC,EAAAC,cAAA,sBAEEF,EAAAC,EAAAC,cAACE,EAAA,EAAKC,MAAN,CACEC,KAAK,WACLR,KAAK,cAGTE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAQ6N,UAAQ,EAACrK,MAAM,QAAQtD,KAAK,UAApC,qBAtCQ8D,IAAMC,WAkDXE,eALS,SAAA8G,GAAK,MAAK,CAChC6K,KAAM7K,EAAM6K,OAMZ,CAAE0G,UDrDqB,SAAAta,GAAO,sBAAA1C,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAI,SAAAC,EAAOC,GAAP,OAAAH,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClCJ,EAAS,CACPtC,KAAM,OACN4V,KAAM5T,IAH0B,wBAAAQ,EAAAK,SAAAR,EAAAS,SAAJ,gBAAAC,GAAA,OAAAzD,EAAA0D,MAAAF,KAAApC,YAAA,KCmDjBuD,CAGb+X,IC7CaO,GAfW,WAAwB,IAAvB9b,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,MAAoB,YAAhBC,EAAOb,KACFa,EAAO8D,KAETlE,GCiBH+b,uBACJ,SAAAA,EAAYpZ,GAAO,IAAAgE,EAAA,OAAAtG,OAAAuG,EAAA,EAAAvG,CAAAgC,KAAA0Z,IACjBpV,EAAAtG,OAAAwG,EAAA,EAAAxG,CAAAgC,KAAAhC,OAAAyG,EAAA,EAAAzG,CAAA0b,GAAAhV,KAAA1E,KAAMM,KAMRqE,mBAPmB3G,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAOE,SAAAC,IAAA,OAAAF,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACnB0E,EAAKhE,MAAMqZ,gBACXrV,EAAKhE,MAAM+W,gBACX/S,EAAKhE,MAAM2D,oBAHQ,wBAAAvE,EAAAK,SAAAR,EAAAS,SAPFsE,EAanBsV,YAAc,SAAA7W,GAAE,OACduB,EAAKhE,MAAM0D,WAAWwK,KAAK,SAAAnG,GAAC,OAAIA,EAAEtF,KAAOA,KAdxBuB,EAiBnBuV,cAAgB,SAAA9W,GAAE,OAChBuB,EAAKhE,MAAM/B,WAAWiQ,KAAK,SAAAnG,GAAC,OAAIA,EAAEtF,KAAOA,KAhBzCuB,EAAK2D,MAAQ,CACX6D,MAAM,GAHSxH,wEAqBV,IAAA4E,EAAAlJ,KACP,OACEpD,EAAAC,EAAAC,cAACgd,EAAA,EAAD,KACEld,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,CACE2N,MAAM,OACNhZ,MAAO,CACP8R,cAAe,OACfpS,WAAY,UAGZ7D,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,IACpBxS,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,EAAGrO,MAAO,CAAEiZ,aAAc,SAC5Cpd,EAAAC,EAAAC,cAAA,OAAKiE,MAAO,CAAEF,QAAS,MAAO4R,WAAY,QAAS/R,SAAU,UAA7D,kBAEE9D,EAAAC,EAAAC,cAAA,KAAGiE,MAAO,CACRH,aAAc,MACdwO,MAAO,QACPD,OAAQ,QACR1O,WAAY,UACZI,QAAS,QACToZ,WAAY,WAKlBrd,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,GAClBxS,EAAAC,EAAAC,cAACuN,EAAD,OAEFzN,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,GAClBxS,EAAAC,EAAAC,cAACod,GAAD,CAAMtH,OAAQ5S,KAAKiI,MAAM6D,SAG7BlP,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,CAAUrL,MAAO,CAAEF,QAAS,SAC1BjE,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAapQ,MAAO,CAAEN,WAAY,UAAWI,QAAS,QACpDjE,EAAAC,EAAAC,cAAA,MAAIiE,MAAO,CACTL,SAAU,MACVF,MAAO,QACPqL,UAAW,SACXuF,cAAe,WAJjB,oBAUJxU,EAAAC,EAAAC,cAACE,EAAA,EAAKoP,IAAN,KACExP,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,IACpBxS,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,IAClBxS,EAAAC,EAAAC,cAAA,OACEiG,GAAG,SACHhC,MAAO,CACHF,QAAS,MACTsZ,UAAW,kBACX1Z,WAAY,QACZuR,OAAQ,SAGZpV,EAAAC,EAAAC,cAACsd,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIrN,OAAQ,kBAAMrQ,EAAAC,EAAAC,cAACyd,EAAD,SACpC3d,EAAAC,EAAAC,cAACsd,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcrN,OAAQ,SAAAnH,GAAO,OAAIlJ,EAAAC,EAAAC,cAAC0d,GAAD,CAAY1U,QAASA,OACxElJ,EAAAC,EAAAC,cAACsd,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcrN,OAAQ,kBAAMrQ,EAAAC,EAAAC,cAAC2d,GAAD,SAC9C7d,EAAAC,EAAAC,cAACsd,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQrN,OAAQ,kBAAMrQ,EAAAC,EAAAC,cAAC4d,GAAD,SACxC9d,EAAAC,EAAAC,cAACsd,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcrN,OAAQ,kBAAMrQ,EAAAC,EAAAC,cAAC6d,GAAD,SAC9C/d,EAAAC,EAAAC,cAACsd,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,YAAYrN,OAAQ,kBAAMrQ,EAAAC,EAAAC,cAAC8d,GAAD,SAC5Che,EAAAC,EAAAC,cAACsd,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASrN,OAAQ,SAAA/K,GAAA,IAAG4D,EAAH5D,EAAG4D,QAAH,OAAiBlJ,EAAAC,EAAAC,cAAC+d,GAAD,CAAO/U,QAASA,OACnEjB,OAAOY,aAAaC,QAAQ,eAC7B9I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsd,EAAA,EAAD,CAAOE,KAAK,SAASrN,OAAQ,SAAApK,GAAA,IAAGiD,EAAHjD,EAAGiD,QAAH,OAAiBlJ,EAAAC,EAAAC,cAACge,EAAD,CAAUhV,QAASA,QAGnElJ,EAAAC,EAAAC,cAACsd,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,kBACLrN,OAAQ,SAAA7J,GAAA,IAAG2X,EAAH3X,EAAG2X,MAAH,OACNne,EAAAC,EAAAC,cAACke,GAAD,CAAU5c,QAAS8K,EAAK0Q,YAAYmB,EAAME,OAAOlY,SAErDnG,EAAAC,EAAAC,cAACsd,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,kBACLrN,OAAQ,SAAAxJ,GAAA,IAAGsX,EAAHtX,EAAGsX,MAAH,OACTne,EAAAC,EAAAC,cAACoe,GAAD,CACCjE,UAAW/N,EAAK2Q,cAAckB,EAAME,OAAOlY,IAC3CiB,WAAYkF,EAAK5I,MAAM0D,kBAS7BpH,EAAAC,EAAAC,cAACE,EAAA,EAAKmU,OAAN,CAAa/B,MAAO,cAhHdpO,IAAMC,YAgITE,eAPS,SAAA8G,GAAK,MAAK,CAChC6K,KAAM7K,EAAM6K,KACZ9O,WAAYiE,EAAMjE,WAClBzF,WAAY0J,EAAM1J,WAClBqG,eAAgBqD,EAAMrD,iBAKtB,CACE+U,cDjJyB,iCAAAnd,EAAAwB,OAAAoB,EAAA,EAAApB,CAAAqB,EAAAxC,EAAAyC,KAAM,SAAAC,EAAOC,GAAP,IAAA0E,EAAA,OAAA7E,EAAAxC,EAAA4C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACf+F,EAAepE,SADA,OAC3B2C,EAD2BxE,EAAAiC,KAEjCnC,EAAS,CACPtC,KAAM,UACN2E,KAAMqC,IAJyB,wBAAAxE,EAAAK,SAAAR,EAAAS,SAAN,gBAAAC,GAAA,OAAAzD,EAAA0D,MAAAF,KAAApC,YAAA,ICkJzByZ,iBACApT,qBALW9C,CAObuY,uBClJIyB,GAAUC,aAAgB,CAC9Bld,KAAMR,EACNU,QAASM,EACTmB,OAAQM,EACR6D,WAAYyV,GACZ3G,KAAMmG,GACNrL,SAAU5C,EACVzM,WAAYgZ,GACZ7P,SAAU4N,GACV1Q,eAAgBR,IAQHzG,GALD0d,aACZF,GACAG,aAAgBC,OCpBlBC,IAASvO,OACPrQ,EAAAC,EAAAC,cAAC2e,EAAA,EAAD,CAAU9d,MAAOA,IACff,EAAAC,EAAAC,cAAC4e,GAAD,CAAK/d,MAAOA,MAEd2K,SAASC,eAAe","file":"static/js/main.8d7f1c43.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Form } from 'semantic-ui-react'\n\nconst FormInput = ({ placeholder, name, label }) => (\n  <div className=\"form-group\">\n    <b>{label}</b>\n    <Form.Input type=\"text\" className=\"form-control\" placeholder={placeholder} name={name} />\n  </div>\n)\n\nexport default FormInput\n","import React from 'react';\nimport { Form } from 'semantic-ui-react'\n\nconst TextArea = ({ placeholder, name, label }) => (\n  <div>\n    <b>{label}</b>\n    <Form.TextArea\n      type=\"text\"\n      className=\"form-control\"\n      placeholder={placeholder}\n      rows=\"10\"\n      cols=\"20\"\n      name={name}\n      form=\"htmlform\"\n    />\n  </div>\n)\n\nexport default TextArea\n","const intialState = {\n  puolueet: '',\n  edustajat: '',\n}\n\nconst htmlReducer = (store = intialState, action) => {\n  if (action.type === 'HTML_PUOLUEET') {\n    return { ...store, puolueet: action.html }\n  } if (action.type === 'HTML_EDUSTAJAT') {\n    return { ...store, edustajat: action.html }\n  }\n\n\n  return store\n}\n\nexport const htmlPuolueet = html => async (dispatch) => {\n  dispatch({\n    type: 'HTML_PUOLUEET',\n    html,\n  })\n}\n\nexport const htmlEdustajat = html => async (dispatch) => {\n  dispatch({\n    type: 'HTML_EDUSTAJAT',\n    html,\n  })\n}\n\nexport default htmlReducer;\n","const initialState = {\n  kysymys: '',\n  selitys: '',\n  url: '',\n  puolueet: [],\n  edustajat: [],\n  kategoriat: [],\n  vuosi: '',\n  vastaus: '',\n}\n\nconst kysymysReducer = (store = initialState, action) => {\n  if (action.type === 'ADD_PUOLUE') {\n    return { ...store, puolueet: action.puolueet }\n  } if (action.type === 'ADD_DETAILS') {\n    return {\n      ...store,\n      kysymys: action.details.kysymys,\n      selitys: action.details.selitys,\n      url: action.details.url,\n      vuosi: action.details.vuosi,\n      vastaus: action.details.vastaus,\n      hot: action.details.hot,\n      kysymyksenAsettelu: action.details.kysymyksenAsettelu,\n      jaaLiberal: action.details.jaaLiberal,\n      jaaLeftist: action.details.jaaLeftist,\n      jaaGreen: action.details.jaaGreen\n    }\n  } if (action.type === 'ADD_EDUSTAJAT') {\n    return { ...store, edustajat: action.edustajat }\n  } if (action.type === 'ADD_KATEGORIAT') {\n    return { ...store, kategoriat: action.kategoriat }\n  }\n  return store\n}\n\nexport const addPuolueet = puolueet => async (dispatch) => {\n  dispatch({\n    type: 'ADD_PUOLUE',\n    puolueet,\n  })\n}\n\nexport const addEdustajat = edustajat => async (dispatch) => {\n  dispatch({\n    type: 'ADD_EDUSTAJAT',\n    edustajat,\n  })\n}\n\nexport const addDetails = details => async (dispatch) => {\n  dispatch({\n    type: 'ADD_DETAILS',\n    details,\n  })\n}\n\nexport const addKategoriat = kategoriat => async (dispatch) => {\n  dispatch({\n    type: 'ADD_KATEGORIAT',\n    kategoriat,\n  })\n}\n\n\nexport default kysymysReducer;\n\n","const notifyReducer = (store = '', action) => {\n    if (action.type==='SHOW') {\n      return action.notify\n    }\n    return store\n  }\n  \n  export const notifyCreation = (content, time) => {\n    return async (dispatch) => {\n      dispatch({\n        type: 'SHOW',\n        notify: content\n      })\n      setTimeout(() => dispatch({\n        type: 'SHOW',\n        notify: ''\n      }), time * 1000)\n    }\n  }\n  \n  export default notifyReducer","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass Notification extends React.Component {\n  componentDidMount = () => {\n  }\n  render() {\n    if (this.props.notify === '') {\n      return null\n    }\n    const divStyle = {\n      color: 'green',\n      background: 'lightgrey',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10,\n    }\n    if (this.props.notify === 'Tapahtui virhe') {\n      divStyle.color = 'red'\n    }\n    return (\n      <div style={divStyle}>\n        <p>{this.props.notify}</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = store => ({\n  notify: store.notify,\n})\n\nconst ConnectedNotification = connect(mapStateToProps)(Notification)\n\n\nexport default ConnectedNotification\n","import axios from 'axios'\n\nconst baseUrl = '/api/kysymykset'\n\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst addKysymys = async (newObject) => {\n  console.log(newObject)\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nconst addKategoria = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post('/api/kategoriat', newObject, config)\n  return response.data\n}\n\nconst modifyKysymys = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\n  return response.data\n}\n\n\nexport default {\n  getAll,\n  setToken,\n  addKysymys,\n  remove,\n  addKategoria,\n  modifyKysymys,\n}\n","import axios from 'axios'\n\nconst baseUrl = '/api/yle'\n\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\n// const addYle = async (newObject) => {\n//   const response = await axios.post(baseUrl, newObject)\n//   return response.data\n// }\n\nexport default {\n  getAll,\n}\n","import yleService from '../services/yle'\n\nconst initialState = {\n  edustajat: [],\n  puolueet: [],\n  kysymykset: [],\n}\n\nconst ylenKysymyksetReducer = (store = initialState, action) => {\n  if (action.type === 'DATA') {\n    return {\n      ...store,\n      edustajat: action.data.edustajat,\n      puolueet: action.data.puolueet,\n      kysymykset: action.data.kysymykset,\n    }\n  }\n  return store\n}\n\nexport const getYlenKysymykset = () => async (dispatch) => {\n  const all = await yleService.getAll()\n  dispatch({\n    type: 'DATA',\n    data: all[0],\n  })\n}\n\n// export const getYlenKysymykset = () => async (dispatch) => {\n//   console.log('moi')\n//   console.log('csv', csv)\n//   const moi = await Papa.parse(csv, {\n//     header: true,\n//     download: true,\n//     complete(results) {\n//       dispatch({\n//         type: 'GET',\n//         data: results.data,\n//       })\n//     },\n//   })\n//   console.log('moitaas', moi)\n// }\n\n// export const addYlePuolueet = (nimet, ylendata) => async (dispatch) => {\n//   const edustajat = []\n//   for (let i = 0; i < nimet.length; i = i + 1) {\n//     const apu = nimet[i].split('/')\n//     let puolue = apu[1]\n//     switch (puolue) {\n//       case 'kesk':\n//         puolue = 'Keskustan eduskuntaryhmä'\n//         break\n//       case 'ps':\n//         puolue = 'Perussuomalaisten eduskuntaryhmä'\n//         break\n//       case 'kok':\n//         puolue = 'Kansallisen kokoomuksen eduskuntaryhmä'\n//         break\n//       case 'sd':\n//         puolue = 'Sosialidemokraattinen eduskuntaryhmä'\n//         break\n//       case 'vihr':\n//         puolue = 'Vihreä eduskuntaryhmä'\n//         break\n//       case 'vas':\n//         puolue = 'Vasemmistoliiton eduskuntaryhmä'\n//         break\n//       case 'r':\n//         puolue = 'Ruotsalainen eduskuntaryhmä'\n//         break\n//       case 'kd':\n//         puolue = 'Kristillisdemokraattinen eduskuntaryhmä'\n//         break\n//       default:\n//         break\n//     }\n//     const nimi = apu[0].toLowerCase()\n//     const data = {\n//       nimi,\n//       puolue,\n//     }\n\n//     edustajat.push(data)\n//   }\n//   const kesk = []\n//   const kok = []\n//   const sdp = []\n//   const vihr = []\n//   const vas = []\n//   const rkp = []\n//   const kd = []\n//   const ps = []\n\n//   const ulos = []\n//   for (let i = 0; i < ylendata.length; i = i + 1) {\n//     let copy = []\n//     // ylen datassa oli kaksi samaa nimeä ja ideetä\n//     if (ylendata[i].puolue !== 'Piraattipuolue') {\n//       copy = ylendata[i]\n//     }\n//     if (copy.sukunimi && copy.etunimi) {\n//       const nimi = copy.sukunimi.replace(/\\s/g, '') + copy.etunimi.replace(/\\s/g, '')\n//       const edustaja = edustajat.find(x => x.nimi === nimi.toLowerCase())\n//       if (edustaja) {\n//         copy.puolue = edustaja.puolue\n//         switch (copy.puolue) {\n//           case 'Keskustan eduskuntaryhmä':\n//             kesk.push(copy)\n//             break\n//           case 'Perussuomalaisten eduskuntaryhmä':\n//             ps.push(copy)\n//             break\n//           case 'Kansallisen kokoomuksen eduskuntaryhmä':\n//             kok.push(copy)\n//             break\n//           case 'Sosialidemokraattinen eduskuntaryhmä':\n//             sdp.push(copy)\n//             break\n//           case 'Vihreä eduskuntaryhmä':\n//             vihr.push(copy)\n//             break\n//           case 'Vasemmistoliiton eduskuntaryhmä':\n//             vas.push(copy)\n//             break\n//           case 'Ruotsalainen eduskuntaryhmä':\n//             rkp.push(copy)\n//             break\n//           case 'Kristillisdemokraattinen eduskuntaryhmä':\n//             kd.push(copy)\n//             break\n//           default:\n//             break\n//         }\n//         ulos.push(copy)\n//       }\n//     }\n//   }\n//   const puolueet = {\n//     kesk,\n//     kok,\n//     sdp,\n//     vihr,\n//     vas,\n//     rkp,\n//     kd,\n//     ps,\n//   }\n\n//   const kysymykset = Object.keys(ulos[0])\n//   const sliced = kysymykset.slice(37, 99)\n//   const filtered = sliced.filter(x => !x.includes('kommentti'))\n\n\n//   dispatch({\n//     type: 'DATA',\n//     edustajat: ulos,\n//     puolueet,\n//     kysymykset: filtered,\n//   })\n// }\n\nexport default ylenKysymyksetReducer\n","import React from 'react';\nimport { Button, Checkbox, Dropdown, Segment } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport FormInput from './FormInput'\nimport TextArea from './TextArea'\nimport { htmlEdustajat, htmlPuolueet } from '../../reducers/htmlReducer'\nimport { addPuolueet, addDetails, addEdustajat, addKategoriat } from '../../reducers/kysymysReducer'\nimport { notifyCreation } from '../../reducers/notifyReducer'\nimport Notification from '../Notification'\nimport kysymysService from './../../services/kysymys'\nimport { getYlenKysymykset } from '../../reducers/ylenKysymyksetReducer';\n\nclass HtmlForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vastaus: '',\n      kysymyksenAsettelu: false,\n      hot: false,\n      jaaLeftist: '',\n      jaaLiberal: '',\n      green: \"\"\n    };\n  }\n  componentWillMount = async () => {\n    if (!this.props.ylenKysymykset.kysymykset) { window.location.assign('/') }\n  }\n\n  onSubmit = async (e) => {\n    this.handleDetails(e)\n    await this.handleHtml(e)\n    this.handlePuolueet()\n    this.handleEdustajat()\n    this.addKatet(e)\n    if (!this.props.notify.includes('ei ole validi')) {\n      try {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\n        kysymysService.setToken(JSON.parse(loggedUserJSON).token)\n        await kysymysService.addKysymys(this.props.kysymys)\n        this.props.history.push('/')\n      } catch (exception) {\n        this.props.notifyCreation('Tapahtui virhe', 5)\n      }\n    }\n  }\n\n  handlePuolueet = () => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(this.props.html.puolueet, 'text/html');\n    const puolueet = []\n    if (this.props.html.puolueet !== '' && doc.getElementsByTagName('TBODY')[0]) {\n      // eslint-disable-next-line\n      const rows = doc.getElementsByTagName('TBODY')[0].rows;\n      for (let i = 1; i < rows.length; i = i + 1) {\n        const puolue = {\n          nimi: rows[i].cells[0].innerHTML,\n          jaa: Number(rows[i].cells[1].innerHTML.replace(/\\s/g, '')),\n          ei: Number(rows[i].cells[2].innerHTML.replace(/\\s/g, '')),\n          tyhjia: Number(rows[i].cells[3].innerHTML.replace(/\\s/g, '')),\n        };\n        puolue.kanta = Object.keys(puolue).reduce((a, b) => (puolue[a] > puolue[b] ? a : b));\n        puolue.poissa = Number(rows[i].cells[4].innerHTML.replace(/\\s/g, ''))\n        puolue.yhteensa = Number(rows[i].cells[5].innerHTML.replace(/\\s/g, ''));\n        if (puolueet.filter(p => p.nimi === puolue.nimi).length === 0) {\n          puolueet.push(puolue)\n        }\n      }\n    } else {\n      this.props.notifyCreation('Puolue html-elementti ei ole validi', 5)\n    }\n    if (puolueet.length > 5 && puolueet.length < 20) {\n      this.props.notifyCreation('Kannat lisätty', 5)\n      this.props.addPuolueet(puolueet)\n    } else {\n      this.props.notifyCreation('Puolue html-elementti ei ole validi', 5)\n    }\n  }\n\n  handleEdustajat = () => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(this.props.html.edustajat, 'text/html');\n    const edustajat = []\n    if (this.props.html.edustajat !== '' && doc.getElementsByTagName('TBODY')[0]) {\n      // eslint-disable-next-line\n      const rows = doc.getElementsByTagName('TBODY')[0].rows \n      for (let i = 1; i < rows.length; i = i + 1) {\n        const edustaja = {\n          nimi: rows[i].cells[0].innerHTML.replace(/\\s/g, ''),\n          kanta: rows[i].cells[1].innerHTML.replace(/\\s/g, ''),\n\n        };\n        if (edustajat.filter(p => p.nimi === edustaja.nimi).length === 0) {\n          edustajat.push(edustaja)\n        }\n      }\n    } else {\n      this.props.notifyCreation('Edustajat html-elementti ei ole validi', 5)\n    }\n    \n    if (edustajat.length > 180 && edustajat.length < 201) {\n      this.props.notifyCreation('Kannat lisätty', 5)\n      this.props.addEdustajat(edustajat)\n    } else {\n      this.props.notifyCreation('Edustajat html-elementti ei ole validi', 5)\n    }\n  }\n\n  handleHtml = (e) => {\n    e.preventDefault()\n    const edustajat = e.target.htmlEdustajat.value\n    this.props.htmlEdustajat(edustajat)\n    const puolueet = e.target.htmlPuolueet.value\n    this.props.htmlPuolueet(puolueet)\n    e.target.htmlPuolueet.value = ''\n    e.target.htmlEdustajat.value = ''\n  }\n\n  handleDetails = (e) => {\n    e.preventDefault()\n    const details = {\n      url: e.target.url.value,\n      selitys: e.target.selitys.value,\n      kysymys: e.target.kysymys.value,\n      vuosi: e.target.vuosi.value,\n      vastaus: this.state.vastaus,\n      kysymyksenAsettelu: this.state.kysymyksenAsettelu,\n      hot: this.state.hot,\n    }\n    if (typeof this.state.jaaLeftist === 'boolean') {\n      details.jaaLeftist = this.state.jaaLeftist\n    } if (typeof this.state.jaaLiberal === 'boolean') {\n      details.jaaLiberal = this.state.jaaLiberal\n    } if (typeof this.state.green === 'boolean') {\n      details.green = this.state.green\n    }\n    this.props.addDetails(details)\n    e.target.url.value = ''\n    e.target.selitys.value = ''\n    e.target.kysymys.value = ''\n    e.target.vuosi.value = ''\n  }\n\n  addKatet = () => {\n    // eslint-disable-line no-use-before-define\n    const kategoriat = []\n    this.props.kategoriat.map(k => (document.getElementById(k.nimi).checked\n      ? kategoriat.push(k) : null))\n    const idt = kategoriat.map(k => k.id)\n    this.props.addKategoriat(idt)\n  }\n\n  handleChange(e, { name, value }) {\n    this.setState({ [name]: value })\n  }\n\n  handleRistiriita() {\n    this.setState({ kysymyksenAsettelu: !this.state.kysymyksenAsettelu })\n  }\n\n  handleHot() {\n    this.setState({ hot: !this.state.hot })\n  }\n\n  handleJaaLiberal = (value) => {\n    this.setState({\n      jaaLiberal: value,\n    });\n  }\n\n  handleJaaLeftist = (value) => {\n    this.setState({\n      jaaLeftist: value,\n    });\n  }\n\n  handleGreen = (value) => {\n    this.setState({\n      green: value,\n    });\n  }\n\n  disClick = (field) => {\n    this.setState({\n      [field]: \"\"\n    })\n  }\n\n  render() {\n    /*eslint-disable */\n   const values = this.props.ylenKysymykset.kysymykset.map(x => x = { text: x, value: x })\n   /* eslint-enable */\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.onSubmit} id=\"htmlform\">\n          <h2>Lisää kysymys</h2>\n          <FormInput label=\"Kirjoita alle äänestyksen kohteen oleva kysymys\" placeholder=\"kysymys\" name=\"kysymys\" />\n          <FormInput label=\"Tapahtuma vuosi\" placeholder=\"2018\" name=\"vuosi\" />\n          <FormInput label=\"Linkki edukunnan sivuille\" placeholder=\"url\" name=\"url\" />\n          <TextArea label=\"Tarkempi kuvaus kysymyksestä\" placeholder=\"selitys\" name=\"selitys\" />\n          <Segment compact style={{ background: '#d4eff9' }}>\n            <Checkbox toggle onChange={() => this.handleHot()} />\n            Keskeinen kysymys tällä hallituskaudella\n            <table>\n              <tr>\n                <td>\n                <Checkbox\n                  radio\n                  name=\"liberalRadioGroup\"\n                  checked={this.state.jaaLiberal === true}\n                  label=\"Jaa vastaus liberaali\"\n                  onChange={() => this.handleJaaLiberal(true)}\n                  />\n                  </td>\n                  <td>\n                  <Checkbox\n                    radio\n                    name=\"liberalRadioGroup\"\n                    checked={this.state.jaaLiberal === false}\n                    label=\"Jaa vastaus konservatiivinen\"\n                    onChange={() => this.handleJaaLiberal(false)}\n                  />\n                  </td>\n                  <td>\n                  <Checkbox\n                    radio\n                    name=\"liberalRadioGroup\"\n                    checked={this.state.jaaLiberal === \"\"}\n                    label=\"Ei sovi\"\n                    onChange={() => this.disClick(\"jaaLiberal\")}\n                  />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.jaaLeftist === true}\n                      label=\"Jaa vastaus vasemmistolainen\"\n                      onChange={() => this.handleJaaLeftist(true)}\n                    />\n                    </td>\n                    <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.jaaLeftist === false}\n                      label=\"Jaa vastaus oikeistolainen\"\n                      onChange={() => this.handleJaaLeftist(false)}\n                    />\n                    </td>\n                    <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.jaaLeftist === \"\"}\n                      label=\"Ei sovi\"\n                      onChange={() => this.disClick(\"jaaLeftist\")}\n                    />\n                    </td>\n\n                </tr>\n                 <tr>\n\n                      <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.green === true}\n                      label=\"Jaa vastaus vihreä\"\n                      onChange={() => this.handleGreen(true)}\n                    />\n                    </td>\n                    <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.green === false}\n                      label=\"Ei vastaus vihreä\"\n                      onChange={() => this.handleGreen(false)}\n                    />\n                    </td>\n                    <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.green === \"\"}\n                      label=\"Ei sovi\"\n                      onChange={() => this.disClick(\"green\")}\n                    />\n                    </td>\n                </tr>\n              </table>\n              \n          </Segment>\n          <b>Kategoriat</b>\n          <br />\n          {this.props.kategoriat.map(k =>\n            (<Checkbox\n              key={k.nimi}\n              label={k.nimi}\n              name=\"kategoriat\"\n              id={k.nimi}\n            />))}\n          <br />\n          <br />\n          <b>Valitse osuvin kysymys ylen vaalikoneesta</b>\n          <Dropdown type=\"text\" name=\"vastaus\" placeholder=\"Valitse kysymys\" onChange={this.handleChange.bind(this)} fluid search selection options={values} />\n          <Segment compact style={{ background: '#d4eff9' }}>\n            <Checkbox toggle onChange={() => this.handleRistiriita()} />\n            Ylen ja eduskunnan kysymyksenasettelu ristiriitainen\n          </Segment>\n          <Notification />\n          <TextArea\n            placeholder=\"<table><tbody>...</tbody></table>\"\n            name=\"htmlPuolueet\"\n            label=\"Kopio alle eduskunnan sivuilta html-muotoinen table-elementti, jossa tiedot äänestyksen tuloksista eduskuntaryhmittäin.\"\n          />\n          <br />\n          <TextArea\n            placeholder=\"<table><tbody>...</tbody></table>\"\n            name=\"htmlEdustajat\"\n            label=\"Kopio alle eduskunnan sivuilta html-muotoinen table-elementti, jossa tiedot äänestyksen tuloksista edustajittain.\"\n          />\n          <br />\n\n          <p><Button positive type=\"submit\" className=\"fluid ui button\">create</Button></p>\n          <br />\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  html: state.html,\n  kysymys: state.kysymys,\n  kysymykset: state.kysymykset,\n  notify: state.notify,\n  kategoriat: state.kategoriat,\n  ylenKysymykset: state.ylenKysymykset,\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n    htmlEdustajat,\n    htmlPuolueet,\n    addPuolueet,\n    addEdustajat,\n    addDetails,\n    notifyCreation,\n    addKategoriat,\n    getYlenKysymykset,\n  },\n)(HtmlForm)\n","import React from 'react';\nimport { Button } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\n\nconst Home = () => (\n  <div>\n    <h1>Tervetuloa</h1>\n    <p style={{ fontSize: '1.5em' }}>\n    Täällä voit tarkastella eduskunnan käyttäytymistä suhteessa omiin näkemyksiisi.\n      <br />\n      <br />\n    Sivustolla on vaalikone, jonka avulla voit katsoa,\n    mikä puolue on äänestänyt eduskunnassa lähimmäksi sinun näkemyksiäsi. Vaalikoneen kysymykset\n    on otettu suoraan eduskunnan äänestyksistä, minkä vuoksi ne voivat tuntua vaikeilta.\n    Näissä kysymyksissä on kuitenkin se etu, että vastaukset kuvaavat eduskuntaryhmien\n    todellista käyttäytymistä sen sijaan, että tulos muodostuisi aiotun käyttäytymisen perusteella.\n    Ennen vaaleja annetut lupaukset eivät siis vaikuta tämän vaalikoneen tuloksiin.\n      <br />\n      <br />\n    Lisäksi vaalikone tarjoaa mahdollisuuden tarkastella eduskuntaryhmien äänestykäyttäytymistä\n    eduskunnassa suhteessa\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://yle.fi/uutiset/3-7869597\"> ylen vaalikoneessa. </a>\n    Vaalikoneen avulla voit siis arvioida myös sitä,\n    kuinka hyvin ennen vaaleja annetut lupaukset ovat pitäneet.\n      <br />\n      <Link\n        to=\"/kone\"\n      >\n        <br />\n        <Button size=\"big\" inverted color=\"blue\">Vaalikausikoneeseen</Button>\n      </Link>\n      <Button size=\"big\" inverted color=\"yellow\" onClick={() => window.location.assign(\"/graaffit\")}>Vaalikausigraaffit</Button>\n    </p>\n  </div>\n)\n\nexport default Home\n","const initialState = {\n  kysymykset: [],\n  puolueet: [\n    { name: 'Sosialidemokraattinen eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/GSMua2B.png' },\n    { name: 'Keskustan eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/qbiX1tI.png' },\n    { name: 'Perussuomalaisten eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/4YZPeP9.jpg' },\n    { name: 'Kansallisen kokoomuksen eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/kSDY19E.jpg' },\n    { name: 'Ruotsalainen eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/hrCJsLx.png' },\n    { name: 'Vihreä eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/qOxMDMd.png' },\n    { name: 'Kristillisdemokraattinen eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/oVzcTTD.jpg' },\n    { name: 'Vasemmistoliiton eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/P0wEpt3.png' },\n    { name: 'Sininen eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/gbryVO0.png' },\n    { name: 'Liike Nyt-eduskuntaryhmä', aanet: 0, url: 'https://liikenyt.fi/wp-content/uploads/2018/04/liike-nyt-vari-ensisijainen.jpg' },\n  ],\n  puolue: '',\n}\n\nconst kayttajaReducer = (store = initialState, action) => {\n  const puolue = store.puolueet.filter(p => p.name === action.type)\n  const filtered = store.puolueet.filter(p => p.name !== action.type)\n  if (puolue.length > 0) {\n    puolue[0].aanet = puolue[0].aanet + 1\n    filtered.push(puolue[0])\n  }\n\n  if (action.type === 'VASTAUS') {\n    const old = store.kysymykset.filter(k => k.id !== action.kysymys.id)\n    old.push(action.kysymys)\n    return { ...store, kysymykset: old }\n  }\n\n  if (action.type === 'PUOLUE') {\n    return { ...store, puolue: action.puolue }\n  }\n  switch (action.type) {\n    case 'Liike Nyt-eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Keskustan eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Perussuomalaisten eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Kansallisen kokoomuksen eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Sosialidemokraattinen eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Vihreä eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Vasemmistoliiton eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Sininen eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Ruotsalainen eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Kristillisdemokraattinen eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    default:\n  }\n  return store\n}\n\nexport const addKysymys = content => async (dispatch) => {\n  dispatch({\n    type: 'VASTAUS',\n    kysymys: content,\n  })\n}\n\nexport const addPuolue = content => async (dispatch) => {\n  dispatch({\n    type: 'PUOLUE',\n    puolue: content,\n  })\n}\n\nexport const addVastaus = content => async (dispatch) => {\n  dispatch({\n    type: content,\n  })\n}\n\n\nexport default kayttajaReducer;\n","\nconst vastausKategoriat = {\n  sosiaalipolitiikka: ['147|Kansalaisten oikeus terveyspalveluihin on tärkeämpää kuin kuntien itsehallinto.', '146|Vanhuksen ja hänen omaistensa vastuuta hoitokustannuksista on lisättävä.', '145|Viranomaisten pitää puuttua lapsiperheiden ongelmiin nykyistä herkemmin.', '144|Terveys- ja sosiaalipalvelut on tuotettava ensijaisesti julkisina palveluina.', '143|Parantumattomasti sairaalla on oltava oikeus avustettuun kuolemaan.', '127|Suomessa on liian helppo elää sosiaaliturvan varassa', '129|Suomessa on siirryttävä perustuloon joka korvaisi nykyisen sosiaaliturvan vähimmäistason.', '135|Lapsilisiä on korotettava ja laitettava verolle.', '136|Suomella ei ole varaa nykyisen laajuisiin sosiaali- ja terveyspalveluihin.'],\n  kaupansaantely: ['247|Mietojen viinien ja vahvojen oluiden myynti ruokakaupassa sallitaan.', '244|Hyväksytään periaatepäätös uuden ydinvoimalaitosyksikön rakentamisesta.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.', '144|Terveys- ja sosiaalipalvelut on tuotettava ensijaisesti julkisina palveluina.', '128|Kaupan ja muiden liikkeiden aukioloajat on vapautettava.'],\n  tyoehdot: ['130|Työntekijälle on turvattava lailla minimityöaika.', '131|Ansiosidonnaisen työttömyysturvan kestoa pitää lyhentää.'],\n  eu: ['150|Suomen pitää ottaa suurempi vastuu EU:n alueelle tulevista turvapaikanhakijoista.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.'],\n  talouspolitiikka: ['245|Tuloveroa alennetaan tasaisesti kaikissa tuloluokissa talouden elvyttämiseksi.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.', '146|Vanhuksen ja hänen omaistensa vastuuta hoitokustannuksista on lisättävä.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.', '134|Valtion ja kuntien taloutta on tasapainotettava ensisijaisesti leikkaamalla menoja.', '136|Suomella ei ole varaa nykyisen laajuisiin sosiaali- ja terveyspalveluihin.'],\n  verotus: ['133|Ruoan verotusta on varaa kiristää.', '135|Lapsilisiä on korotettava ja laitettava verolle.'],\n  turvallisuus: ['149|Geenimuunneltu ruoka on turvallista ihmiselle ja ympäristölle.', '142|Suomen on osallistuttava Isisin vastaiseen taisteluun kouluttamalla Irakin hallituksen joukkoja.', '137|Nato-jäsenyys vahvistaisi Suomen turvallisuuspoliittista asemaa.', '138|Suomeen tarvitaan enemmän poliiseja.', '139|Maahanmuuttoa Suomeen on rajoitettava terrorismin uhan vuoksi.', '141|Verkkovalvonnassa valtion turvallisuus on tärkeämpää kuin kansalaisten yksityisyyden suoja.'],\n  maahanmuutto: ['150|Suomen pitää ottaa suurempi vastuu EU:n alueelle tulevista turvapaikanhakijoista.', '139|Maahanmuuttoa Suomeen on rajoitettava terrorismin uhan vuoksi.'],\n  ulkopolitiikka: ['142|Suomen on osallistuttava Isisin vastaiseen taisteluun kouluttamalla Irakin hallituksen joukkoja.', '140|Venäjän etupiiripolitiikka on uhka Suomelle.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.', '137|Nato-jäsenyys vahvistaisi Suomen turvallisuuspoliittista asemaa.'],\n  yksityisyys: ['246|Edellisen eduskunnan hyväksymä lainmuutos samaa sukupuolta olevien avioliiton sallimisesta peruutetaan.', '141|Verkkovalvonnassa valtion turvallisuus on tärkeämpää kuin kansalaisten yksityisyyden suoja.'],\n  ymparisto: ['244|Hyväksytään periaatepäätös uuden ydinvoimalaitosyksikön rakentamisesta.', '149|Geenimuunneltu ruoka on turvallista ihmiselle ja ympäristölle.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.'],\n  hallinto: ['201|Suomen Nato-jäsenyydestä on järjestettävä kansanäänestys.', '147|Kansalaisten oikeus terveyspalveluihin on tärkeämpää kuin kuntien itsehallinto.', '151|On aika luopua ajatuksesta, että koko Suomi on pidettävä asuttuna.'],\n  koulutus: ['152|Peruskoulun opetusryhmien koko on rajattava lailla esimerkiksi 20 oppilaaseen.'],\n}\n\nexport const puolueet = [\n  {\n    text: 'Keskusta',\n    value: 'kesk',\n  },\n  {\n    text: 'Kokoomus',\n    value: 'kok',\n  },\n  {\n    text: 'SDP',\n    value: 'sdp',\n  },\n  {\n    text: 'Vihreät',\n    value: 'vihr',\n  },\n  {\n    text: 'Vasemmistoliitto',\n    value: 'vas',\n  },\n  {\n    text: 'RKP',\n    value: 'rkp',\n  },\n  {\n    text: 'Kristillisdemokraatit',\n    value: 'kd',\n  },\n  {\n    text: 'Perussuomalaiset',\n    value: 'ps',\n  },\n]\n\nexport function parseParties(party) {\n  let puolue = party\n  switch (party) {\n    case 'Keskustan eduskuntaryhmä':\n      puolue = 'kesk'\n      break\n    case 'Perussuomalaisten eduskuntaryhmä':\n      puolue = 'ps'\n      break\n    case 'Kansallisen kokoomuksen eduskuntaryhmä':\n      puolue = 'kok'\n      break\n    case 'Sosialidemokraattinen eduskuntaryhmä':\n      puolue = 'sdp'\n      break\n    case 'Vihreä eduskuntaryhmä':\n      puolue = 'vihr'\n      break\n    case 'Vasemmistoliiton eduskuntaryhmä':\n      puolue = 'vas'\n      break\n    case 'Ruotsalainen eduskuntaryhmä':\n      puolue = 'rkp'\n      break\n    case 'Kristillisdemokraattinen eduskuntaryhmä':\n      puolue = 'kd'\n      break\n    default:\n      break\n  }\n  return puolue\n}\nexport default { vastausKategoriat, puolueet, parseParties }\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table } from 'semantic-ui-react'\nimport { parseParties } from '../yle/ylesQuestionsCategories';\n\nclass YleKannat extends React.Component {\n  state = {\n    eit: false,\n    jaat: false,\n    yhteensa: false,\n    kannat: false,\n    red: '',\n    green: '',\n  }\n  componentWillMount = () => {\n    const puolueet = this.props.ylenKysymykset.puolueet\n    const puolue = parseParties(this.props.puolue)\n    if (this.props.puolue && this.props.kysymys) {\n      const kannat = puolueet[puolue].map(x => (\n        {\n          edustaja: `${x.etunimi} ${x.sukunimi}`,\n          kanta: x[this.props.kysymys],\n        }))\n      const eit = kannat.filter(x => x.kanta.toString() === 'jokseenkin eri mieltä'\n    || x.kanta.toString() === 'täysin eri mieltä')\n      const jaat = kannat.filter(x => x.kanta.toString() === 'jokseenkin samaa mieltä'\n    || x.kanta.toString() === 'täysin samaa mieltä')\n      const yhteensa = kannat.length\n      if (eit.length > jaat.length) {\n        this.setState({\n          red: '#FFB6C1',\n        })\n      } if (eit.length < jaat.length) {\n        this.setState({\n          green: 'lightgreen',\n        })\n      }\n      this.setState({\n        eit,\n        jaat,\n        yhteensa,\n        kannat,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center' }}>Ylen vaalikoneen kysymys</h2>\n        { this.props.show &&\n        <h2 style={{ background: '#ffc180', textAlign: 'center' }}>{this.props.puolue}</h2>\n          }\n        <h3>{this.props.kysymys}</h3>\n        <p><b>Ylen vaalikoneeseen vastanneet edustajat: </b>{this.state.yhteensa}</p>\n        <p style={{ background: this.state.green }}><b>Jaa: </b>\n          {this.state.jaat.length}\n          ({Math.round((this.state.jaat.length / this.state.yhteensa) * 100)}%)\n        </p>\n        <p style={{ background: this.state.red }}>\n          <b>Ei: </b> {this.state.eit.length}\n          ({Math.round((this.state.eit.length / this.state.yhteensa) * 100)}%)\n        </p>\n        { this.props.show &&\n        <Table celled striped id=\"table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell positive>Edustaja</Table.HeaderCell>\n              <Table.HeaderCell>\n              Kanta\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {this.state.kannat.map(x =>\n           (\n             <Table.Row key={x.edustaja}>\n               <Table.Cell> {x.edustaja}</Table.Cell>\n               <Table.Cell>{x.kanta}</Table.Cell>\n             </Table.Row>))}\n          </Table.Body>\n        </Table>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  ylenKysymykset: state.ylenKysymykset,\n});\n\nexport default connect(mapStateToProps)(YleKannat);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Tab } from 'semantic-ui-react';\n\nclass Members extends React.Component {\n  state = {\n    edustajat: [],\n    panes: [],\n  }\n  componentWillMount = () => {\n    const edustajat = this.props.edustajat.map(x => ({\n      nimi: x.nimi.split('/')[0],\n      puolue: this.parseParties(x.nimi.split('/')[1]),\n      kanta: x.kanta,\n    }))\n    const out = edustajat.filter(x => x.puolue === this.props.puolue)\n    if (out.length < 11) {\n      this.setState({\n        edustajat: out,\n      })\n    } else {\n      const sliced = this.chunkArray(out, 10)\n      const panes = []\n      sliced.forEach((value, index) => {\n        panes.push({\n          menuItem: index.toString(),\n          render: () =>\n            (\n              <Tab.Pane>\n                <Table celled id=\"moi\">\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Nimi</Table.HeaderCell>\n                      <Table.HeaderCell>Kanta</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {value.map(y => (\n                      <Table.Row key={y.nimi}>\n                        <Table.Cell>{y.nimi}</Table.Cell>\n                        <Table.Cell style={{\n                      background:\n                        this.color(y.kanta),\n                      }}\n                        >{y.kanta}\n                        </Table.Cell>\n                      </Table.Row>\n               ))}\n                  </Table.Body>\n                </Table>\n              </Tab.Pane>\n            ),\n        })\n      })\n      this.setState({\n        panes,\n      })\n    }\n  }\n\n  chunkArray = (myArray, chunk) => {\n    let index = 0;\n    const arrayLength = myArray.length;\n    const tempArray = [];\n\n    for (index = 0; index < arrayLength; index = index + chunk) {\n      const myChunk = myArray.slice(index, index + chunk);\n      tempArray.push(myChunk);\n    }\n\n    return tempArray;\n  }\n\n parseParties = (party) => {\n   let puolue = party\n   switch (party) {\n     case 'kesk':\n       puolue = 'Keskustan eduskuntaryhmä'\n       break\n     case 'ps':\n       puolue = 'Perussuomalaisten eduskuntaryhmä'\n       break\n     case 'kok':\n       puolue = 'Kansallisen kokoomuksen eduskuntaryhmä'\n       break\n     case 'sd':\n       puolue = 'Sosialidemokraattinen eduskuntaryhmä'\n       break\n     case 'vihr':\n       puolue = 'Vihreä eduskuntaryhmä'\n       break\n     case 'vas':\n       puolue = 'Vasemmistoliiton eduskuntaryhmä'\n       break\n     case 'r':\n       puolue = 'Ruotsalainen eduskuntaryhmä'\n       break\n     case 'kd':\n       puolue = 'Kristillisdemokraattinen eduskuntaryhmä'\n       break\n     default:\n       break\n   }\n   return puolue\n }\n\n color = (jaa) => {\n   if (jaa === 'Jaa') {\n     return '#e6ffe6'\n   } if (jaa === 'Ei') {\n     return '#ffcccc'\n   }\n   return null\n }\n\n render() {\n   return (\n     <div>\n       <h2>{this.props.puolue}</h2>\n       {this.state.edustajat.length > 1 &&\n       <Table celled>\n         <Table.Header>\n           <Table.Row>\n             <Table.HeaderCell>Nimi</Table.HeaderCell>\n             <Table.HeaderCell>Kanta</Table.HeaderCell>\n           </Table.Row>\n         </Table.Header>\n         <Table.Body>\n           {this.state.edustajat.map(x => (\n             <Table.Row key={x.nimi}>\n               <Table.Cell>{x.nimi}</Table.Cell>\n               <Table.Cell style={{\n                      background:\n                        this.color(x.kanta),\n                      }}\n               >{x.kanta}\n               </Table.Cell>\n             </Table.Row>\n               ))}\n         </Table.Body>\n       </Table>\n       }\n       <Tab panes={this.state.panes} style={{ background: 'white' }} />\n     </div>\n   )\n }\n}\n\nconst mapStateToProps = state => ({\n  kysymykset: state.kysymykset,\n});\nexport default connect(\n  mapStateToProps,\n  null,\n)(Members);\n","import _ from 'lodash'\nimport React from 'react';\nimport { Table, Button, Popup, TransitionablePortal, Segment, Header } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { addPuolue } from '../reducers/kayttajaReducer'\nimport YleKannat from './yleParties/YleKannat';\nimport Members from './questions/MembersAnswers';\n\n\nclass AnswersTable extends React.Component {\n  state = {\n    monta: this.props.kayttaja.kysymykset.length,\n    show: false,\n    puolue: 'Keskustan eduskuntaryhmä',\n  }\n\n  show = (puolue) => {\n    if (puolue) {\n      this.setState({\n        puolue,\n      });\n    }\n    this.setState({\n      show: !this.state.show,\n    });\n  }\ncolor = (jaa) => {\n  if (jaa === 'jaa') {\n    return '#e6ffe6'\n  } if (jaa === 'ei') {\n    return '#ffcccc'\n  }\n  return null\n}\n\nrender() {\n  const animation = 'horizontal flip'\n  const duration = 500\n  return (\n    <div style={{ padding: '1em', paddingLeft: '0em' }} >\n      <TransitionablePortal\n        open={this.state.show}\n        closeOnDocumentClick={false}\n        transition={{ animation, duration }}\n      >\n        <Segment style={{\n                  left: '10%',\n                  position: 'fixed',\n                  top: '20%',\n                  padding: '1em',\n                }}\n        >\n          <Button floated=\"right\" color=\"red\" inverted onClick={() => this.show()}>Piilota vastaukset</Button>\n          <Header style={{ textDecoration: 'underline' }}>{this.state.puolue}\n          </Header>\n          <Table striped celled id=\"table\">\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell>Kysymys</Table.HeaderCell>\n                <Table.HeaderCell>Puolueen kanta</Table.HeaderCell>\n                <Table.HeaderCell>Edustajien kannat</Table.HeaderCell>\n                <Table.HeaderCell>Vertaa vastausta ylen koneeseen</Table.HeaderCell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {this.props.kayttaja.kysymykset.map(x =>\n              (\n                <Table.Row key={x.id}>\n                  <Table.Cell>\n                    <p style={{ fontSize: '1.2em' }}>{x.kysymys}</p>\n                  </Table.Cell>\n                  <Table.Cell\n                    style={{\n                      background:\n                        this.color(x.puolueet.find(y => y.nimi === this.state.puolue).kanta),\n                      }}\n                  >\n                    {x.puolueet.find(y => y.nimi === this.state.puolue).kanta}\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Popup\n                      trigger={<Button color=\"blue\" icon=\"add\" />}\n                      on=\"click\"\n                      position=\"left center\"\n                      style={{\n                        background: '#99ddff',\n                      }}\n                    >\n                      <Popup.Content style={{ padding: '1em', background: 'white' }}>\n                        <b style={{ fontSize: '1em' }}>{x.kysymys}</b>\n                        <Members edustajat={x.edustajat} puolue={this.state.puolue} />\n                      </Popup.Content>\n                    </Popup>\n                  </Table.Cell>\n                  <Table.Cell>\n                    <Popup\n                      trigger={<Button color=\"blue\" icon=\"add\" />}\n                      on=\"click\"\n                      style={{\n                        background: '#99ddff',\n                      }}\n                    >\n                      <Popup.Content style={{\n                        background: 'white',\n                        padding: '1em',\n                        }}\n                      >\n                        {x.kysymyksenAsettelu &&\n                        <p style={{ padding: 'o.5em', background: '#ffff66' }}>\n                        Huomaa ristiriita kysymyksenasettelussa!\n                        </p>\n                      }\n                        <YleKannat puolue={this.state.puolue} kysymys={x.vastaus} />\n                      </Popup.Content>\n                    </Popup>\n                  </Table.Cell>\n                </Table.Row>))}\n            </Table.Body>\n          </Table>\n        </Segment>\n      </TransitionablePortal>\n      <Table striped celled id=\"table\">\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell positive>Logo</Table.HeaderCell>\n            <Table.HeaderCell positive>Eduskuntaryhmä</Table.HeaderCell>\n            <Table.HeaderCell>\n                  Kuinka sopiva puolue ({this.state.monta} kysymykseen vastattu)\n            </Table.HeaderCell>\n            <Table.HeaderCell positive>Tarkastele vastauksia</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {_.orderBy(this.props.kayttaja.puolueet, ['aanet'], ['desc']).map(x =>\n              (\n                <Table.Row key={x.name}>\n                  <Table.Cell>\n                    <img src={x.url} alt={x.name} height=\"80em\" width=\"120em\" />\n                  </Table.Cell>\n                  <Table.Cell>\n                    <p style={{ fontSize: '1.2em' }}>{x.name}</p>\n                  </Table.Cell>\n                  <Table.Cell>{Math.round((x.aanet / this.state.monta) * 100)} %</Table.Cell>\n                  <Table.Cell>\n                    {x.name !== 'Liike Nyt-eduskuntaryhmä' && x.name !== 'Sininen eduskuntaryhmä' ?\n                      <Button color=\"blue\" inverted onClick={() => this.show(x.name)}>Näytä vastaukset</Button>\n                    : <p>Ei mukana koko kautta</p>}\n                  </Table.Cell>\n                </Table.Row>))}\n        </Table.Body>\n      </Table>\n    </div>\n  )\n}\n}\n\nconst mapStateToProps = state => ({\n  kayttaja: state.kayttaja,\n  ylenKysymykset: state.ylenKysymykset,\n})\n\nexport default connect(\n  mapStateToProps,\n  { addPuolue },\n)(AnswersTable)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Grid, Header, Item } from 'semantic-ui-react';\nimport { addKysymys, addVastaus } from '../reducers/kayttajaReducer';\nimport { notifyCreation } from '../reducers/notifyReducer'\nimport AnswersTable from './AnswersTable';\nimport './Machine.css';\n\nclass Machine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      kysymykset: [],\n      monesko: 0,\n      kysymys: null,\n      show: false,\n      tulokset: false,\n      naytaKysymys: false,\n    };\n  }\n\n  componentWillMount = async () => {\n    const questions = this.filterQuestions(this.props.kysymykset)\n    const satunnainenKysymys = this.shuffle(questions)\n    if (satunnainenKysymys > 9) {\n      satunnainenKysymys.slice(9);\n    }\n    this.setState({\n      kysymykset: satunnainenKysymys,\n    });\n    if (!this.state.kysymys) {\n      this.setState({\n        kysymys: satunnainenKysymys[this.state.monesko],\n      })\n    } else {\n      window.location.assign('/')\n    }\n  }\n\n  filterQuestions = (questions) => {\n    let handledQuestions = questions\n    const selected_categories = this.props.selected_categories\n    if (this.props.hots) {\n      handledQuestions = questions.filter( question => question.hot)\n    } if (selected_categories.length > 0){\n      handledQuestions = questions.filter( q => selected_categories.some(cat => q.kategoriat.map(k => k.nimi).includes(cat)))\n      if (handledQuestions.length === 0) {\n        this.props.notifyCreation('Antamillasi ehdoilla ei löytynyt yhtään kysymystä. Kokeile valita hieman vähemmän kategorioita.', 15)\n      }\n    }\n    return handledQuestions\n  }\n/*eslint-disable */\n  shuffle = (array) => {\n    \n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex = currentIndex - 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n  /* eslint-enable */\n  show = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  }\n\n  naytaKysymys = () => {\n    this.setState({\n      naytaKysymys: !this.state.naytaKysymys,\n    });\n  }\n\n  tulokset= () => {\n    this.setState({\n      tulokset: !this.state.tulokset,\n    });\n  }\n\n\n  vastaus = (vastaus) => {\n    this.props.addKysymys(this.state.kysymys);\n    const jaaPuolueet = this.state.kysymys.puolueet.filter(p => p.kanta === vastaus);\n    const help = this.props.kayttaja.kysymykset.find(x => x.kysymys === this.state.kysymys.kysymys)\n    if (!help) {\n      for (let i = 0; i < jaaPuolueet.map(p => p.nimi).length; i = i + 1) {\n        this.props.addVastaus(jaaPuolueet.map(p => p.nimi)[i]);\n      }\n    }\n    this.setState({\n      monesko: this.state.monesko + 1,\n      kysymys: this.state.kysymykset[this.state.monesko + 1],\n      naytaKysymys: false,\n      show: false,\n    })\n  }\n\n  render() {\n    console.log(\"state\", this.state)\n    if (document.getElementById('discardHover')) {\n      const element = document.getElementById('discardHover')\n      console.log(element)\n    }\n    const visible = { display: this.state.show ? '' : 'none' };\n\n    if (this.props.kayttaja.kysymykset.length === this.state.kysymykset.length) {\n      return (\n        <div>\n          <h1 >Tulokset</h1>\n          <Button onClick={() => window.location.assign('/kone')} basic color=\"blue\">\n            Valitse uudet kategoriat ja vastaa taas kysymyksiin\n          </Button>\n          <AnswersTable />\n        </div>\n      );\n    }\n    if (!this.state.kysymys) {\n      window.location.assign('/')\n    }\n    return (\n      <Grid >\n        <Grid.Row>\n          <Header as=\"h1\" ><p style={{ paddingLeft: '0.5em', fontSize: '1.5em' }}> Äänestä!</p></Header>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column width={7} />\n          <Grid.Column width={9} textAlign=\"center\" verticalAlign=\"middle\">\n            <p className=\"circleQuestion\">{this.props.kayttaja.kysymykset.length + 1}</p>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <Item>\n              <Item.Content>\n                <Item.Header>\n                  <p style={{ fontSize: '2em' }}>{this.state.kysymys.kysymys}<br /></p>\n                  <Button onClick={this.show} size=\"mini\" basic>Lisätietoja...</Button>\n                </Item.Header>\n                <Item.Description style={visible}>\n                  <ul>\n                    <li>{this.state.kysymys.selitys}</li>\n                    <li>Äänestys vuosi: {this.state.kysymys.vuosi}</li>\n                    <li> <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.kysymys.url}>Eduskunnan sivuille</a></li>\n                  </ul>\n                </Item.Description>\n\n              </Item.Content>\n            </Item>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Button fluid onClick={() => this.vastaus('jaa')} size=\"big\" color=\"green\">Jaa</Button>\n        </Grid.Row>\n        <Grid.Row>\n          <Button fluid onClick={() => this.vastaus('eos')} size=\"big\" color=\"brown\">EOS/tyhjä</Button>\n        </Grid.Row>\n        <Grid.Row>\n          <Button fluid onClick={() => this.vastaus('ei')} size=\"big\" color=\"red\">Ei</Button>\n        </Grid.Row>\n        <Grid.Row>\n          <div style={{ fontSize: '1em' }}>\n            <h3>Kategoriat</h3>\n            <ul>\n              {this.state.kysymys.kategoriat.map(x => (\n                <li key={x._id}>{x.nimi}</li>\n          ))}\n            </ul>\n          </div>\n        </Grid.Row>\n      </Grid>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  kysymykset: state.kysymykset,\n  kayttaja: state.kayttaja,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addVastaus,\n    addKysymys,\n    notifyCreation,\n  },\n)(Machine);\n\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { Button, Checkbox } from 'semantic-ui-react'\nimport Machine from './Machine'\n\nclass Settings extends React.Component {\n    state = {\n      renderMachine: false,\n      hotQuestions: false,\n      categories: []\n    }\n\n\n    handleHotquestions = () => {\n      this.setState({\n        hotQuestions: !this.state.hotQuestions,\n      })\n    }\n\n    renderMachine = () => {\n      this.setState({\n        renderMachine: true,\n      })\n    }\n\n    handleCategories = (categ) => {\n      if (this.state.categories.includes(categ)) {\n        this.setState({\n          categories: this.state.categories.filter(cat => cat !== categ)\n        })\n      } else {\n        const copy = this.state.categories\n        copy.push(categ)\n        this.setState({\n          categories: copy\n        })\n      }\n    }\n\n    render() {\n      if (this.state.renderMachine) {\n        return (\n          <Machine hots={this.state.hotQuestions} selected_categories={this.state.categories}/>\n        )\n      }\n      return (\n        <div>\n          <h1>Valitse sinua kiinnostavat aihealueet</h1>\n          <p>Voit myös valita vaalikauden\n            polttavat kysymykset.\n          </p>\n          <Checkbox\n            style={{ padding: '1em', marginBottom: '1em' }}\n            toggle\n            label=\"Polttavat puheenaiheet\"\n            checked={this.state.hotQuestions}\n            onChange={() => this.handleHotquestions()}\n          />\n          {!this.state.hotQuestions &&\n          <div style={{padding: \"2em\", margin: \"2em\", borderColor: \"#004d99\", borderStyle: \"solid\"}}>\n            <h3>Kategoriat</h3>\n            {this.props.kategoriat.map(kateg => \n              <Checkbox\n                key={kateg.id}\n                label={{ children: kateg.nimi }} \n                style={{padding: \"0.8em\"}}\n                checked={this.state.categories.includes(kateg.nimi)}\n                onChange={() => this.handleCategories(kateg.nimi)} />\n              )}\n          </div>\n          }\n          <br />\n          <Button size=\"big\" inverted color=\"blue\" onClick={() => this.renderMachine()}>Vaalikausikoneeseen</Button>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => ({\n  kategoriat: state.kategoriat,\n});\n\nexport default connect(mapStateToProps)(Settings);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { slide as Burger } from 'react-burger-menu'\nimport { Button, Icon } from 'semantic-ui-react';\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n    };\n  }\n    logout = () => {\n      window.localStorage.removeItem('loggedUser');\n      window.location.assign('/')\n    }\n\n    show = (event) => {\n      event.preventDefault();\n      this.setState({\n        show: !this.state.show,\n      });\n    }\n\n    render() {\n      const white = { color: 'white', paddingTop: '1em' }\n      return (\n        <div style={{ fontSize: '2em' }}>\n          <Icon\n            onClick={this.show}\n            style={{\n                  margin: '1em',\n                }}\n            name=\"bars\"\n          />\n          {this.state.show &&\n          <Burger right width=\"15%\" isOpen >\n            <br />\n            <Icon\n              onClick={this.show}\n              style={{\n                  color: 'white',\n                  paddingTop: '1em',\n                  paddingBottom: '1em',\n                }}\n              name=\"arrow circle right outline\"\n            />\n            <br />\n            <Link style={white} to=\"/\"> Etusivu</Link>\n            <Link style={white} to=\"/kone\">Vaalikone</Link>\n            <Link style={white} to=\"/kysymykset\">Kysymykset</Link>\n            <Link style={white} to=\"/vastaukset\">Vastaukset</Link>\n            <Link style={white} to=\"/kategoriat\">Kategoriat</Link>\n            {window.localStorage.getItem('loggedUser') &&\n            <Link style={white} to=\"/lisaa\">Uusi kysymys</Link>\n          }\n            {window.localStorage.getItem('loggedUser') &&\n            <div style={{ paddingTop: '2em' }}>\n              <Button onClick={() => this.logout()} size=\"tiny\" type=\"submit\"> Kirjaudu ulos</Button>\n            </div>}\n          </Burger>\n        }\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport {Radar} from 'react-chartjs-2';\nimport { Checkbox} from 'semantic-ui-react';\n\n\nclass NolansMap extends React.Component {\n  state = {\n    questions: this.props.questions,\n    valuesCount: 0,\n    greenCount: 0,\n    economicsCount: 0,\n    maxDataValue: 0,\n    dataSets: [],\n    partiesData: [\n      {\n        data: [null, null, null, null, null], \n        label: \"Keskustan eduskuntaryhmä\",\n        borderColor: \"rgb(51, 153, 51)\",\n        backgroundColor: \"rgb(51, 153, 51, 0.1)\"\n      },\n      {\n        data: [null, null, null, null, null], \n        label: \"Kansallisen kokoomuksen eduskuntaryhmä\",\n        borderColor: \"rgb(51, 153, 255)\",\n        backgroundColor: \"rgb(51, 153, 255, 0.1)\"\n      },\n      {\n        data: [null, null, null, null, null], \n        label: \"Sosialidemokraattinen eduskuntaryhmä\",\n        borderColor: \"rgb(153, 0, 0)\",\n        backgroundColor: \"rgb(153, 0, 0, 0.1)\"\n      },\n      {\n        data: [null, null, null, null, null], \n        label: \"Sininen eduskuntaryhmä\",\n        borderColor: \"rgb(102, 255, 204)\",\n        backgroundColor: \"rgb(102, 255, 204, 0.1)\"\n      },\n      {\n        data: [null, null, null, null, null], \n        label: \"Perussuomalaisten eduskuntaryhmä\",\n        borderColor: \"rgb(0, 0, 153)\",\n        backgroundColor: \"rgb(0, 0, 153, 0.1)\"\n      },\n      {\n        data: [null, null, null, null, null], \n        label: \"Vihreä eduskuntaryhmä\",\n        borderColor: \"rgb(153, 255, 102)\",\n        backgroundColor: \"rgb(153, 255, 102, 0.1)\"\n      },\n      {\n        data: [null, null, null, null, null], \n        label: \"Ruotsalainen eduskuntaryhmä\",\n        borderColor: \"rgb(255, 255, 0)\",\n        backgroundColor: \"rgb(255, 255, 0, 0.1)\"\n      },\n      {\n        data: [null, null, null, null, null], \n        label: \"Vasemmistoliiton eduskuntaryhmä\",\n        borderColor: \"rgb(204, 102, 153)\",\n        backgroundColor: \"rgb(204, 102, 153, 0.1)\"\n      },\n      {\n        data: [null, null, null, null, null], \n        label: \"Kristillisdemokraattinen eduskuntaryhmä\",\n        borderColor: \"rgb(255, 153, 51)\",\n        backgroundColor: \"rgb(255, 153, 51, 0.1)\"\n      },\n      {\n        data: [null, null, null, null, null], \n        label: \"Liike Nyt -eduskuntaryhmä\",\n        borderColor: \"rgb(204, 0, 255)\",\n        backgroundColor: \"rgb(204, 0, 255, 0.1)\"\n      },\n      {\n        data: [null, null, null, null, null], \n        label: \"Tähtiliikkeen eduskuntaryhmä\"\n      }\n    ],\n    selectedParties: [],\n    allParties: true\n  }\n\n  dataToRadar = () => {\n    this.setState({\n      selectedParties: this.state.partiesData.map(set => set.label)\n    })\n    const questions = this.props.questions\n    const valueQuestions = questions.filter(q => q.hasOwnProperty('jaaLiberal'))\n    const economicQuestions = questions.filter(q => q.hasOwnProperty('jaaLeftist'))\n    const greenQuestions = questions.filter(q => q.hasOwnProperty('green'))\n\n    valueQuestions.forEach(q => this.setValuesToDataset(q, \"values\"))\n    economicQuestions.forEach(q => this.setValuesToDataset(q, \"economics\"))\n    greenQuestions.forEach(q => this.setValuesToDataset(q, \"green\"))\n  }\n\n  setValuesToDataset = (question, label) => {\n    if (question.jaaLiberal) {\n      question.puolueet.forEach( party => this.setValuesToDataHelper(party, true, label))\n    } else {\n      question.puolueet.forEach( party => this.setValuesToDataHelper(party, false, label))\n    }\n  }\n\n  setValuesToDataHelper = (party, jaa, label) => {\n    var index = \"\"\n    if (label === \"values\") {\n      index = jaa ? 3 : 0\n    } else if (label=== \"economics\") {\n      index = jaa ? 4 : 1\n    } else if (label === \"green\") {\n      index = 2\n    }\n    console.log('index', index);\n    \n    if (party.kanta === 'jaa'){\n       // liberal\n       this.setDataToPartyHelper(party, index)\n    } else if (index != 2) {\n      // conservative\n      this.setDataToPartyHelper(party, index)\n    }\n  }\n\n  setDataToPartyHelper = (party, index) => {\n    var partiesDataCopy = this.state.partiesData\n    console.log('datalabel', party.nimi);\n    const orginalValue = partiesDataCopy.find(data => data.label.replace(/\\s/g, '') === party.nimi.replace(/\\s/g, '')).data[index]\n    console.log('orginal', orginalValue);\n    \n    partiesDataCopy.find(data => data.label.replace(/\\s/g, '') === party.nimi.replace(/\\s/g, '')).data[index] = orginalValue + 1\n    console.log('datasets', partiesDataCopy.find(data => data.label.replace(/\\s/g, '') === party.nimi.replace(/\\s/g, '')).data);\n    \n    this.setState({\n      partiesData: partiesDataCopy\n    })\n  }\n\n  allParties = (e) => {\n    const selectedParties = this.state.allParties ? [] : this.state.partiesData.map(set => set.label)\n    this.setState({\n      allParties: !this.state.allParties,\n      selectedParties\n    })\n  }\n\n  handleParties = (party) => {\n    if (this.state.selectedParties.includes(party)) {\n      this.setState({\n        selectedParties: this.state.selectedParties.filter(parti => parti !== party)\n      })\n    } else {\n      const copy = this.state.selectedParties\n      copy.push(party)\n      this.setState({\n        categories: copy\n      })\n    }\n  }\n\n  render() {\n    if (this.props.questions != this.state.questions) {\n      this.setState({\n        questions: this.props.questions\n      })\n      this.dataToRadar()\n    }\n    const allParties = this.state.partiesData.map(set => set.label)\n\n    return (\n      <div>\n        <h1 style={{textAlign: \"center\"}}>Puolueiden kannat arvokartalla</h1>\n        {this.state.questions &&\n          <div style={{paddingTop: \"2em\", textAlign: \"center\"}}>\n            <b style={{margin: \"5em\", padding: \"0.3em\"}}> Huomaa, että hallituspuolueiden kanta on hyvin yhtenevä ja oppositionkin usein.</b>\n            <div style={{textAlign: \"center\", marginTop:\"1em\"}}>\n          <Checkbox\n              label={{ children: \"Kaikki/Tyhjennä\" }} \n              style={{padding: \"0.8em\"}}\n              checked={this.state.allParties}\n              onChange={() => this.allParties()} />\n              <hr />\n          {allParties.map(party => \n            <Checkbox\n              key={party}\n              label={{ children: party }} \n              style={{padding: \"0.8em\"}}\n              checked={this.state.selectedParties.includes(party)}\n              onChange={() => this.handleParties(party)} />\n            )}\n         <hr />\n        </div>\n            <div> \n              <Radar \n                options = {{\n                  layout: {\n                    padding: 0.5,\n                  },\n                  legend: {\n                    labels: {\n                        // This more specific font property overrides the global property\n                        fontSize: 14\n                    }\n                  },\n                  \n                }}\n                data = {{\n                  labels: ['Konservatiivisuus', 'Oikeistolaisuus',  'Vihreys', 'Liberaalius', 'Vasemmistolaisuus'],\n                  datasets: this.state.partiesData.filter(party => this.state.selectedParties.includes(party.label)),\n                }}\n              />\n            </div>\n            </div>\n        }\n    \n        <div style={{margin: \"5em\", padding: \"2em\", marginRight: \"8em\", borderColor: \"#004d99\", borderStyle: \"solid\"}}>\n          <h3>Mitä graaffi kuvaa?</h3>\n          <p style={{fontSize: \"1.2em\"}}>\n            Kartalla oikeisto ja vasemmisto ulottuvuudet kuvaavat talouspolitiikkaa niin, \n            että vasemmistolaisuus tarkoittaa valtionohjauksen suosimisto ja oikeistolaisuus \n            vapaan talouselämän suosimista. Konservatiivisuus taas viittaa halukkuuteen\n            ohjata sellaisia arvovalintoja, joissa ei ole kyse puhtaasti taloudellisista\n            arvoista kun taas liberaali on näiden arvojen suhteen ns. suvaitsevampi.\n            Vihreys sen sijaan kertoo ympäristöystävällisyydestä oli kyse sitten rajoituksista\n            tai tuista. \n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  questions: state.kysymykset,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(NolansMap);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Table, Button } from 'semantic-ui-react';\nimport kysymysService from './../../services/kysymys';\n\nconst linkStyle = {\n  color: 'black',\n  fontSize: 14,\n  fontWeight: 'normal',\n};\n\nclass Questions extends React.Component {\n    remove =k => () => {\n      const ok = window.confirm(`Poistetaanko ${k.kysymys} kysymys`);\n\n      if (!ok) {\n        return;\n      }\n      try {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser');\n        kysymysService.setToken(JSON.parse(loggedUserJSON).token);\n        kysymysService.remove(k.id);\n      } catch (error) {\n        console.log('jotain meni vikaan');\n      }\n    }\n\n    render() {\n      return (\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell positive>Kysymys</Table.HeaderCell>\n              {window.localStorage.getItem('loggedUser') &&\n              <Table.HeaderCell>Poisto</Table.HeaderCell>}\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {this.props.kysymykset.map(k =>\n                  (\n                    <Table.Row key={k.id}>\n                      <Table.Cell selectable><Link style={linkStyle} to={`/kysymykset/${k.id}`}>{k.kysymys}</Link></Table.Cell>\n                      <Table.Cell>{window.localStorage.getItem('loggedUser') === null ?\n                null : <form onSubmit={this.remove(k)}><Button inverted color=\"red\" type=\"submit\">Delete</Button></form>}\n                      </Table.Cell>\n                    </Table.Row>))}\n          </Table.Body>\n        </Table>\n      );\n    }\n}\nconst mapStateToProps = state => ({\n  kysymykset: state.kysymykset,\n});\nexport default connect(\n  mapStateToProps,\n  null,\n)(Questions);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Table, Header, Button } from 'semantic-ui-react'\n\n\nclass Vastaukset extends React.Component {\n  state={\n    tiedot: false,\n  }\n    componentDidMount = () => {\n    }\n\n    nayta = () => {\n      this.setState({\n        tiedot: !this.state.tiedot,\n      })\n    }\n    render() {\n      if (this.props.edustaja) {\n        const edustaja = this.props.edustaja\n        const kysymykset = Object.keys(edustaja)\n        const tiedot = kysymykset.slice(0, 36)\n        const sliced = kysymykset.slice(37, 99)\n        return (\n          <Container style={{ background: '#fff3e6' }}>\n            <Header>{edustaja.etunimi}{' '}{edustaja.sukunimi}</Header>\n            <b>Vastaukset ylen vaalikoneeseen</b>\n            <br />\n            <br />\n            <b>Vaalilupaukset</b>\n            <p style={{ background: '#ffce99' }}>Vaalilupaus 1: {edustaja['Vaalilupaus 1']}</p>\n            <p style={{ background: '#ffce99' }}>Vaalilupaus 2: {edustaja['Vaalilupaus 2']}</p>\n            <p style={{ background: '#ffce99' }}>Vaalilupaus 3: {edustaja['Vaalilupaus 3']}</p>\n            <Button onClick={this.nayta} inverted color=\"blue\"> {!this.state.tiedot ?\n              <p>Näytä edustajan</p> : <p>Piilota </p>}\n          taustatiedot\n            </Button>\n            {this.state.tiedot &&\n            <Table striped>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell style={{ background: 'DeepSkyBlue' }}>Kohta</Table.HeaderCell>\n                  <Table.HeaderCell>Vastaus</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {tiedot.map(x =>\n              (\n                <Table.Row key={x}>\n                  <Table.Cell>{x}</Table.Cell>\n                  <Table.Cell>{edustaja[x]}</Table.Cell>\n                </Table.Row>\n                ))}\n              </Table.Body>\n              <Button onClick={this.nayta} inverted color=\"blue\">Piilota taustatiedot\n              </Button>\n            </Table>\n          }\n            <Table striped celled>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell style={{ background: '#ffa64d' }}>Kysymys</Table.HeaderCell>\n                  <Table.HeaderCell style={{ background: '#ffa64d' }}>Vastaus</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {sliced.map(x =>\n              (\n                <Table.Row key={x}>\n                  <Table.Cell>{x}</Table.Cell>\n                  <Table.Cell>{edustaja[x]}</Table.Cell>\n                </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </Container>\n        )\n      } return null\n    }\n}\n\nconst mapStateToProps = state => ({\n  edustaja: state.edustaja,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Vastaukset);\n\n","\n\nconst edustajaReducer = (store = null, action) => {\n  if (action.type === 'ADD') {\n    return action.data\n  }\n  return store\n}\n\nexport const addEdustaja = data => async (dispatch) => {\n  dispatch({\n    type: 'ADD',\n    data,\n  })\n}\n\nexport default edustajaReducer\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Button, Input, Dropdown } from 'semantic-ui-react'\nimport Vastaukset from './Answers';\nimport YleKannat from '../yleParties/YleKannat';\nimport { puolueet as valuesP } from './ylesQuestionsCategories';\nimport { addEdustaja } from '../../reducers/edustajaReducer';\nimport { notifyCreation } from '../../reducers/notifyReducer'\nimport { getYlenKysymykset } from '../../reducers/ylenKysymyksetReducer';\n\nclass EtsiVastaus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      etunimi: '',\n      sukunimi: '',\n      kysymys: '',\n      puolue: '',\n      kannat: false,\n    };\n  }\n\n  componentWillMount = async () => {\n    if (!this.props.ylenKysymykset.kysymykset) { window.location.assign('/') }\n  }\n\n    etsi = () => {\n      /*eslint-disable */\n      \n      try {\n      const edustaja = this.props.ylenKysymykset.edustajat.find(x => x.sukunimi.toLowerCase().replace(/\\s/g, '') === this.state.sukunimi.toLowerCase().replace(/\\s/g, ''))\n      /* eslint-enable */\n        if (edustaja.etunimi.toLowerCase().replace(/\\s/g, '') === this.state.etunimi.toLowerCase().replace(/\\s/g, '')) {\n          this.props.addEdustaja(edustaja)\n        }\n      } catch (err) {\n        this.props.notifyCreation('Henkilöä ei löydy. Syötitkö sekä etu- että sukunimen?', 5)\n      }\n    }\n\n    muodosta = () => {\n      const puolueet = this.props.ylenKysymykset.puolueet\n      if (this.state.puolue && this.state.kysymys) {\n        const kannat = puolueet[this.state.puolue].map(x => (\n          {\n            edustaja: `${x.etunimi} ${x.sukunimi}`,\n            kanta: x[this.state.kysymys],\n          }))\n        this.setState({\n          kannat,\n        })\n      } else {\n        this.props.notifyCreation('Tietoja ei löydy. Syötitkö sekä puolueen- että kysymyksen?', 5)\n      }\n    }\n\n    handleChange(e, { name, value }) {\n      // If you are using babel, you can use ES 6 dictionary syntax\n      // let change = { [e.target.name] = e.target.value }\n      if (name && value) {\n        this.setState({ [name]: value })\n      } else {\n        const change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n      }\n    }\n\n    piilotaKannat = () => {\n      this.setState({\n        kannat: false,\n      })\n    }\n\n    // tietokantaan = async () => {\n    //   const yle = {\n    //     edustajat: this.props.ylenKysymykset.edustajat,\n    //     puolueet: this.props.ylenKysymykset.puolueet,\n    //     kysymykset: this.props.ylenKysymykset.kysymykset,\n    //   };\n    //   console.log('yle', yle)\n    //   try {\n    //     await yleService.addYle(yle);\n    //   } catch (exception) {\n    //     console.log('Tapahtui virhe');\n    //   }\n    // }\n\n    render() {\n      if (this.props.ylenKysymykset) {\n      /*eslint-disable */\n      const values = this.props.ylenKysymykset.kysymykset.map(x => x = { text: x, value: x })\n       /* eslint-enable */\n        return (\n          <Container>\n            <div style={{ background: 'AliceBlue' }}>\n              <h1>Mitä Kysyttiin?</h1>\n              <p>\n           Täältä löydät puolueiden vastaukset yksittäisiin kysymyksiin\n              </p>\n              <Dropdown type=\"text\" name=\"puolue\" placeholder=\"Valitse puolue\" onChange={this.handleChange.bind(this)} fluid search selection options={valuesP} />\n              <Dropdown type=\"text\" name=\"kysymys\" placeholder=\"Valitse kysymys\" onChange={this.handleChange.bind(this)} fluid search selection options={values} />\n              <br />\n              <p><Button positive onClick={this.muodosta}>Tarkastele vastauksia</Button></p>\n              { this.state.kannat &&\n              <div>\n                <Button onClick={this.piilotaKannat}>Piilota {this.state.puolue} kannat</Button>\n                <YleKannat puolue={this.state.puolue} kysymys={this.state.kysymys} show />\n              </div>\n            }\n            </div>\n            <br />\n            <div style={{ background: 'AliceBlue' }}>\n              <h1>Mitä tuli luvattua?</h1>\n              <p>\n          Täältä voit etsiä yksittäisten kansanedustajien/ehdokkaiden vastauksia ylen vaalikoneeseen\n              </p>\n              <Input type=\"text\" onChange={this.handleChange.bind(this)} className=\"form-control\" placeholder=\"Juha\" name=\"etunimi\" label=\"Etunimi\" />\n              <Input type=\"text\" onChange={this.handleChange.bind(this)} className=\"form-control\" placeholder=\"Sipilä\" name=\"sukunimi\" label=\"Sukunimi\" />\n              <br />\n              <p><Button positive color=\"black\" onClick={this.etsi}>Tarkastele vastauksia</Button></p>\n              <br />\n              <Vastaukset />\n            </div>\n          </Container>\n        )\n      }\n      return null\n    }\n}\n\n\nconst mapStateToProps = state => ({\n  edustaja: state.edustaja,\n  kysymykset: state.kysymykset,\n  ylenKysymykset: state.ylenKysymykset,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addEdustaja,\n    notifyCreation,\n    getYlenKysymykset,\n  },\n)(EtsiVastaus);\n","import axios from 'axios'\n\nconst baseUrl = '/api/kategoriat'\n\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst addKategoria = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default {\n  getAll,\n  setToken,\n  addKategoria,\n  remove,\n}\n","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport kategoriaService from './../../services/kategoria';\n\nconst vastausKategoriat = {\n  sosiaalipolitiikka: ['147|Kansalaisten oikeus terveyspalveluihin on tärkeämpää kuin kuntien itsehallinto.', '146|Vanhuksen ja hänen omaistensa vastuuta hoitokustannuksista on lisättävä.', '145|Viranomaisten pitää puuttua lapsiperheiden ongelmiin nykyistä herkemmin.', '144|Terveys- ja sosiaalipalvelut on tuotettava ensijaisesti julkisina palveluina.', '143|Parantumattomasti sairaalla on oltava oikeus avustettuun kuolemaan.', '127|Suomessa on liian helppo elää sosiaaliturvan varassa', '129|Suomessa on siirryttävä perustuloon joka korvaisi nykyisen sosiaaliturvan vähimmäistason.', '135|Lapsilisiä on korotettava ja laitettava verolle.', '136|Suomella ei ole varaa nykyisen laajuisiin sosiaali- ja terveyspalveluihin.'],\n  kaupansaantely: ['247|Mietojen viinien ja vahvojen oluiden myynti ruokakaupassa sallitaan.', '244|Hyväksytään periaatepäätös uuden ydinvoimalaitosyksikön rakentamisesta.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.', '144|Terveys- ja sosiaalipalvelut on tuotettava ensijaisesti julkisina palveluina.', '128|Kaupan ja muiden liikkeiden aukioloajat on vapautettava.'],\n  tyoehdot: ['130|Työntekijälle on turvattava lailla minimityöaika.', '131|Ansiosidonnaisen työttömyysturvan kestoa pitää lyhentää.'],\n  eu: ['150|Suomen pitää ottaa suurempi vastuu EU:n alueelle tulevista turvapaikanhakijoista.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.'],\n  talouspolitiikka: ['245|Tuloveroa alennetaan tasaisesti kaikissa tuloluokissa talouden elvyttämiseksi.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.', '146|Vanhuksen ja hänen omaistensa vastuuta hoitokustannuksista on lisättävä.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.', '134|Valtion ja kuntien taloutta on tasapainotettava ensisijaisesti leikkaamalla menoja.', '136|Suomella ei ole varaa nykyisen laajuisiin sosiaali- ja terveyspalveluihin.'],\n  verotus: ['133|Ruoan verotusta on varaa kiristää.', '135|Lapsilisiä on korotettava ja laitettava verolle.'],\n  turvallisuus: ['149|Geenimuunneltu ruoka on turvallista ihmiselle ja ympäristölle.', '142|Suomen on osallistuttava Isisin vastaiseen taisteluun kouluttamalla Irakin hallituksen joukkoja.', '137|Nato-jäsenyys vahvistaisi Suomen turvallisuuspoliittista asemaa.', '138|Suomeen tarvitaan enemmän poliiseja.', '139|Maahanmuuttoa Suomeen on rajoitettava terrorismin uhan vuoksi.', '141|Verkkovalvonnassa valtion turvallisuus on tärkeämpää kuin kansalaisten yksityisyyden suoja.'],\n  maahanmuutto: ['150|Suomen pitää ottaa suurempi vastuu EU:n alueelle tulevista turvapaikanhakijoista.', '139|Maahanmuuttoa Suomeen on rajoitettava terrorismin uhan vuoksi.'],\n  ulkopolitiikka: ['142|Suomen on osallistuttava Isisin vastaiseen taisteluun kouluttamalla Irakin hallituksen joukkoja.', '140|Venäjän etupiiripolitiikka on uhka Suomelle.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.', '137|Nato-jäsenyys vahvistaisi Suomen turvallisuuspoliittista asemaa.'],\n  yksityisyys: ['246|Edellisen eduskunnan hyväksymä lainmuutos samaa sukupuolta olevien avioliiton sallimisesta peruutetaan.', '141|Verkkovalvonnassa valtion turvallisuus on tärkeämpää kuin kansalaisten yksityisyyden suoja.'],\n  ymparisto: ['244|Hyväksytään periaatepäätös uuden ydinvoimalaitosyksikön rakentamisesta.', '149|Geenimuunneltu ruoka on turvallista ihmiselle ja ympäristölle.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.'],\n  hallinto: ['201|Suomen Nato-jäsenyydestä on järjestettävä kansanäänestys.', '147|Kansalaisten oikeus terveyspalveluihin on tärkeämpää kuin kuntien itsehallinto.', '151|On aika luopua ajatuksesta, että koko Suomi on pidettävä asuttuna.'],\n  koulutus: ['152|Peruskoulun opetusryhmien koko on rajattava lailla esimerkiksi 20 oppilaaseen.'],\n}\n\nclass UusiKategoria extends React.Component {\n    onSubmit = async (e) => {\n      e.preventDefault();\n      const kategoria = {\n        nimi: e.target.kategoria.value,\n      };\n      e.target.kategoria.value = '';\n      const katet = Object.keys(vastausKategoriat)\n      const vastaus = katet.find(x => x === kategoria.nimi.toLowerCase())\n      if (vastaus) {\n        const vastaukset = vastausKategoriat[vastaus]\n        kategoria.vastaukset = vastaukset\n      }\n      try {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser');\n        kategoriaService.setToken(JSON.parse(loggedUserJSON).token);\n        await kategoriaService.addKategoria(kategoria);\n        window.location.assign('/kategoriat');\n      } catch (exception) {\n        console.log('Tapahtui virhe');\n      }\n    }\n\n    render() {\n      return (\n        <Form onSubmit={this.onSubmit}>\n          <Form.Input\n            label=\"Lisättävä kategoria\"\n            placeholder=\"Kategoria\"\n            name=\"kategoria\"\n          />\n          <Button inverted color=\"green\" type=\"submit\">Tallenna</Button>\n\n        </Form>\n\n      );\n    }\n}\n\nexport default UusiKategoria;\n","import kategoriatService from '../services/kategoria'\n\nconst kategoriatReducer = (store = [], action) => {\n  if (action.type === 'GET_GATEGORIES') {\n    return action.data\n  } if (action.type === 'ADD_GATEGORIES') {\n    return store.concat(action.data)\n  }\n  return store\n}\n\nexport const getKategoriat = () => async (dispatch) => {\n  const all = await kategoriatService.getAll()\n  dispatch({\n    type: 'GET_GATEGORIES',\n    data: all,\n  })\n}\n\nexport const addKategoriat = kategoria => async (dispatch) => {\n  const one = await kategoriatService.addKategoria(kategoria);\n  dispatch({\n    type: 'ADD_GATEGORIES',\n    data: one,\n  })\n}\n\nexport default kategoriatReducer\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Table, Button } from 'semantic-ui-react';\nimport kategoriaService from './../../services/kategoria';\nimport UusiKategoria from './UusiKategoria';\nimport { getKategoriat } from './../../reducers/kategoriatReducer';\n\nconst linkStyle = {\n  color: 'black',\n  fontSize: 14,\n  fontWeight: 'normal',\n};\n\nclass Kategoriat extends React.Component {\n    componentDidMount = async () => {\n      this.props.getKategoriat();\n    }\n\n    remove =k => () => {\n      const ok = window.confirm(`Poistetaanko ${k.nimi} kysymys`);\n\n      if (!ok) {\n        return;\n      }\n      try {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser');\n        kategoriaService.setToken(JSON.parse(loggedUserJSON).token);\n        kategoriaService.remove(k.id);\n      } catch (error) {\n        console.log('jotain meni vikaan');\n      }\n    }\n\n\n    render() {\n      return (\n        <div>\n          {window.localStorage.getItem('loggedUser') &&\n          <UusiKategoria />\n        }\n          <Table celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell positive>Kategoriat</Table.HeaderCell>\n                {window.localStorage.getItem('loggedUser') === null ?\n                  <Table.HeaderCell /> : <Table.HeaderCell>Poisto</Table.HeaderCell>}\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {this.props.kategoriat.map(k =>\n                  (\n                    <Table.Row key={k.id}>\n                      <Table.Cell selectable><Link style={linkStyle} to={`/kategoriat/${k.id}`}>{k.nimi}</Link></Table.Cell>\n                      <Table.Cell>{window.localStorage.getItem('loggedUser') &&\n                      <form onSubmit={this.remove(k)}><Button inverted color=\"red\" type=\"submit\">Delete</Button></form>}\n                      </Table.Cell>\n                    </Table.Row>))\n                }\n            </Table.Body>\n          </Table>\n        </div>\n      );\n    }\n}\nconst mapStateToProps = state => ({\n  kategoriat: state.kategoriat,\n});\nexport default connect(\n  mapStateToProps,\n  { getKategoriat },\n)(Kategoriat);\n\n","import React from 'react';\nimport { Item, Button, Divider } from 'semantic-ui-react'\n\nclass YleKategoriat extends React.Component {\n    state={\n      yle: false,\n    }\n    nayta = () => {\n      this.setState({\n        yle: !this.state.yle,\n      })\n    }\n    render() {\n      if (this.props.vastaukset) {\n        return (\n          <div>\n            <Button size=\"mini\" inverted color=\"blue\" onClick={this.nayta}>\n              <p>{!this.state.yle ?\n                <b>Näytä </b> : <b>Piilota </b>\n                  } kategoriaan linkitetyt ylen vaalikoneen kysymykset\n              </p>\n            </Button>\n            {this.state.yle &&\n            <div>\n              {this.props.vastaukset.vastaukset.map(k =>\n                (\n                  <Item style={{ background: 'AliceBlue' }}key={k}>{k}<Divider /></Item>))}\n              <Button basic onClick={this.nayta}>\n                Piilota kategoriaan linkitetyt ylen koneen kysymykset\n              </Button>\n            </div>\n                }\n          </div>\n        )\n      }\n      return (\n        null\n      )\n    }\n}\n\nexport default YleKategoriat\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Item } from 'semantic-ui-react'\nimport YleKategoriat from './YleKategoriat';\n\n\nclass Kategoria extends React.Component {\n  componentDidMount = () => {\n  }\n  render() {\n    if (this.props.kategoria) {\n      return (\n        <div className=\"container\">\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Item.Header><h1>{this.props.kategoria.nimi}</h1></Item.Header>\n                <br />\n                <YleKategoriat vastaukset={this.props.kategoria} />\n              </Item.Content>\n            </Item>\n            {this.props.kategoria.kysymykset.map(k =>\n        (\n          <Item.Group key={k} divided unstackable>\n            <Link to={`/kysymykset/${this.props.kysymykset.find(x => x.id === k).id}`}>\n              {this.props.kysymykset.find(x => x.id === k).kysymys}\n            </Link>\n          </Item.Group>))}\n          </Item.Group>\n        </div>\n      )\n    }\n    return (\n      null\n    )\n  }\n}\n\n\nexport default Kategoria\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Item, Container, List, Button, Grid, Checkbox, TextArea, Divider, Table } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport kysymysService from './../../services/kysymys'\n\nclass Kysymys extends React.Component {\n  state = {\n    kategoriat: false,\n    muokkaa: false,\n    muokattava: null,\n    show: false,\n    puolueet: false,\n    edustajat: false,\n    hot: false,\n    asettelu: false,\n    booleans: false,\n    jaaLeftist: '',\n    jaaLiberal: '',\n    green: \"\"\n  }\n\n  componentWillMount = () => {\n    if (this.props.kysymys) {\n      this.setState({\n        hot: this.props.kysymys.hot,\n        asettelu: this.props.kysymys.kysymyksenAsettelu,\n      })\n    }\n  }\n\n  onSubmit = async (e) => {\n    const kysymys = this.props.kysymys\n    if (this.state.muokattava === 'kysymys') {\n      kysymys.kysymys = e.target.muutos.value\n    } if (this.state.muokattava === 'selitys') {\n      kysymys.selitys = e.target.muutos.value\n    } if (this.state.muokattava === 'url') {\n      kysymys.url = e.target.muutos.value\n    } if (typeof this.state.jaaLeftist === 'boolean') {\n      kysymys.jaaLeftist = this.state.jaaLeftist\n    } if (typeof this.state.jaaLiberal === 'boolean') {\n      kysymys.jaaLiberal = this.state.jaaLiberal\n    } if (typeof this.state.green === 'boolean') {\n      kysymys.green = this.state.green\n    }\n    kysymys.hot = this.state.hot\n    kysymys.kysymyksenAsettelu = this.state.asettelu\n\n    console.log(kysymys)\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    kysymysService.setToken(JSON.parse(loggedUserJSON).token)\n    await kysymysService.modifyKysymys(kysymys.id, kysymys)\n    this.setState({\n      kategoriat: false,\n      muokkaa: false,\n      muokattava: null,\n    })\n  }\n  onKategoriat = async () => {\n    const kategoriat = []\n    this.props.kategoriat.map(k => (document.getElementById(k.nimi).checked\n      ? kategoriat.push(k) : null))\n\n    const kysymys = this.props.kysymys\n    kysymys.kategoriat = kategoriat.map(x => x.id)\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    kysymysService.setToken(JSON.parse(loggedUserJSON).token)\n    await kysymysService.modifyKysymys(kysymys.id, kysymys)\n  }\n\n  kategoriat = () => {\n    this.setState({\n      kategoriat: true,\n      muokkaa: false,\n    })\n  }\n\n  muokkaa = (x) => {\n    this.setState({\n      muokkaa: true,\n      kategoriat: false,\n      muokattava: x,\n      booleans: false,\n    })\n  }\n\n  show = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  }\n\n  showBooleans = () => {\n    this.setState({\n      booleans: !this.state.booleans,\n      muokkaa: false,\n    });\n  }\n\n  puolueet = () => {\n    this.setState({\n      puolueet: !this.state.puolueet,\n    });\n  }\n  edustajat = () => {\n    this.setState({\n      edustajat: !this.state.edustajat,\n    });\n  }\n\n  handleHot = () => {\n    this.setState({\n      hot: !this.state.hot,\n    });\n  }\n\n  handleAsettelu = () => {\n    this.setState({\n      asettelu: !this.state.asettelu,\n    });\n  }\n\n  handleJaaLiberal = (value) => {\n    this.setState({\n      jaaLiberal: value,\n    });\n  }\n\n  handleJaaLeftist = (value) => {\n    this.setState({\n      jaaLeftist: value,\n    });\n  }\n\n  handleGreen = (value) => {\n    this.setState({\n      green: value,\n    });\n  }\n\n\n  render() {\n    console.log('state', this.state)\n    if (this.props.kysymys) {\n      return (\n        <Container>\n          <Grid>\n\n            {window.localStorage.getItem('loggedUser') &&\n            <div>\n              <Grid.Row>\n                <Grid.Column width={4} />\n                <Grid.Column width={12}>\n                  <Button.Group inverted color=\"blue\">\n                    <Button onClick={() => this.muokkaa('kysymys')}>Kysymys</Button>\n                    <Button.Or />\n                    <Button onClick={() => this.muokkaa('selitys')}>Selitys</Button>\n                    <Button.Or />\n                    <Button onClick={this.kategoriat}>Kategoriat</Button>\n                    <Button.Or />\n                    <Button onClick={() => this.muokkaa('url')}>Linkki</Button>\n                    <Button.Or />\n                    <Button onClick={() => this.showBooleans()}>\n                      Tärkeys,ristiriita, vihreys, Vas-Oik ja Kons-Lib\n                    </Button>\n                  </Button.Group>\n                </Grid.Column>\n              </Grid.Row>\n              {this.state.booleans &&\n              <div>\n                <br />\n                <Checkbox\n                  toggle\n                  onChange={() => this.handleHot()}\n                  defaultChecked={this.state.hot}\n                  label=\"Keskeinen kysymys tällä hallituskaudella\"\n                />\n                <br />\n                <Checkbox\n                  defaultChecked={this.state.asettelu}\n                  toggle\n                  onChange={() => this.handleAsettelu()}\n                  label=\"Kysymyksen asettelu ristiriitainen ylen kysymykseen nähden\"\n                />\n                <br />\n                <Checkbox\n                  radio\n                  name=\"liberalRadioGroup\"\n                  checked={this.state.jaaLiberal === true}\n                  label=\"Jaa vastaus liberaali\"\n                  onChange={() => this.handleJaaLiberal(true)}\n                />\n                <Checkbox\n                  radio\n                  name=\"liberalRadioGroup\"\n                  checked={this.state.jaaLiberal === false}\n                  label=\"Jaa vastaus konservatiivinen\"\n                  onChange={() => this.handleJaaLiberal(false)}\n                />\n                <br />\n                <Checkbox\n                  radio\n                  checked={this.state.jaaLeftist === true}\n                  label=\"Jaa vastaus vasemmistolainen\"\n                  onChange={() => this.handleJaaLeftist(true)}\n                />\n                <Checkbox\n                  radio\n                  checked={this.state.jaaLeftist === false}\n                  label=\"Jaa vastaus oikeistolainen\"\n                  onChange={() => this.handleJaaLeftist(false)}\n                />\n                 <br />\n                <Checkbox\n                  radio\n                  checked={this.state.green === true}\n                  label=\"Jaa vastaus vihreä\"\n                  onChange={() => this.handleGreen(true)}\n                />\n                <Checkbox\n                  radio\n                  checked={this.state.green === false}\n                  label=\"Ei vastaus vihreä\"\n                  onChange={() => this.handleGreen(false)}\n                />\n                <br />\n                <br />\n                <form onSubmit={this.onSubmit}>\n                  <Button type=\"submit\" color=\"green\">Muokkaa tärkeys ja asettelu</Button>\n                </form>\n              </div>\n              }\n              {this.state.kategoriat &&\n              <Grid.Row>\n                <form onSubmit={this.onKategoriat}>\n                  {this.props.kategoriat.map(k =>\n                  (<Checkbox\n                    key={k.nimi}\n                    label={k.nimi}\n                    name=\"kategoriat\"\n                    id={k.nimi}\n                  />))}\n                  <br />\n                  <Button type=\"submit\" color=\"green\">Muokkaa</Button>\n                </form>\n              </Grid.Row>}\n              {this.state.muokkaa &&\n              <form onSubmit={this.onSubmit}>\n                <Grid.Row>\n                  <TextArea name=\"muutos\" />\n                </Grid.Row>\n                <Button type=\"submit\" color=\"green\">Muokkaa {this.state.muokattava}</Button>\n              </form>}\n            </div>}\n            <Grid.Row>\n              <Grid.Column width={12}>\n                <Item.Group divided>\n                  <Divider>Kysymys</Divider>\n                  <Item>\n                    <Item.Content>\n                      <Item.Header>{this.props.kysymys.kysymys} </Item.Header>\n                      <Item.Description>\n                        <Button size=\"mini\" basic onClick={this.show}>Lisätietoja</Button>\n                        {this.state.show && <div>{this.props.kysymys.selitys}<br /></div>}\n                      </Item.Description>\n                      <br />\n                      <b>Kysymykseen linkitetty ylen vaalikoneen kysymys</b>\n                      <br />\n                      <br />\n                      <p>{this.props.kysymys.vastaus}</p>\n                      <List>\n                        <b>Kategoriat</b>\n                        <List.List>\n                          {this.props.kysymys.kategoriat.map(x =>\n                            (\n                              <List.Item as=\"li\" key={x._id}><Link to={`/kategoriat/${x._id}`}>{x.nimi}</Link>\n                              </List.Item>))}\n                        </List.List>\n                      </List>\n                      <List>\n                        <b>Puolueiden ja edustajien kannat</b>\n                        <br />\n                        <Button size=\"mini\" basic onClick={this.puolueet}>{this.state.puolueet ? 'Piilota' : 'Näytä'}</Button>\n                        {this.state.puolueet &&\n                        <Table>\n                          <Table.Body>\n                            {this.props.kysymys.puolueet.map(x =>\n                            (\n                              <Table.Row key={x.nimi}>\n                                <Table.Cell>{x.nimi}</Table.Cell>\n                                <Table.Cell>{x.kanta}</Table.Cell>\n                              </Table.Row>))}\n                          </Table.Body>\n                          <Table.Body>\n                            <Table.Row>\n                              <Table.Cell>\n                                <Button size=\"mini\" basic onClick={this.edustajat}>Edustajien kannat</Button>\n                              </Table.Cell>\n                            </Table.Row>\n                          </Table.Body>\n                          {this.state.edustajat &&\n                          <Table.Body>\n                            {this.props.kysymys.edustajat.map(x =>\n                            (\n                              <Table.Row key={x.nimi}>\n                                <Table.Cell>{x.nimi}</Table.Cell>\n                                <Table.Cell>{x.kanta}</Table.Cell>\n                              </Table.Row>))}\n                            <Table.Row>\n                              <Table.Cell>\n                                <Button size=\"mini\" basic onClick={this.edustajat}>Piilota edustajien kannat</Button>\n                              </Table.Cell>\n                            </Table.Row>\n                          </Table.Body>\n                          }\n\n                        </Table>\n                        }\n                      </List>\n                      <Item.Extra>\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.kysymys.url}>Linkki eduskunnan sivuille</a>\n                      </Item.Extra>\n                    </Item.Content>\n                  </Item>\n                </Item.Group>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Grid.Row />\n\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row />\n          </Grid>\n        </Container>\n      )\n    }\n    return (\n      <div />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  kategoriat: state.kategoriat,\n  kayttaja: state.kayttaja,\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n  },\n)(Kysymys)\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","\nconst userReducer = (store = '', action) => {\n  if (action.type === 'USER') {\n    return action.user\n  }\n  return store\n}\n\nexport const userLogin = content => async (dispatch) => {\n  dispatch({\n    type: 'USER',\n    user: content,\n  })\n}\n\nexport default userReducer\n","\nimport React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport loginService from '../services/login'\nimport { userLogin } from '../reducers/userReducer'\nimport kysymysService from '../services/kysymys'\n\n\nclass Login extends React.Component {\n    login = async (e) => {\n      e.preventDefault()\n      try {\n        const user = await loginService.login({\n          username: e.target.username.value,\n          password: e.target.password.value,\n        })\n        window.localStorage.setItem('loggedUser', JSON.stringify(user))\n        this.props.userLogin(user.username)\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\n        kysymysService.setToken(JSON.parse(loggedUserJSON).token)\n      } catch (exception) {\n        console.log('virhe')\n      }\n    }\n\n\n    render() {\n      return (\n        <div>\n          <h2>Kirjaudu</h2>\n\n          <form onSubmit={this.login}>\n            <div>\n        Käyttäjätunnus\n              <Form.Input\n                name=\"username\"\n              />\n            </div>\n            <div>\n        Salasana\n              <Form.Input\n                type=\"password\"\n                name=\"password\"\n              />\n            </div>\n            <br />\n            <Button inverted color=\"green\" type=\"submit\">Kirjaudu</Button>\n          </form>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n})\n\n\nexport default connect(\n  mapStateToProps,\n  { userLogin },\n)(Login)\n","import kysymysService from '../services/kysymys'\n\nconst kysymyksetReducer = (store = [], action) => {\n  if (action.type === 'GET_ALL') {\n    return action.data\n  }\n  return store\n}\n\nexport const getKysymykset = () => async (dispatch) => {\n  const all = await kysymysService.getAll()\n  dispatch({\n    type: 'GET_ALL',\n    data: all,\n  })\n}\n\nexport default kysymyksetReducer\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport HtmlForm from './components/form/HtmlForm';\nimport Home from './components/Home';\nimport Settings from './components/Settings';\nimport Menu from './components/Menu';\nimport NolansMap from './components/nolansMap/NolansMap';\nimport Questions from './components/questions/Questions';\nimport EtsiVastaus from './components/yle/FindAnswer'\nimport Kategoriat from './components/kategoriat/Kategoriat';\nimport Kategoria from './components/kategoriat/Kategoria';\nimport Question from './components/questions/Question';\nimport Login from './components/Login';\nimport Notification from './components/Notification';\nimport { getKysymykset } from './reducers/kysymyksetReducer';\nimport { getKategoriat } from './reducers/kategoriatReducer';\nimport { getYlenKysymykset } from './reducers/ylenKysymyksetReducer';\n\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n    };\n  }\n\n  componentWillMount = async () => {\n    this.props.getKysymykset();\n    this.props.getKategoriat();\n    this.props.getYlenKysymykset()\n  }\n\n  kysymysById = id => (\n    this.props.kysymykset.find(k => k.id === id)\n  )\n\n  kategoriaById = id => (\n    this.props.kategoriat.find(k => k.id === id)\n  )\n\n  render() {\n    return (\n      <Router>\n        <Grid>\n          <Grid.Row\n            fixed=\"true\"\n            style={{\n            paddingBottom: '0rem',\n            background: 'white',\n            }}\n          >\n            <Grid.Column width={1} />\n            <Grid.Column width={3} style={{ paddingRight: '0rem' }}>\n              <div style={{ padding: '1em', paddingTop: '1.2em', fontSize: '1.5em' }}>\n                Politiikkatieto\n                <p style={{\n                  borderRadius: '50%',\n                  width: '1.1em',\n                  height: '0.1em',\n                  background: '#4679BD',\n                  padding: '0.4em',\n                  marginLeft: '6em',\n                }}\n                />\n              </div>\n            </Grid.Column>\n            <Grid.Column width={9}>\n              <Notification />\n            </Grid.Column>\n            <Grid.Column width={3}>\n              <Menu isOpen={this.state.show} />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row style={{ padding: '0rem' }}>\n            <Grid.Column style={{ background: '#004d99', padding: '2em' }}>\n              <h1 style={{\n                fontSize: '4em',\n                color: 'white',\n                textAlign: 'center',\n                verticalAlign: 'bottom',\n            }}\n              >Vaalikausikone\n              </h1>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row >\n            <Grid.Column width={3} />\n            <Grid.Column width={10}>\n              <div\n                id=\"routet\"\n                style={{\n                    padding: '3em',\n                    boxShadow: '1px 1px #888888',\n                    background: 'white',\n                    margin: '-2em',\n                  }}\n              >\n                <Route exact path=\"/\" render={() => <Home />} />\n                <Route exact path=\"/kategoriat\" render={history => <Kategoriat history={history} />} />\n                <Route exact path=\"/kysymykset\" render={() => <Questions />} />\n                <Route exact path=\"/kone\" render={() => <Settings />} />\n                <Route exact path=\"/vastaukset\" render={() => <EtsiVastaus />} />\n                <Route exact path=\"/graaffit\" render={() => <NolansMap />} />\n                <Route exact path=\"/login\" render={({ history }) => <Login history={history} />} />\n                {window.localStorage.getItem('loggedUser') &&\n                <div>\n                  <Route path=\"/lisaa\" render={({ history }) => <HtmlForm history={history} />} />\n                </div>\n                    }\n                <Route\n                  exact\n                  path=\"/kysymykset/:id\"\n                  render={({ match }) =>\n                    <Question kysymys={this.kysymysById(match.params.id)} />}\n                />\n                <Route\n                  exact\n                  path=\"/kategoriat/:id\"\n                  render={({ match }) =>\n                (<Kategoria\n                  kategoria={this.kategoriaById(match.params.id)}\n                  kysymykset={this.props.kysymykset}\n                />)\n              }\n                />\n\n\n              </div>\n\n            </Grid.Column>\n            <Grid.Column width={3} />\n          </Grid.Row>\n\n        </Grid>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  kysymykset: state.kysymykset,\n  kategoriat: state.kategoriat,\n  ylenKysymykset: state.ylenKysymykset,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getKysymykset,\n    getKategoriat,\n    getYlenKysymykset,\n  },\n)(App);\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport htmlReducer from './reducers/htmlReducer';\nimport kysymysReducer from './reducers/kysymysReducer';\nimport kysymyksetReducer from './reducers/kysymyksetReducer';\nimport notifyReducer from './reducers/notifyReducer';\nimport userReducer from './reducers/userReducer';\nimport kayttajaReducer from './reducers/kayttajaReducer';\nimport kategoriatReducer from './reducers/kategoriatReducer';\nimport edustajaReducer from './reducers/edustajaReducer'\nimport ylenKysymyksetReducer from './reducers/ylenKysymyksetReducer'\n\nconst reducer = combineReducers({\n  html: htmlReducer,\n  kysymys: kysymysReducer,\n  notify: notifyReducer,\n  kysymykset: kysymyksetReducer,\n  user: userReducer,\n  kayttaja: kayttajaReducer,\n  kategoriat: kategoriatReducer,\n  edustaja: edustajaReducer,\n  ylenKysymykset: ylenKysymyksetReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n)\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App store={store} />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n"],"sourceRoot":""}