{"version":3,"sources":["components/yle/vanhatvastaukset.csv","components/form/FormInput.js","components/form/TextArea.js","reducers/htmlReducer.js","reducers/kysymysReducer.js","reducers/notifyReducer.js","components/Notification.js","services/kysymys.js","services/yle.js","reducers/ylenKysymyksetReducer.js","components/form/HtmlForm.js","components/Home.js","reducers/kayttajaReducer.js","components/yle/ylesQuestionsCategories.js","components/yleParties/AnswersPopup.js","components/yleParties/OneResult.js","components/questions/MembersAnswers.js","components/AnswersTable.js","components/nolansMap/NolansMap.js","components/Machine.js","components/Settings.js","components/questions/Questions.js","components/yle/Answers.js","components/yleParties/YleKannat.js","reducers/edustajaReducer.js","components/yle/FindAnswer.js","services/kategoria.js","components/kategoriat/UusiKategoria.js","reducers/kategoriatReducer.js","components/kategoriat/Kategoriat.js","components/kategoriat/YleKategoriat.js","components/kategoriat/Kategoria.js","components/questions/Question.js","services/login.js","reducers/userReducer.js","components/Login.js","reducers/kysymyksetReducer.js","App.js","store.js","index.js"],"names":["module","exports","__webpack_require__","p","FormInput","_ref","placeholder","name","label","checkExist","react_default","a","createElement","className","dist_es","Input","type","onChange","TextArea","rows","cols","form","intialState","puolueet","edustajat","htmlReducer","store","arguments","length","undefined","action","Object","objectSpread","html","initialState","kysymys","selitys","url","kategoriat","vuosi","vastaus","tunniste","kysymysReducer","details","hot","kysymyksenAsettelu","jaaLiberal","jaaLeftist","jaaGreen","notifyCreation","content","time","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","notify","setTimeout","stop","this","_x","apply","notifyReducer","Notification","componentDidMount","props","divStyle","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","React","Component","ConnectedNotification","connect","baseUrl","token","services_kysymys","getAll","response","axios","get","sent","abrupt","data","setToken","newToken","concat","addKysymys","_ref2","_callee2","newObject","config","_context2","console","log","headers","Authorization","post","remove","_ref3","_callee3","id","_context3","delete","_x2","addKategoria","_ref4","_callee4","_context4","_x3","modifyKysymys","_ref5","_callee5","_context5","put","_x4","_x5","yle","kysymykset","getYlenKysymykset","all","yleService","ylenKysymyksetReducer","HtmlForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentWillMount","ylenKysymykset","window","location","assign","onSubmit","e","loggedUserJSON","handleDetails","handleHtml","handlePuolueet","handleEdustajat","addKatet","includes","localStorage","getItem","kysymysService","JSON","parse","t0","doc","DOMParser","parseFromString","getElementsByTagName","_loop","i","puolue","nimi","cells","innerHTML","jaa","Number","replace","ei","tyhjia","kanta","keys","reduce","b","poissa","yhteensa","filter","push","addPuolueet","_loop2","edustaja","addEdustajat","preventDefault","target","htmlEdustajat","value","htmlPuolueet","state","green","addDetails","map","k","document","getElementById","checked","idt","addKategoriat","handleJaaLiberal","setState","handleJaaLeftist","handleGreen","disClick","field","defineProperty","validateTunniste","toLowerCase","trim","exist","_this2","values","x","text","form_TextArea","form_FormInput","compact","toggle","handleHot","radio","key","handleChange","bind","fluid","search","selection","options","handleRistiriita","components_Notification","positive","Home","activeIndex","handleClick","titleProps","index","newIndex","Link","to","paddingTop","paddingBottom","Title","active","onClick","Content","marginLeft","aanet","kayttajaReducer","filtered","old","parseParties","party","AnswersPopup","activePage","totalPages","Math","round","answers","open","handleInputChange","handlePaginationChange","opinion","close","sliceIndex","onOpen","onClose","size","trigger","primary","icon","Header","question","slice","onPageChange","firstItem","lastItem","prevItem","nextItem","celled","striped","Row","HeaderCell","Body","Cell","OneResult","eit","jaat","kannat","red","etunimi","sukunimi","toString","Actions","yleParties_AnswersPopup","Members","panes","out","split","sliced","chunkArray","forEach","menuItem","render","Pane","y","parseName","myArray","chunk","arrayLength","tempArray","myChunk","AnswersTable","monta","kayttaja","show","order","_","orderBy","parseOpinion","capitalize","string","charAt","toUpperCase","paddingLeft","src","alt","height","width","dimmer","inverted","Description","marginTop","find","user","MembersAnswers","yleParties_OneResult","addPuolue","NolansMap","questions","valuesCount","greenCount","economicsCount","maxDataValue","dataSets","selectParties","partiesData","borderColor","backgroundColor","selectedParties","allParties","dataToRadar","valueQuestions","q","hasOwnProperty","economicQuestions","greenQuestions","setValuesToDataset","user_party","setValuesToDataHelper","setDataToPartyHelper","partiesDataCopy","orginalValue","set","handleParties","parti","copy","categories","textAlign","children","react_chartjs_2_es","layout","legend","labels","datasets","Machine","satunnainenKysymys","filterQuestions","shuffle","monesko","handledQuestions","selected_categories","hots","some","cat","array","temporaryValue","randomIndex","currentIndex","floor","random","naytaKysymys","tulokset","jaaPuolueet","addVastaus","components_AnswersTable","nolansMap_NolansMap","basic","margin","as","_id","extra","rel","href","Settings","renderMachine","hotQuestions","handleHotquestions","handleCategories","categ","src_components_Machine","kateg","linkStyle","fontWeight","Questions","confirm","error","selectable","Vastaukset","tiedot","nayta","YleKannat","edustajaReducer","EtsiVastaus","etsi","addEdustaja","err","muodosta","piilotaKannat","change","valuesP","yleParties_YleKannat","Answers","services_kategoria","vastausKategoriat","sosiaalipolitiikka","kaupansaantely","tyoehdot","eu","talouspolitiikka","verotus","turvallisuus","maahanmuutto","ulkopolitiikka","yksityisyys","ymparisto","hallinto","koulutus","UusiKategoria","kategoria","katet","vastaukset","kategoriaService","getKategoriat","kategoriatService","kategoriatReducer","Kategoriat","kategoriat_UusiKategoria","YleKategoriat","Kategoria","Group","kategoriat_YleKategoriat","divided","unstackable","Kysymys","muokkaa","muokattava","asettelu","booleans","muutos","yleQuestion","onKategoriat","showBooleans","handleAsettelu","showYle","handleYle","yles","Column","Or","d","defaultChecked","List","Item","Extra","services_login","login","credentials","userReducer","Login","loginService","username","password","setItem","stringify","userLogin","kysymyksetReducer","App","getKysymykset","kysymysById","kategoriaById","logout","removeItem","desktop","innerWidth","history","white","BrowserRouter","minHeight","boxShadow","display","right","position","top","paddingRight","transition","animation","duration","border","NavLink","exact","activeStyle","ref","verticalAlign","marginRight","Route","path","components_Home","kategoriat_Kategoriat","questions_Questions","components_Settings","FindAnswer","components_Login","form_HtmlForm","match","Question","params","kategoriat_Kategoria","reducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","es","src_App_0"],"mappings":"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","file":"static/js/main.51ad5ba3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vanhatvastaukset.fe80cae8.csv\";","\nimport React from 'react';\nimport { Form } from 'semantic-ui-react'\n\nconst FormInput = ({ placeholder, name, label, checkExist }) => (\n  <div className=\"form-group\">\n    <b>{label}</b>\n    <Form.Input type=\"text\" className=\"form-control\" placeholder={placeholder} name={name} onChange={checkExist}/>\n  </div>\n)\n\nexport default FormInput\n","import React from 'react';\nimport { Form } from 'semantic-ui-react'\n\nconst TextArea = ({ placeholder, name, label }) => (\n  <div>\n    <b>{label}</b>\n    <Form.TextArea\n      type=\"text\"\n      className=\"form-control\"\n      placeholder={placeholder}\n      rows=\"10\"\n      cols=\"20\"\n      name={name}\n      form=\"htmlform\"\n    />\n  </div>\n)\n\nexport default TextArea\n","const intialState = {\n  puolueet: '',\n  edustajat: '',\n}\n\nconst htmlReducer = (store = intialState, action) => {\n  if (action.type === 'HTML_PUOLUEET') {\n    return { ...store, puolueet: action.html }\n  } if (action.type === 'HTML_EDUSTAJAT') {\n    return { ...store, edustajat: action.html }\n  }\n\n\n  return store\n}\n\nexport const htmlPuolueet = html => async (dispatch) => {\n  dispatch({\n    type: 'HTML_PUOLUEET',\n    html,\n  })\n}\n\nexport const htmlEdustajat = html => async (dispatch) => {\n  dispatch({\n    type: 'HTML_EDUSTAJAT',\n    html,\n  })\n}\n\nexport default htmlReducer;\n","const initialState = {\n  kysymys: '',\n  selitys: '',\n  url: '',\n  puolueet: [],\n  edustajat: [],\n  kategoriat: [],\n  vuosi: '',\n  vastaus: '',\n  tunniste: ''\n}\n\nconst kysymysReducer = (store = initialState, action) => {\n  if (action.type === 'ADD_PUOLUE') {\n    return { ...store, puolueet: action.puolueet }\n  } if (action.type === 'ADD_DETAILS') {\n    return {\n      ...store,\n      kysymys: action.details.kysymys,\n      selitys: action.details.selitys,\n      url: action.details.url,\n      vuosi: action.details.vuosi,\n      vastaus: action.details.vastaus,\n      hot: action.details.hot,\n      kysymyksenAsettelu: action.details.kysymyksenAsettelu,\n      jaaLiberal: action.details.jaaLiberal,\n      jaaLeftist: action.details.jaaLeftist,\n      jaaGreen: action.details.jaaGreen,\n      tunniste: action.details.tunniste\n    }\n  } if (action.type === 'ADD_EDUSTAJAT') {\n    return { ...store, edustajat: action.edustajat }\n  } if (action.type === 'ADD_KATEGORIAT') {\n    return { ...store, kategoriat: action.kategoriat }\n  }\n  return store\n}\n\nexport const addPuolueet = puolueet => async (dispatch) => {\n  dispatch({\n    type: 'ADD_PUOLUE',\n    puolueet,\n  })\n}\n\nexport const addEdustajat = edustajat => async (dispatch) => {\n  dispatch({\n    type: 'ADD_EDUSTAJAT',\n    edustajat,\n  })\n}\n\nexport const addDetails = details => async (dispatch) => {\n  dispatch({\n    type: 'ADD_DETAILS',\n    details,\n  })\n}\n\nexport const addKategoriat = kategoriat => async (dispatch) => {\n  dispatch({\n    type: 'ADD_KATEGORIAT',\n    kategoriat,\n  })\n}\n\n\nexport default kysymysReducer;\n\n","const notifyReducer = (store = '', action) => {\n    if (action.type==='SHOW') {\n      return action.notify\n    }\n    return store\n  }\n  \n  export const notifyCreation = (content, time) => {\n    return async (dispatch) => {\n      dispatch({\n        type: 'SHOW',\n        notify: content\n      })\n      setTimeout(() => dispatch({\n        type: 'SHOW',\n        notify: ''\n      }), time * 1000)\n    }\n  }\n  \n  export default notifyReducer","import React from 'react'\nimport { connect } from 'react-redux'\n\nclass Notification extends React.Component {\n  componentDidMount = () => {\n  }\n  render() {\n    if (this.props.notify === '') {\n      return null\n    }\n    const divStyle = {\n      color: 'green',\n      background: 'lightgrey',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10,\n    }\n    if (this.props.notify === 'Tapahtui virhe') {\n      divStyle.color = 'red'\n    }\n    return (\n      <div style={divStyle}>\n        <p>{this.props.notify}</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = store => ({\n  notify: store.notify,\n})\n\nconst ConnectedNotification = connect(mapStateToProps)(Notification)\n\n\nexport default ConnectedNotification\n","import axios from 'axios'\n\nconst baseUrl = '/api/kysymykset'\n\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst addKysymys = async (newObject) => {\n  console.log(newObject)\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\n\nconst addKategoria = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post('/api/kategoriat', newObject, config)\n  return response.data\n}\n\nconst modifyKysymys = async (id, newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.put(`${baseUrl}/${id}`, newObject, config)\n  return response.data\n}\n\n\nexport default {\n  getAll,\n  setToken,\n  addKysymys,\n  remove,\n  addKategoria,\n  modifyKysymys,\n}\n","import axios from 'axios'\n\nconst baseUrl = '/api/yle'\n\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\n// const addYle = async (newObject) => {\n//   const response = await axios.post(baseUrl, newObject)\n//   return response.data\n// }\n\nexport default {\n  getAll,\n}\n","import yleService from '../services/yle'\nimport Papa from 'papaparse'\nimport csv from '../components/yle/vanhatvastaukset.csv'\n\nconst initialState = {\n  edustajat: [],\n  puolueet: [],\n  kysymykset: [],\n}\n\nconst ylenKysymyksetReducer = (store = initialState, action) => {\n  if (action.type === 'DATA') {\n    return {\n      ...store,\n      edustajat: action.data.edustajat,\n      puolueet: action.data.puolueet,\n      kysymykset: action.data.kysymykset,\n    }\n  }\n  return store\n}\n\n\n\nexport const getYlenKysymykset = () => async (dispatch) => {\n  const all = await yleService.getAll()\n  dispatch({\n    type: 'DATA',\n    data: all[0],\n  })\n}\n\nexport const getYlenKysymyksetFromCSV = (nimet) => async (dispatch) => {\n  console.log('moi', Papa)\n  console.log('csv', csv)\n  await Papa.parse(csv, {\n    header: true,\n    download: true,\n    complete(results) {\n      addYlePuolueet(nimet, results.data);\n    },\n  })\n}\n\n  const addYlePuolueet = async (nimet, ylendata) => {\n  const edustajat = []\n  for (let i = 0; i < nimet.length; i = i + 1) {\n    const apu = nimet[i].split('/')\n    let puolue = apu[1]\n    switch (puolue) {\n      case 'kesk':\n        puolue = 'Keskustan eduskuntaryhmä'\n        break\n      case 'ps':\n        puolue = 'Perussuomalaisten eduskuntaryhmä'\n        break\n      case 'kok':\n        puolue = 'Kansallisen kokoomuksen eduskuntaryhmä'\n        break\n      case 'sd':\n        puolue = 'Sosialidemokraattinen eduskuntaryhmä'\n        break\n      case 'vihr':\n        puolue = 'Vihreä eduskuntaryhmä'\n        break\n      case 'vas':\n        puolue = 'Vasemmistoliiton eduskuntaryhmä'\n        break\n      case 'r':\n        puolue = 'Ruotsalainen eduskuntaryhmä'\n        break\n      case 'kd':\n        puolue = 'Kristillisdemokraattinen eduskuntaryhmä'\n        break\n      default:\n        break\n    }\n    const nimi = apu[0].toLowerCase()\n    const data = {\n      nimi,\n      puolue,\n    }\n\n    edustajat.push(data)\n  }\n  const kesk = []\n  const kok = []\n  const sdp = []\n  const vihr = []\n  const vas = []\n  const rkp = []\n  const kd = []\n  const ps = []\n\n  const ulos = []\n  for (let i = 0; i < ylendata.length; i = i + 1) {\n    let copy = []\n    // ylen datassa oli kaksi samaa nimeä ja ideetä\n    if (ylendata[i].puolue !== 'Piraattipuolue') {\n      copy = ylendata[i]\n    }\n    if (copy.sukunimi && copy.etunimi) {\n      const nimi = copy.sukunimi.replace(/\\s/g, '') + copy.etunimi.replace(/\\s/g, '')\n      const edustaja = edustajat.find(x => x.nimi === nimi.toLowerCase())\n      if (edustaja) {\n        copy.puolue = edustaja.puolue\n        switch (copy.puolue) {\n          case 'Keskustan eduskuntaryhmä':\n            kesk.push(copy)\n            break\n          case 'Perussuomalaisten eduskuntaryhmä':\n            ps.push(copy)\n            break\n          case 'Kansallisen kokoomuksen eduskuntaryhmä':\n            kok.push(copy)\n            break\n          case 'Sosialidemokraattinen eduskuntaryhmä':\n            sdp.push(copy)\n            break\n          case 'Vihreä eduskuntaryhmä':\n            vihr.push(copy)\n            break\n          case 'Vasemmistoliiton eduskuntaryhmä':\n            vas.push(copy)\n            break\n          case 'Ruotsalainen eduskuntaryhmä':\n            rkp.push(copy)\n            break\n          case 'Kristillisdemokraattinen eduskuntaryhmä':\n            kd.push(copy)\n            break\n          default:\n            break\n        }\n        ulos.push(copy)\n      }\n    }\n  }\n  const puolueet = {\n    kesk,\n    kok,\n    sdp,\n    vihr,\n    vas,\n    rkp,\n    kd,\n    ps,\n  }\n\n  const kysymykset = Object.keys(ulos[0])\n  const sliced = kysymykset.slice(37, 99)\n  const filtered = sliced.filter(x => !x.includes('kommentti'))\n\n\n  const out = {\n    edustajat: ulos,\n    puolueet,\n    kysymykset: filtered,\n  }\n  console.log('ou', out);\n   try {\n        await yleService.addYle(out);\n      } catch (exception) {\n        console.log('Tapahtui virhe');\n      }\n}\n\nexport default ylenKysymyksetReducer\n","import React from 'react';\nimport { Button, Checkbox, Dropdown, Segment, Form } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport FormInput from './FormInput'\nimport TextArea from './TextArea'\nimport { htmlEdustajat, htmlPuolueet } from '../../reducers/htmlReducer'\nimport { addPuolueet, addDetails, addEdustajat, addKategoriat } from '../../reducers/kysymysReducer'\nimport { notifyCreation } from '../../reducers/notifyReducer'\nimport Notification from '../Notification'\nimport kysymysService from './../../services/kysymys'\nimport { getYlenKysymykset } from '../../reducers/ylenKysymyksetReducer';\n\nclass HtmlForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      vastaus: '',\n      kysymyksenAsettelu: false,\n      hot: false,\n      jaaLeftist: '',\n      jaaLiberal: '',\n      green: \"\"\n    };\n  }\n  componentWillMount = async () => {\n    if (!this.props.ylenKysymykset.kysymykset) { window.location.assign('/') }\n  }\n\n  onSubmit = async (e) => {\n    this.handleDetails(e)\n    await this.handleHtml(e)\n    this.handlePuolueet()\n    this.handleEdustajat()\n    this.addKatet(e)\n    \n    if (!this.props.notify.includes('ei ole validi')) {\n      try {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\n        kysymysService.setToken(JSON.parse(loggedUserJSON).token)\n        await kysymysService.addKysymys(this.props.kysymys)\n        // this.props.history.push('/')\n      } catch (exception) {\n        this.props.notifyCreation('Tapahtui virhe', 5)\n      }\n    }\n  }\n\n  handlePuolueet = () => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(this.props.html.puolueet, 'text/html');\n    const puolueet = []\n    if (this.props.html.puolueet !== '' && doc.getElementsByTagName('TBODY')[0]) {\n      // eslint-disable-next-line\n      const rows = doc.getElementsByTagName('TBODY')[0].rows;\n      for (let i = 1; i < rows.length; i = i + 1) {\n        const puolue = {\n          nimi: rows[i].cells[0].innerHTML,\n          jaa: Number(rows[i].cells[1].innerHTML.replace(/\\s/g, '')),\n          ei: Number(rows[i].cells[2].innerHTML.replace(/\\s/g, '')),\n          tyhjia: Number(rows[i].cells[3].innerHTML.replace(/\\s/g, '')),\n        };\n        puolue.kanta = Object.keys(puolue).reduce((a, b) => (puolue[a] > puolue[b] ? a : b));\n        puolue.poissa = Number(rows[i].cells[4].innerHTML.replace(/\\s/g, ''))\n        puolue.yhteensa = Number(rows[i].cells[5].innerHTML.replace(/\\s/g, ''));\n        if (puolueet.filter(p => p.nimi === puolue.nimi).length === 0) {\n          puolueet.push(puolue)\n        }\n      }\n    } else {\n      this.props.notifyCreation('Puolue html-elementti ei ole validi', 5)\n    }\n    if (puolueet.length > 5 && puolueet.length < 20) {\n      this.props.notifyCreation('Kannat lisätty', 5)\n      this.props.addPuolueet(puolueet)\n    } else {\n      this.props.notifyCreation('Puolue html-elementti ei ole validi', 5)\n    }\n  }\n\n  handleEdustajat = () => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(this.props.html.edustajat, 'text/html');\n    const edustajat = []\n    if (this.props.html.edustajat !== '' && doc.getElementsByTagName('TBODY')[0]) {\n      // eslint-disable-next-line\n      const rows = doc.getElementsByTagName('TBODY')[0].rows \n      for (let i = 1; i < rows.length; i = i + 1) {\n        const edustaja = {\n          nimi: rows[i].cells[0].innerHTML.replace(/\\s/g, ''),\n          kanta: rows[i].cells[1].innerHTML.replace(/\\s/g, ''),\n\n        };\n        if (edustajat.filter(p => p.nimi === edustaja.nimi).length === 0) {\n          edustajat.push(edustaja)\n        }\n      }\n    } else {\n      this.props.notifyCreation('Edustajat html-elementti ei ole validi', 5)\n    }\n    \n    if (edustajat.length > 180 && edustajat.length < 201) {\n      this.props.notifyCreation('Kannat lisätty', 5)\n      this.props.addEdustajat(edustajat)\n    } else {\n      this.props.notifyCreation('Edustajat html-elementti ei ole validi', 5)\n    }\n  }\n\n  handleHtml = (e) => {\n    e.preventDefault()\n    const edustajat = e.target.htmlEdustajat.value\n    this.props.htmlEdustajat(edustajat)\n    const puolueet = e.target.htmlPuolueet.value\n    this.props.htmlPuolueet(puolueet)\n    e.target.htmlPuolueet.value = ''\n    e.target.htmlEdustajat.value = ''\n  }\n\n  handleDetails = (e) => {\n    e.preventDefault()\n    const details = {\n      tunniste: e.target.tunniste.value,\n      url: e.target.url.value,\n      selitys: e.target.selitys.value,\n      kysymys: e.target.kysymys.value,\n      vuosi: e.target.vuosi.value,\n      vastaus: this.state.vastaus,\n      kysymyksenAsettelu: this.state.kysymyksenAsettelu,\n      hot: this.state.hot,\n    }\n    if (typeof this.state.jaaLeftist === 'boolean') {\n      details.jaaLeftist = this.state.jaaLeftist\n    } if (typeof this.state.jaaLiberal === 'boolean') {\n      details.jaaLiberal = this.state.jaaLiberal\n    } if (typeof this.state.green === 'boolean') {\n      details.green = this.state.green\n    }\n    this.props.addDetails(details)\n    e.target.url.value = ''\n    e.target.selitys.value = ''\n    e.target.kysymys.value = ''\n    e.target.vuosi.value = ''\n  }\n\n  addKatet = () => {\n    // eslint-disable-line no-use-before-define\n    const kategoriat = []\n    this.props.kategoriat.map(k => (document.getElementById(k.nimi).checked\n      ? kategoriat.push(k) : null))\n    const idt = kategoriat.map(k => k.id)\n    this.props.addKategoriat(idt)\n  }\n\n  handleChange(e, { name, value }) {\n    this.setState({ [name]: value })\n  }\n\n  handleRistiriita() {\n    this.setState({ kysymyksenAsettelu: !this.state.kysymyksenAsettelu })\n  }\n\n  handleHot() {\n    this.setState({ hot: !this.state.hot })\n  }\n\n  handleJaaLiberal = (value) => {\n    this.setState({\n      jaaLiberal: value,\n    });\n  }\n\n  handleJaaLeftist = (value) => {\n    this.setState({\n      jaaLeftist: value,\n    });\n  }\n\n  handleGreen = (value) => {\n    this.setState({\n      green: value,\n    });\n  }\n\n  disClick = (field) => {\n    this.setState({\n      [field]: \"\"\n    })\n  }\n\n  checkExist = (e) => {\n    if (e.target.value && this.props.kysymykset.filter(k => this.validateTunniste(k.tunniste)== e.target.value.toLowerCase().trim()).length > 0) {\n      this.setState({\n        exist: true\n      })\n    } else {\n      this.setState({\n        exist:false\n      })\n    }\n  }\n\n  validateTunniste = (tunniste) => {\n    if (tunniste) {\n      return tunniste.toLowerCase().trim()\n    } \n    return false\n  }\n\n  render() {\n    /*eslint-disable */\n   const values = this.props.ylenKysymykset.kysymykset.map(x => x = { text: x, value: x })\n   /* eslint-enable */\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.onSubmit} id=\"htmlform\">\n          <h2>Lisää kysymys</h2>\n          {this.state.exist &&\n          <b style={{color:\"red\"}}>Kysymys on jo kannassa</b>\n          }\n          <div className=\"form-group\">\n            <b>Tunniste (tämän avulla katsotaan, jos asia on jo kannassa)</b>\n            <Form.Input type=\"text\" className=\"form-control\" placeholder=\"HE 123/2001 vp\" name=\"tunniste\" onChange={e => this.checkExist(e)}/>\n          </div>\n          <TextArea label=\"Kirjoita alle äänestyksen kohteen oleva kysymys\" placeholder=\"kysymys\" name=\"kysymys\" />\n          <FormInput label=\"Tapahtuma vuosi\" placeholder=\"2018\" name=\"vuosi\" />\n          <FormInput label=\"Linkki edukunnan sivuille\" placeholder=\"url\" name=\"url\" />\n          <TextArea label=\"Tarkempi kuvaus kysymyksestä\" placeholder=\"selitys\" name=\"selitys\" />\n          <Segment compact style={{ background: '#d4eff9' }}>\n            <Checkbox toggle onChange={() => this.handleHot()} />\n            Keskeinen kysymys tällä hallituskaudella\n            <table>\n              <tr>\n                <td>\n                <Checkbox\n                  radio\n                  name=\"liberalRadioGroup\"\n                  checked={this.state.jaaLiberal === true}\n                  label=\"Jaa vastaus liberaali\"\n                  onChange={() => this.handleJaaLiberal(true)}\n                  />\n                  </td>\n                  <td>\n                  <Checkbox\n                    radio\n                    name=\"liberalRadioGroup\"\n                    checked={this.state.jaaLiberal === false}\n                    label=\"Jaa vastaus konservatiivinen\"\n                    onChange={() => this.handleJaaLiberal(false)}\n                  />\n                  </td>\n                  <td>\n                  <Checkbox\n                    radio\n                    name=\"liberalRadioGroup\"\n                    checked={this.state.jaaLiberal === \"\"}\n                    label=\"Ei sovi\"\n                    onChange={() => this.disClick(\"jaaLiberal\")}\n                  />\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.jaaLeftist === true}\n                      label=\"Jaa vastaus vasemmistolainen\"\n                      onChange={() => this.handleJaaLeftist(true)}\n                    />\n                    </td>\n                    <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.jaaLeftist === false}\n                      label=\"Jaa vastaus oikeistolainen\"\n                      onChange={() => this.handleJaaLeftist(false)}\n                    />\n                    </td>\n                    <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.jaaLeftist === \"\"}\n                      label=\"Ei sovi\"\n                      onChange={() => this.disClick(\"jaaLeftist\")}\n                    />\n                    </td>\n\n                </tr>\n                 <tr>\n\n                      <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.green === true}\n                      label=\"Jaa vastaus vihreä\"\n                      onChange={() => this.handleGreen(true)}\n                    />\n                    </td>\n                    <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.green === false}\n                      label=\"Ei vastaus vihreä\"\n                      onChange={() => this.handleGreen(false)}\n                    />\n                    </td>\n                    <td>\n                    <Checkbox\n                      radio\n                      checked={this.state.green === \"\"}\n                      label=\"Ei sovi\"\n                      onChange={() => this.disClick(\"green\")}\n                    />\n                    </td>\n                </tr>\n              </table>\n              \n          </Segment>\n          <b>Kategoriat</b>\n          <br />\n          {this.props.kategoriat.map(k =>\n            (<Checkbox\n              key={k.nimi}\n              label={k.nimi}\n              name=\"kategoriat\"\n              id={k.nimi}\n            />))}\n          <br />\n          <br />\n          <b>Valitse osuvin kysymys ylen vaalikoneesta</b>\n          <Dropdown type=\"text\" name=\"vastaus\" placeholder=\"Valitse kysymys\" onChange={this.handleChange.bind(this)} fluid search selection options={values} />\n          <Segment compact style={{ background: '#d4eff9' }}>\n            <Checkbox toggle onChange={() => this.handleRistiriita()} />\n            Ylen ja eduskunnan kysymyksenasettelu ristiriitainen\n          </Segment>\n          <Notification />\n          <TextArea\n            placeholder=\"<table><tbody>...</tbody></table>\"\n            name=\"htmlPuolueet\"\n            label=\"Kopio alle eduskunnan sivuilta html-muotoinen table-elementti, jossa tiedot äänestyksen tuloksista eduskuntaryhmittäin.\"\n          />\n          <br />\n          <TextArea\n            placeholder=\"<table><tbody>...</tbody></table>\"\n            name=\"htmlEdustajat\"\n            label=\"Kopio alle eduskunnan sivuilta html-muotoinen table-elementti, jossa tiedot äänestyksen tuloksista edustajittain.\"\n          />\n          <br />\n          {this.state.exist ? \n          <b style={{color:\"red\"}}>Kysymys on jo kannassa</b>\n          :\n          <p><Button positive type=\"submit\" className=\"fluid ui button\">create</Button></p>\n          }\n          <br />\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  html: state.html,\n  kysymys: state.kysymys,\n  kysymykset: state.kysymykset,\n  notify: state.notify,\n  kategoriat: state.kategoriat,\n  ylenKysymykset: state.ylenKysymykset,\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n    htmlEdustajat,\n    htmlPuolueet,\n    addPuolueet,\n    addEdustajat,\n    addDetails,\n    notifyCreation,\n    addKategoriat,\n    getYlenKysymykset,\n  },\n)(HtmlForm)\n","import React from 'react';\nimport { Accordion, Icon } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport '../App.css'\n\nclass Home extends React.Component {\n  state = {\n    activeIndex: \"\"\n  }\n\n  handleClick = (e, titleProps) => {\n    const { index } = titleProps\n    const { activeIndex } = this.state\n    const newIndex = activeIndex === index ? -1 : index\n\n    this.setState({ activeIndex: newIndex })\n  }\n\n  render() {\n    const { activeIndex } = this.state\n    return(\n    <div>\n      <h1>Tervetuloa</h1>\n      Vaalikausikoneella selvität mikä puolue on äänestänyt eduskunnassa lähimmäksi omia näkemyksiäsi.\n      <br/>\n      <br/>\n\n      Vaalikausikoneen kysymykset on valittu eduskunnan täysistunnon äänestyksistä. Vastauksesi rinnastuvat puolueiden todelliseen äänestyskäyttäytymiseen. Puolueiden antamat lupaukset eivät vaikuta vaalikoneen tuloksiin.\n      <br/>\n      <br/>\n\n      Vaalikausikoneessa voit myös verrata puolueiden äänestyskäyttäytymistä suhteessa edustajien Ylen vaalikoneessa antamiin vastauksiin. Voit siis arvioida, kuinka hyvin ennen vaaleja annetut lupaukset ovat pitäneet.\n      <br/>\n      <br/>\n\n        <Link\n          to=\"/kone\"\n        >\n          <button className=\"button\">Aloita</button>\n        </Link>\n        <Accordion style={{paddingTop: \"1em\", paddingBottom:\"1em\"}}>\n          <Accordion.Title active={activeIndex === 0} index={0} onClick={this.handleClick}>\n            <Icon name='dropdown' />\n            <b>Miksi puoleen valinta on tärkeitä?</b>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 0} style={{marginLeft: \"2em\"}}>\n            <p>\n              Ryhmäkuri\n            </p>\n          </Accordion.Content>\n\n          <Accordion.Title active={activeIndex === 1} index={1} onClick={this.handleClick}>\n            <Icon name='dropdown' />\n            <b>Kuinka poliittinen järjestelmä toimii?</b>\n          </Accordion.Title>\n          <Accordion.Content active={activeIndex === 1} style={{marginLeft: \"2em\"}}>\n            <p>\n              Hallitus/oppositio\n            </p>\n          </Accordion.Content>\n        </Accordion>\n    </div>\n    )\n  }\n}\n\nexport default Home\n","const initialState = {\n  kysymykset: [],\n  puolueet: [\n    { name: 'Sosialidemokraattinen eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/GSMua2B.png' },\n    { name: 'Keskustan eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/qbiX1tI.png' },\n    { name: 'Perussuomalaisten eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/4YZPeP9.jpg' },\n    { name: 'Kansallisen kokoomuksen eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/kSDY19E.jpg' },\n    { name: 'Ruotsalainen eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/hrCJsLx.png' },\n    { name: 'Vihreä eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/qOxMDMd.png' },\n    { name: 'Kristillisdemokraattinen eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/oVzcTTD.jpg' },\n    { name: 'Vasemmistoliiton eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/P0wEpt3.png' },\n    { name: 'Sininen eduskuntaryhmä', aanet: 0, url: 'https://i.imgur.com/gbryVO0.png' },\n    { name: 'Liike Nyt-eduskuntaryhmä', aanet: 0, url: 'https://liikenyt.fi/wp-content/uploads/2018/04/liike-nyt-vari-ensisijainen.jpg' },\n  ],\n  puolue: '',\n}\n\nconst kayttajaReducer = (store = initialState, action) => {\n  const puolue = store.puolueet.filter(p => p.name === action.type)\n  const filtered = store.puolueet.filter(p => p.name !== action.type)\n  if (puolue.length > 0) {\n    puolue[0].aanet = puolue[0].aanet + 1\n    filtered.push(puolue[0])\n  }\n\n  if (action.type === 'VASTAUS') {\n    const old = store.kysymykset.filter(k => k.id !== action.kysymys.id)\n    old.push(action.kysymys)\n    return { ...store, kysymykset: old }\n  }\n\n  if (action.type === 'PUOLUE') {\n    return { ...store, puolue: action.puolue }\n  }\n  switch (action.type) {\n    case 'Liike Nyt-eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Keskustan eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Perussuomalaisten eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Kansallisen kokoomuksen eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Sosialidemokraattinen eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Vihreä eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Vasemmistoliiton eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Sininen eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Ruotsalainen eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    case 'Kristillisdemokraattinen eduskuntaryhmä':\n      return { ...store, puolueet: filtered }\n    default:\n  }\n  return store\n}\n\nexport const addKysymys = content => async (dispatch) => {\n  dispatch({\n    type: 'VASTAUS',\n    kysymys: content,\n  })\n}\n\nexport const addPuolue = content => async (dispatch) => {\n  dispatch({\n    type: 'PUOLUE',\n    puolue: content,\n  })\n}\n\nexport const addVastaus = content => async (dispatch) => {\n  dispatch({\n    type: content,\n  })\n}\n\n\nexport default kayttajaReducer;\n","\nconst vastausKategoriat = {\n  sosiaalipolitiikka: ['147|Kansalaisten oikeus terveyspalveluihin on tärkeämpää kuin kuntien itsehallinto.', '146|Vanhuksen ja hänen omaistensa vastuuta hoitokustannuksista on lisättävä.', '145|Viranomaisten pitää puuttua lapsiperheiden ongelmiin nykyistä herkemmin.', '144|Terveys- ja sosiaalipalvelut on tuotettava ensijaisesti julkisina palveluina.', '143|Parantumattomasti sairaalla on oltava oikeus avustettuun kuolemaan.', '127|Suomessa on liian helppo elää sosiaaliturvan varassa', '129|Suomessa on siirryttävä perustuloon joka korvaisi nykyisen sosiaaliturvan vähimmäistason.', '135|Lapsilisiä on korotettava ja laitettava verolle.', '136|Suomella ei ole varaa nykyisen laajuisiin sosiaali- ja terveyspalveluihin.'],\n  kaupansaantely: ['247|Mietojen viinien ja vahvojen oluiden myynti ruokakaupassa sallitaan.', '244|Hyväksytään periaatepäätös uuden ydinvoimalaitosyksikön rakentamisesta.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.', '144|Terveys- ja sosiaalipalvelut on tuotettava ensijaisesti julkisina palveluina.', '128|Kaupan ja muiden liikkeiden aukioloajat on vapautettava.'],\n  tyoehdot: ['130|Työntekijälle on turvattava lailla minimityöaika.', '131|Ansiosidonnaisen työttömyysturvan kestoa pitää lyhentää.'],\n  eu: ['150|Suomen pitää ottaa suurempi vastuu EU:n alueelle tulevista turvapaikanhakijoista.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.'],\n  talouspolitiikka: ['245|Tuloveroa alennetaan tasaisesti kaikissa tuloluokissa talouden elvyttämiseksi.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.', '146|Vanhuksen ja hänen omaistensa vastuuta hoitokustannuksista on lisättävä.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.', '134|Valtion ja kuntien taloutta on tasapainotettava ensisijaisesti leikkaamalla menoja.', '136|Suomella ei ole varaa nykyisen laajuisiin sosiaali- ja terveyspalveluihin.'],\n  verotus: ['133|Ruoan verotusta on varaa kiristää.', '135|Lapsilisiä on korotettava ja laitettava verolle.'],\n  turvallisuus: ['149|Geenimuunneltu ruoka on turvallista ihmiselle ja ympäristölle.', '142|Suomen on osallistuttava Isisin vastaiseen taisteluun kouluttamalla Irakin hallituksen joukkoja.', '137|Nato-jäsenyys vahvistaisi Suomen turvallisuuspoliittista asemaa.', '138|Suomeen tarvitaan enemmän poliiseja.', '139|Maahanmuuttoa Suomeen on rajoitettava terrorismin uhan vuoksi.', '141|Verkkovalvonnassa valtion turvallisuus on tärkeämpää kuin kansalaisten yksityisyyden suoja.'],\n  maahanmuutto: ['150|Suomen pitää ottaa suurempi vastuu EU:n alueelle tulevista turvapaikanhakijoista.', '139|Maahanmuuttoa Suomeen on rajoitettava terrorismin uhan vuoksi.'],\n  ulkopolitiikka: ['142|Suomen on osallistuttava Isisin vastaiseen taisteluun kouluttamalla Irakin hallituksen joukkoja.', '140|Venäjän etupiiripolitiikka on uhka Suomelle.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.', '137|Nato-jäsenyys vahvistaisi Suomen turvallisuuspoliittista asemaa.'],\n  yksityisyys: ['246|Edellisen eduskunnan hyväksymä lainmuutos samaa sukupuolta olevien avioliiton sallimisesta peruutetaan.', '141|Verkkovalvonnassa valtion turvallisuus on tärkeämpää kuin kansalaisten yksityisyyden suoja.'],\n  ymparisto: ['244|Hyväksytään periaatepäätös uuden ydinvoimalaitosyksikön rakentamisesta.', '149|Geenimuunneltu ruoka on turvallista ihmiselle ja ympäristölle.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.'],\n  hallinto: ['201|Suomen Nato-jäsenyydestä on järjestettävä kansanäänestys.', '147|Kansalaisten oikeus terveyspalveluihin on tärkeämpää kuin kuntien itsehallinto.', '151|On aika luopua ajatuksesta, että koko Suomi on pidettävä asuttuna.'],\n  koulutus: ['152|Peruskoulun opetusryhmien koko on rajattava lailla esimerkiksi 20 oppilaaseen.'],\n}\n\nexport const puolueet = [\n  {\n    text: 'Keskusta',\n    value: 'kesk',\n  },\n  {\n    text: 'Kokoomus',\n    value: 'kok',\n  },\n  {\n    text: 'SDP',\n    value: 'sdp',\n  },\n  {\n    text: 'Vihreät',\n    value: 'vihr',\n  },\n  {\n    text: 'Vasemmistoliitto',\n    value: 'vas',\n  },\n  {\n    text: 'RKP',\n    value: 'rkp',\n  },\n  {\n    text: 'Kristillisdemokraatit',\n    value: 'kd',\n  },\n  {\n    text: 'Perussuomalaiset',\n    value: 'ps',\n  },\n]\n\nexport function parseParties(party) {\n  let puolue = party\n  switch (party) {\n    case 'Keskustan eduskuntaryhmä':\n      puolue = 'kesk'\n      break\n    case 'Perussuomalaisten eduskuntaryhmä':\n      puolue = 'ps'\n      break\n    case 'Kansallisen kokoomuksen eduskuntaryhmä':\n      puolue = 'kok'\n      break\n    case 'Sosialidemokraattinen eduskuntaryhmä':\n      puolue = 'sdp'\n      break\n    case 'Vihreä eduskuntaryhmä':\n      puolue = 'vihr'\n      break\n    case 'Vasemmistoliiton eduskuntaryhmä':\n      puolue = 'vas'\n      break\n    case 'Ruotsalainen eduskuntaryhmä':\n      puolue = 'rkp'\n      break\n    case 'Kristillisdemokraattinen eduskuntaryhmä':\n      puolue = 'kd'\n      break\n    default:\n      break\n  }\n  return puolue\n}\nexport default { vastausKategoriat, puolueet, parseParties }\n","import React from 'react';\nimport { Table, Modal, Button, Pagination, Icon } from 'semantic-ui-react'\n\nclass AnswersPopup extends React.Component {\n    state = { \n        activePage: 1,\n        totalPages: Math.round(this.props.answers.length / 10),\n        open: false\n    }\n\n\n    handleInputChange = (e, { value }) => this.setState({ activePage: value })\n\n    handlePaginationChange = (e, { activePage }) => this.setState({ activePage })\n\n    opinion = (opinion) => {\n        if (opinion === 'jokseenkin samaa mieltä' || opinion === 'täysin samaa mieltä') {\n          return 'jaa'\n        } if  (opinion === 'jokseenkin eri mieltä' || opinion === 'täysin eri mieltä') {\n          return 'ei'\n        }\n        return opinion\n    }\n\n    color = (jaa) => {\n        if (jaa === 'jaa') {\n          return '#e6ffe6'\n        } if (jaa === 'ei') {\n          return '#ffcccc'\n        }\n        return null\n      }\n\n      open = () => this.setState({ open: true })\n      close = () => this.setState({ open: false })\n\n  render() {\n    const activePage = this.state.activePage\n    const sliceIndex = (activePage-1)*10\n    const open = this.state.open\n\n    if (!this.props.answers) {\n      return <div>Ei sopivaa kysymystä</div>\n    }\n    \n    return(\n        <Modal\n        open={open}\n        onOpen={this.open}\n        onClose={this.close}\n        size='tiny'\n        trigger={\n          <Button primary icon>\n            <Icon name='add' />\n          </Button>\n        }\n      >\n        <Modal.Header>\n        <h2>{this.props.puolue}</h2>\n        </Modal.Header>\n        <Modal.Content>\n        <h4>{this.props.question.slice(4)}</h4>\n        <Pagination\n            activePage={activePage}\n            onPageChange={this.handlePaginationChange}\n            totalPages={this.state.totalPages}\n            firstItem={null}\n            lastItem={null}\n            prevItem={null}\n            nextItem={null}\n          /> \n        <Table celled striped id=\"table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell positive>Edustaja</Table.HeaderCell>\n              <Table.HeaderCell>\n              Kanta\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {this.props.answers.slice(sliceIndex, sliceIndex+10).map(x =>\n          (\n            <Table.Row key={x.edustaja}>\n              <Table.Cell> {x.edustaja}</Table.Cell>\n              <Table.Cell style={{background: this.color(this.opinion(x.kanta))}}>{this.opinion(x.kanta)}</Table.Cell>\n            </Table.Row>))}\n          </Table.Body>\n        </Table>\n        </Modal.Content>\n        </Modal>\n    )\n  }\n}\n\nexport default AnswersPopup\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Modal } from 'semantic-ui-react'\nimport { parseParties } from '../yle/ylesQuestionsCategories';\nimport AnswersPopup from './AnswersPopup';\n\nclass OneResult extends React.Component {\n  state = {\n    eit: false,\n    jaat: false,\n    yhteensa: false,\n    kannat: false,\n    red: '',\n    green: '',\n  }\n  componentWillMount = () => {\n    const puolueet = this.props.ylenKysymykset.puolueet\n    const puolue = parseParties(this.props.puolue)\n\n    if (this.props.puolue && this.props.kysymys) {\n      const kannat = puolueet[puolue].map(x => (\n        {\n          edustaja: `${x.etunimi} ${x.sukunimi}`,\n          kanta: x[this.props.kysymys],\n        }))\n      const eit = kannat.filter(x => x.kanta.toString() === 'jokseenkin eri mieltä'\n    || x.kanta.toString() === 'täysin eri mieltä')\n      const jaat = kannat.filter(x => x.kanta.toString() === 'jokseenkin samaa mieltä'\n    || x.kanta.toString() === 'täysin samaa mieltä')\n      const yhteensa = kannat.length\n      if (eit.length > jaat.length) {\n        this.setState({\n          red: '#ffcccc',\n        })\n      } if (eit.length < jaat.length) {\n        this.setState({\n          green: '#e6ffe6',\n        })\n      }\n      this.setState({\n        eit,\n        jaat,\n        yhteensa,\n        kannat,\n      })\n    }\n  }\n\n  render() {\n    if (this.state.red) {\n      return (\n        <Table.Row >\n        <Table.Cell>Yle</Table.Cell>\n        <Table.Cell>\n          {this.props.kysymys.slice(4)}\n        </Table.Cell>\n        <Table.Cell  style={{ background: this.state.red, padding: \"1em\" }}>\n             Ei ({Math.round((this.state.eit.length / this.state.yhteensa) * 100)}%)\n          </Table.Cell>\n          <Table.Cell />\n          <Table.Cell>\n          <Modal.Actions>\n            <AnswersPopup answers={this.state.kannat} question={this.props.kysymys} puolue={this.props.puolue}  />\n          </Modal.Actions>\n           </Table.Cell>\n      </Table.Row>\n        \n      )\n    } if (this.state.green) {\n      return (\n        <Table.Row >\n        <Table.Cell>Yle</Table.Cell>\n        <Table.Cell>\n          {this.props.kysymys.slice(4)}\n        </Table.Cell>\n        <Table.Cell style={{ background: this.state.green, padding: \"1em\"  }}>\n          Jaa ({Math.round((this.state.jaat.length / this.state.yhteensa) * 100)}%)\n          </Table.Cell>\n          <Table.Cell />\n          <Table.Cell>\n          <Modal.Actions>\n            <AnswersPopup answers={this.state.kannat} question={this.props.kysymys} puolue={this.props.puolue}  />\n          </Modal.Actions>\n           </Table.Cell>\n      </Table.Row>\n\n      )\n    }\n    return (\n      <Table.Row >\n      <Table.Cell>Yle</Table.Cell>\n      <Table.Cell>\n        {this.props.kysymys.slice(4)}\n      </Table.Cell>\n      <Table.Cell style={{ background: this.state.green, padding: \"1em\"  }}>\n        EOS (ei/jaa {Math.round((this.state.jaat.length / this.state.yhteensa) * 100)}%)\n        </Table.Cell>\n        <Table.Cell />\n        <Table.Cell>\n          <Modal.Actions>\n            <AnswersPopup answers={this.state.kannat} question={this.props.kysymys} puolue={this.props.puolue}  />\n          </Modal.Actions>\n\n        </Table.Cell>\n      </Table.Row>\n    )\n      \n  }\n}\nconst mapStateToProps = state => ({\n  ylenKysymykset: state.ylenKysymykset,\n});\n\nexport default connect(mapStateToProps)(OneResult);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Tab, Modal, Button, Icon } from 'semantic-ui-react';\n\nclass Members extends React.Component {\n  state = {\n    edustajat: [],\n    panes: [],\n    open: false\n  }\n  componentWillMount = () => {\n    const edustajat = this.props.edustajat.map(x => ({\n      nimi: x.nimi.split('/')[0],\n      puolue: this.parseParties(x.nimi.split('/')[1]),\n      kanta: x.kanta\n    }))\n    const out = edustajat.filter(x => x.puolue === this.props.puolue)\n    if (out.length < 11) {\n      this.setState({\n        edustajat: out,\n      })\n    } else {\n      const sliced = this.chunkArray(out, 10)\n      const panes = []\n      sliced.forEach((value, index) => {\n        panes.push({\n          menuItem: index.toString(),\n          render: () =>\n            (\n              <Tab.Pane>\n                <Table celled id=\"moi\">\n                  <Table.Header>\n                    <Table.Row>\n                      <Table.HeaderCell>Nimi</Table.HeaderCell>\n                      <Table.HeaderCell>Kanta</Table.HeaderCell>\n                    </Table.Row>\n                  </Table.Header>\n                  <Table.Body>\n                    {value.map(y => (\n                      <Table.Row key={y.nimi}>\n                        <Table.Cell>{this.parseName(y.nimi)}</Table.Cell>\n                        <Table.Cell style={{\n                      background:\n                        this.color(y.kanta),\n                      }}\n                        >{y.kanta}\n                        </Table.Cell>\n                      </Table.Row>\n               ))}\n                  </Table.Body>\n                </Table>\n              </Tab.Pane>\n            ),\n        })\n      })\n      this.setState({\n        panes,\n      })\n    }\n  }\n\n  chunkArray = (myArray, chunk) => {\n    let index = 0;\n    const arrayLength = myArray.length;\n    const tempArray = [];\n\n    for (index = 0; index < arrayLength; index = index + chunk) {\n      const myChunk = myArray.slice(index, index + chunk);\n      tempArray.push(myChunk);\n    }\n\n    return tempArray;\n  }\n\n parseParties = (party) => {\n   let puolue = party\n   switch (party) {\n     case 'kesk':\n       puolue = 'Keskustan eduskuntaryhmä'\n       break\n     case 'ps':\n       puolue = 'Perussuomalaisten eduskuntaryhmä'\n       break\n     case 'kok':\n       puolue = 'Kansallisen kokoomuksen eduskuntaryhmä'\n       break\n     case 'sd':\n       puolue = 'Sosialidemokraattinen eduskuntaryhmä'\n       break\n     case 'vihr':\n       puolue = 'Vihreä eduskuntaryhmä'\n       break\n     case 'vas':\n       puolue = 'Vasemmistoliiton eduskuntaryhmä'\n       break\n     case 'r':\n       puolue = 'Ruotsalainen eduskuntaryhmä'\n       break\n     case 'kd':\n       puolue = 'Kristillisdemokraattinen eduskuntaryhmä'\n       break\n     default:\n       break\n   }\n   return puolue\n }\n\n color = (jaa) => {\n   if (jaa === 'Jaa') {\n     return '#e6ffe6'\n   } if (jaa === 'Ei') {\n     return '#ffcccc'\n   }\n   return null\n }\n\n open = () => this.setState({ open: true })\n close = () => this.setState({ open: false })\n\n parseName = (name) => {\n  name = name.replace(/([a-z])([A-Z])/g, '$1 $2')\n  \n  return name\n}\n\n\n  render() {\n    const { open } = this.state\n    return (\n          <Modal\n          open={open}\n          onOpen={this.open}\n          onClose={this.close}\n          size='tiny'\n          trigger={\n            <Button primary icon>\n              <Icon name='add' />\n            </Button>\n          }\n        >\n          <Modal.Header>\n          <h2>{this.props.puolue}</h2>\n          </Modal.Header>\n          <Modal.Content>\n            <h4>{this.props.question}</h4>\n            <div>\n              {this.state.edustajat.length > 1 &&\n              <Table celled>\n                <Table.Header>\n                  <Table.Row>\n                    <Table.HeaderCell>Nimi</Table.HeaderCell>\n                    <Table.HeaderCell>Kanta</Table.HeaderCell>\n                  </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                  {this.state.edustajat.map(x => (\n                    <Table.Row key={x.nimi}>\n                      <Table.Cell>{this.parseName(x.nimi)}</Table.Cell>\n                      <Table.Cell style={{\n                              background:\n                                this.color(x.kanta),\n                              }}\n                      >{x.kanta}\n                      </Table.Cell>\n                    </Table.Row>\n                      ))}\n                </Table.Body>\n              </Table>\n              }\n              <Tab panes={this.state.panes} style={{ background: 'white' }} />\n            </div>\n          </Modal.Content>\n        </Modal>\n  \n   )\n }\n}\n\nconst mapStateToProps = state => ({\n  kysymykset: state.kysymykset,\n});\nexport default connect(\n  mapStateToProps,\n  null,\n)(Members);\n","import _ from 'lodash'\nimport React from 'react';\nimport { Table, Button, Popup, Modal, Header } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { addPuolue } from '../reducers/kayttajaReducer'\nimport OneResult from './yleParties/OneResult';\nimport Members from './questions/MembersAnswers';\n\n\nclass AnswersTable extends React.Component {\n  state = {\n    monta: this.props.kayttaja.kysymykset.length,\n    show: false,\n    puolue: 'Keskustan eduskuntaryhmä',\n    order: _.orderBy(this.props.kayttaja.puolueet, ['aanet'], ['desc'])\n  }\n\n  show = (puolue) => {\n    if (puolue) {\n      this.setState({\n        puolue,\n      });\n    }\n    this.setState({\n      show: !this.state.show,\n    });\n  }\ncolor = (jaa) => {\n  if (jaa === 'jaa') {\n    return '#e6ffe6'\n  } if (jaa === 'ei') {\n    return '#ffcccc'\n  }\n  return null\n}\n\nparseOpinion = (party) => {\n  const opinion = this.capitalize(party.kanta)\n  if (opinion === 'Ei') {\n    return opinion + \" (\" + Math.round((party.ei / party.yhteensa) * 100) + \"%)\"\n  } else if (opinion === 'Jaa') {\n    return opinion + \" (\" + Math.round((party.jaa / party.yhteensa) * 100) + \"%)\"\n  }\n  return  \"EOS (\" + Math.round(((party.tyhjia + party.poissa) / party.yhteensa) * 100) + \"%)\"\n}\n\ncapitalize = (string) => {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nrender() {\n  console.log('order', this.state);\n  \n  return (\n    <div style={{ padding: '1em', paddingLeft: '0em' }} >\n      \n      <Table id=\"table\">\n       \n        <Table.Body>\n          {this.state.order.map(x =>\n              (\n                <Table.Row key={x.name}>\n                  <Table.Cell>\n                    <img src={x.url} alt={x.name} height=\"80em\" width=\"120em\" />\n                  </Table.Cell>\n                  <Table.Cell>\n                    <p>{x.name}</p>\n                  </Table.Cell>\n                  <Table.Cell>{Math.round((x.aanet / this.state.monta) * 100)} %</Table.Cell>\n                  <Table.Cell>\n                    {x.name !== 'Liike Nyt-eduskuntaryhmä' && x.name !== 'Sininen eduskuntaryhmä' ?\n                          <Modal \n                            dimmer='blurring'\n                            trigger={\n                              <Button color=\"blue\" inverted onClick={() => this.show(x.name)}>Näytä vastaukset</Button>\n                              }\n                          >\n                            <Modal.Header>{this.state.puolue}</Modal.Header>\n                            <Modal.Content>\n                              <Modal.Description>\n                                  {this.props.kayttaja.kysymykset.map(x =>\n                                  <Table celled id=\"table\">\n                                    <Table.Header>\n                                      <Table.Row>\n                                        <Table.HeaderCell>Lähde</Table.HeaderCell>\n                                        <Table.HeaderCell width=\"10\">Kysymys</Table.HeaderCell>\n                                        <Table.HeaderCell width=\"2\">Puolue</Table.HeaderCell>\n                                        <Table.HeaderCell width=\"1\">Sinä</Table.HeaderCell>\n                                        <Table.HeaderCell>Edustajien kannat</Table.HeaderCell>\n                                      </Table.Row>\n                                    </Table.Header>\n                                  <Table.Body key={x.id} style={{marginTop: \"2em\"}}>\n                                      <Table.Row >\n                                        <Table.Cell>Eduskunta</Table.Cell>\n                                        <Table.Cell>\n                                          <p>{x.kysymys}</p>\n                                        </Table.Cell>\n                                        <Table.Cell\n                                          style={{\n                                            background:\n                                              this.color(x.puolueet.find(y => y.nimi === this.state.puolue).kanta),\n                                            }}\n                                        >\n                                          {this.parseOpinion(x.puolueet.find(y => y.nimi === this.state.puolue))} \n                                        </Table.Cell>\n                                        <Table.Cell\n                                          style={{\n                                            background:\n                                              this.color(x.user),\n                                            }}\n                                        >\n                                          {this.capitalize(x.user)} \n                                        </Table.Cell>\n                                        <Table.Cell>\n                                        <Modal.Actions>\n                                          <Members edustajat={x.edustajat} puolue={this.state.puolue} question={x.kysymys}/>\n                                        </Modal.Actions>\n                                        </Table.Cell>\n                                      </Table.Row>\n                                      <OneResult puolue={this.state.puolue} kysymys={x.vastaus} />\n                                  </Table.Body>\n                                </Table>\n                                  )}\n                              </Modal.Description>\n                          </Modal.Content>\n                        </Modal>\n                    : <p>Ei mukana koko kautta</p>}\n                  </Table.Cell>\n                </Table.Row>))}\n        </Table.Body>\n      </Table>\n    </div>\n  )\n}\n}\n\nconst mapStateToProps = state => ({\n  kayttaja: state.kayttaja,\n  ylenKysymykset: state.ylenKysymykset,\n})\n\nexport default connect(\n  mapStateToProps,\n  { addPuolue },\n)(AnswersTable)\n","import React from 'react'\nimport _ from 'lodash'\nimport { connect } from 'react-redux';\nimport {Radar} from 'react-chartjs-2';\nimport { Checkbox, Accordion, Icon} from 'semantic-ui-react';\n\n\nclass NolansMap extends React.Component {\n  state = {\n    questions: this.props.questions,\n    valuesCount: 0,\n    greenCount: 0,\n    economicsCount: 0,\n    maxDataValue: 0,\n    dataSets: [],\n    selectParties: false,\n    partiesData: [\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Keskustan eduskuntaryhmä\",\n        borderColor: \"rgb(51, 153, 51)\",\n        backgroundColor: \"rgb(51, 153, 51, 0.1)\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Kansallisen kokoomuksen eduskuntaryhmä\",\n        borderColor: \"rgb(51, 153, 255)\",\n        backgroundColor: \"rgb(51, 153, 255, 0.1)\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Sosialidemokraattinen eduskuntaryhmä\",\n        borderColor: \"rgb(153, 0, 0)\",\n        backgroundColor: \"rgb(153, 0, 0, 0.1)\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Sininen eduskuntaryhmä\",\n        borderColor: \"rgb(102, 255, 204)\",\n        backgroundColor: \"rgb(102, 255, 204, 0.1)\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Perussuomalaisten eduskuntaryhmä\",\n        borderColor: \"rgb(0, 0, 153)\",\n        backgroundColor: \"rgb(0, 0, 153, 0.1)\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Vihreä eduskuntaryhmä\",\n        borderColor: \"rgb(153, 255, 102)\",\n        backgroundColor: \"rgb(153, 255, 102, 0.1)\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Ruotsalainen eduskuntaryhmä\",\n        borderColor: \"rgb(255, 255, 0)\",\n        backgroundColor: \"rgb(255, 255, 0, 0.1)\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Vasemmistoliiton eduskuntaryhmä\",\n        borderColor: \"rgb(204, 102, 153)\",\n        backgroundColor: \"rgb(204, 102, 153, 0.1)\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Kristillisdemokraattinen eduskuntaryhmä\",\n        borderColor: \"rgb(255, 153, 51)\",\n        backgroundColor: \"rgb(255, 153, 51, 0.1)\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Liike Nyt -eduskuntaryhmä\",\n        borderColor: \"rgb(204, 0, 255)\",\n        backgroundColor: \"rgb(204, 0, 255, 0.1)\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Tähtiliikkeen eduskuntaryhmä\"\n      },\n      {\n        data: [0, 0, 0, 0, 0], \n        label: \"Sinä\",\n        borderColor: \"rgb(255, 0, 165)\",\n        backgroundColor: \"rgb(255, 0, 165, 0.1)\"\n      }\n    ],\n    selectedParties: [],\n    allParties: true\n  }\n\n  componentDidMount = () => {\n    this.dataToRadar()\n  }\n\n  dataToRadar = () => {\n    this.setState({\n      selectedParties: [_.orderBy(this.props.user.puolueet, ['aanet'], ['desc'])[0].name, \"Sinä\"]\n    })\n    const questions = this.props.user.kysymykset\n    const valueQuestions = questions.filter(q => q.hasOwnProperty('jaaLiberal'))\n    const economicQuestions = questions.filter(q => q.hasOwnProperty('jaaLeftist'))\n    const greenQuestions = questions.filter(q => q.hasOwnProperty('green'))\n\n\n    valueQuestions.forEach(q => this.setValuesToDataset(q, \"values\"))\n    economicQuestions.forEach(q => this.setValuesToDataset(q, \"economics\"))\n    greenQuestions.forEach(q => this.setValuesToDataset(q, \"green\"))\n  }\n\n  setValuesToDataset = (question, label) => {\n    const user_party = {\n      nimi: \"Sinä\",\n      kanta: question.user\n    }\n    if (!question.puolueet.find(x => x.nimi == 'Sinä')){\n      question.puolueet.push(user_party)\n    }\n    \n    switch(label) {\n      case \"values\":\n        if (question.jaaLiberal) {\n          question.puolueet.forEach( party => this.setValuesToDataHelper(party, true, label))\n        } else {\n          question.puolueet.forEach( party => this.setValuesToDataHelper(party, false, label))\n        }\n        break;\n      case \"economics\":\n        if (question.jaaLeftist) {\n          question.puolueet.forEach( party => this.setValuesToDataHelper(party, true, label))\n        } else {\n          question.puolueet.forEach( party => this.setValuesToDataHelper(party, false, label))\n        }\n        break;\n      default:\n        if (question.green) {\n          question.puolueet.forEach( party => this.setValuesToDataHelper(party, true, label))\n        } else {\n          question.puolueet.forEach( party => this.setValuesToDataHelper(party, false, label))\n        }\n    }\n  \n  }\n\n  setValuesToDataHelper = (party, jaa, label) => {\n    var index = \"\"\n    if (label === \"values\") {\n      index = jaa ? 3 : 0\n    } else if (label=== \"economics\") {\n      index = jaa ? 4 : 1\n    } else if (label === \"green\") {\n      index = 2\n    }\n    \n    switch(index) {\n      case 2:\n        if (party.kanta === 'jaa' && jaa) {\n          this.setDataToPartyHelper(party, index)\n        } else if  (party.kanta == 'ei' && !jaa){\n          this.setDataToPartyHelper(party, index)\n        }\n      break;\n      default:\n        if (party.kanta === 'jaa' && jaa) {\n          // liberal\n          this.setDataToPartyHelper(party, index)\n        } else if (party.kanta == 'ei' && !jaa) {\n          // conservative\n          this.setDataToPartyHelper(party, index)\n        } \n    }\n  }\n\n  setDataToPartyHelper = (party, index) => {\n    var partiesDataCopy = this.state.partiesData\n    const orginalValue = partiesDataCopy.find(data => data.label.replace(/\\s/g, '') === party.nimi.replace(/\\s/g, '')).data[index]\n    \n    partiesDataCopy.find(data => data.label.replace(/\\s/g, '') === party.nimi.replace(/\\s/g, '')).data[index] = orginalValue + 1\n    \n    this.setState({\n      partiesData: partiesDataCopy\n    })\n  }\n\n  allParties = (e) => {\n    const selectedParties = this.state.allParties ? [] : this.state.partiesData.map(set => set.label)\n    this.setState({\n      allParties: !this.state.allParties,\n      selectedParties\n    })\n  }\n\n  handleParties = (party) => {\n    if (this.state.selectedParties.includes(party)) {\n      this.setState({\n        selectedParties: this.state.selectedParties.filter(parti => parti !== party)\n      })\n    } else {\n      const copy = this.state.selectedParties\n      copy.push(party)\n      this.setState({\n        categories: copy\n      })\n    }\n  }\n\n  render() {\n\n    console.log('state', this.state);\n    console.log('props', this.props);\n\n    \n    \n    if (this.props.questions != this.state.questions) {\n      this.setState({\n        questions: this.props.questions\n      })\n      this.dataToRadar()\n    }\n    const allParties = this.state.partiesData.map(set => set.label)\n    return (\n      <div style={{paddingTop: \"1em\", marginBottom: \"2em\"}}>\n        {this.state.questions &&\n          <div style={{textAlign: \"center\"}}>\n            <h1 style={{textAlign: \"center\"}}>Arvokartta</h1>\n            <Accordion>\n              <Accordion.Title active={!this.state.selectParties} onClick={() => this.setState({selectParties: !this.state.selectParties})}>\n                <Icon name='dropdown' />\n                <b>Valitse puolueita kartalle </b>\n              </Accordion.Title>\n              <Accordion.Content active={this.state.selectParties} style={{marginLeft: \"2em\"}}>\n                <div>\n                <Checkbox\n                    label={{ children: \"Kaikki/Tyhjennä\" }} \n                    style={{padding: \"0.8em\"}}\n                    checked={this.state.allParties}\n                    onChange={() => this.allParties()} />\n                    <hr />\n                {allParties.map(party => \n                  <Checkbox\n                    key={party}\n                    label={{ children: party }} \n                    style={party == 'Sinä' ? {padding: \"0.8em\", background: \"rgb(255, 0, 165, 0.1)\"} : {padding: \"0.8em\"}}\n                    checked={this.state.selectedParties.includes(party)}\n                    onChange={() => this.handleParties(party)} />\n                  )}\n                </div>\n              </Accordion.Content>\n            </Accordion>\n      \n            <div> \n              <Radar \n                options = {{\n                  layout: {\n                    padding: 0.5,\n                  },\n                  legend: {\n                    labels: {\n                        fontSize: 14\n                    }\n                  },\n                  \n                }}\n                data = {{\n                  labels: ['Konservatiivisuus', 'Oikeistolaisuus',  'Vihreys', 'Liberaalius', 'Vasemmistolaisuus'],\n                  datasets: this.state.partiesData.filter(party => this.state.selectedParties.includes(party.label)),\n                }}\n              />\n            </div>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  questions: state.kysymykset,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(NolansMap);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Grid, Header, Card, Icon} from 'semantic-ui-react';\nimport { addKysymys, addVastaus } from '../reducers/kayttajaReducer';\nimport { notifyCreation } from '../reducers/notifyReducer'\nimport AnswersTable from './AnswersTable';\nimport './Machine.css';\nimport NolansMap from './nolansMap/NolansMap';\n\nclass Machine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      kysymykset: [],\n      monesko: 0,\n      kysymys: null,\n      show: false,\n      tulokset: false,\n      naytaKysymys: false,\n    };\n  }\n\n  componentWillMount = async () => {\n    const questions = this.filterQuestions(this.props.kysymykset)\n    const satunnainenKysymys = this.shuffle(questions)\n    let kysymykset = satunnainenKysymys\n    if (satunnainenKysymys.length > 9) {\n      kysymykset = satunnainenKysymys.slice(0, 19);\n    }\n    console.log('staunna', satunnainenKysymys.length);\n    \n    this.setState({\n      kysymykset\n    });\n    if (!this.state.kysymys) {\n      this.setState({\n        kysymys: kysymykset[this.state.monesko],\n      })\n    } else {\n      window.location.assign('/')\n    }\n  }\n\n  filterQuestions = (questions) => {\n    let handledQuestions = questions\n    const selected_categories = this.props.selected_categories\n    if (this.props.hots) {\n      handledQuestions = questions.filter( question => question.hot)\n    } if (selected_categories.length > 0){\n      handledQuestions = questions.filter( q => selected_categories.some(cat => q.kategoriat.map(k => k.nimi).includes(cat)))\n      if (handledQuestions.length === 0) {\n        this.props.notifyCreation('Antamillasi ehdoilla ei löytynyt yhtään kysymystä. Kokeile valita hieman vähemmän kategorioita.', 15)\n      }\n    }\n    return handledQuestions\n  }\n/*eslint-disable */\n  shuffle = (array) => {\n    \n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex = currentIndex - 1;\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n  /* eslint-enable */\n  show = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  }\n\n  naytaKysymys = () => {\n    this.setState({\n      naytaKysymys: !this.state.naytaKysymys,\n    });\n  }\n\n  tulokset= () => {\n    this.setState({\n      tulokset: !this.state.tulokset,\n    });\n  }\n\n\n  vastaus = (vastaus) => {\n    let q = this.state.kysymys\n    q.user = vastaus\n    this.props.addKysymys(q);\n    const jaaPuolueet = this.state.kysymys.puolueet.filter(p => p.kanta === vastaus);\n    const help = this.props.kayttaja.kysymykset.find(x => x.kysymys === this.state.kysymys.kysymys)\n    if (!help) {\n      for (let i = 0; i < jaaPuolueet.map(p => p.nimi).length; i = i + 1) {\n        this.props.addVastaus(jaaPuolueet.map(p => p.nimi)[i]);\n      }\n    }\n    this.setState({\n      monesko: this.state.monesko + 1,\n      kysymys: this.state.kysymykset[this.state.monesko + 1],\n      naytaKysymys: false,\n      show: false,\n    })\n  }\n\n  render() {\n    \n    if (this.props.kayttaja.kysymykset.length === this.state.kysymykset.length) {\n      return (\n        <div>\n          <h1 >Tulokset</h1>\n          <AnswersTable />\n          <NolansMap user={this.props.kayttaja}/>\n          <Button onClick={() => window.location.assign('/kone')} basic fluid color=\"blue\" size='massive' style={{marginTop: \"3em\", margin: \"1em\"}}>\n            Valitse uudet kategoriat ja vastaa taas kysymyksiin\n          </Button>\n        </div>\n      );\n    }\n    if (!this.state.kysymys) {\n      window.location.assign('/')\n    }\n    return (\n      <Grid >\n        <Grid.Row>\n          <Header as=\"h1\" >  \n            <span> Äänestä!</span></Header>\n        </Grid.Row>\n        <Grid.Row>\n            <p style={{fontSize: \"1.2em\"}}> {this.props.kayttaja.kysymykset.length + 1}. {this.state.kysymys.kysymys}</p>\n         </Grid.Row>\n\n        <Grid.Row>\n          <Button onClick={() => this.vastaus('jaa')} size=\"big\" color='green'> \n            <Icon name='checkmark' />\n            Jaa\n          </Button>\n          <Button onClick={() => this.vastaus('eos')} size=\"big\">\n            <Icon name='question' />\n            EOS\n          </Button>\n          <Button onClick={() => this.vastaus('ei')} size=\"big\" color=\"red\">\n            <Icon name=\"close\" />\n            Ei\n          </Button>\n        </Grid.Row>\n        <Grid.Row style={{marginTop: \"0.5em\"}}>\n        <Card style={{width: \"800px\"}}>\n          <Card.Header style={{background: \"#cecece\", padding: \"0.5em\"}}><h3>Lisätietoja</h3></Card.Header>\n          <Card.Content> \n           <h3>{this.state.kysymys.tunniste}</h3> \n            <p>{this.state.kysymys.selitys}</p> \n           <h3>Äänestysvuosi</h3>\n           {this.state.kysymys.vuosi}\n           <h3>Kategoriat</h3>\n           {this.state.kysymys.kategoriat.map(x => (\n                <p style={{padding: \"0\", margin: \"0\"}} key={x._id}>{x.nimi}</p>\n          ))}\n          </Card.Content>\n          <Card.Content extra>\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.kysymys.url} style={{color:\"blue\"}}>Eduskunnan sivuille</a>\n          </Card.Content>\n        </Card>\n       \n        </Grid.Row>\n      \n      </Grid>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  kysymykset: state.kysymykset,\n  kayttaja: state.kayttaja,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addVastaus,\n    addKysymys,\n    notifyCreation,\n  },\n)(Machine);\n\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { Accordion, Icon, Checkbox } from 'semantic-ui-react'\nimport Machine from './Machine'\n\nclass Settings extends React.Component {\n    state = {\n      renderMachine: false,\n      hotQuestions: true,\n      categories: []\n    }\n\n\n    handleHotquestions = () => {\n      this.setState({\n        hotQuestions: !this.state.hotQuestions,\n      })\n    }\n\n    renderMachine = () => {\n      this.setState({\n        renderMachine: true,\n      })\n    }\n\n    handleCategories = (categ) => {\n      if (this.state.categories.includes(categ)) {\n        this.setState({\n          categories: this.state.categories.filter(cat => cat !== categ)\n        })\n      } else {\n        const copy = this.state.categories\n        copy.push(categ)\n        this.setState({\n          categories: copy\n        })\n      }\n    }\n\n    render() {\n      if (this.state.renderMachine) {\n        return (\n          <Machine hots={false} selected_categories={this.state.categories}/>\n        )\n      }\n      return (\n        <div>\n            <h1>Asetukset</h1>\n            <p>\n              Oletuksena sinulle valitaan 20 kysymystä\n              polttavien aiheiden joukosta. Halutessasi voit\n              muuttaa kysymysten määrää ja valita sinua kiinnostavat\n              kategoriat.\n            </p>\n            <Accordion style={{paddingTop: \"1em\", paddingBottom:\"1em\"}}>\n              <Accordion.Title active={!this.state.hotQuestions} onClick={this.handleHotquestions}>\n                <Icon name='dropdown' />\n                <b>Valitsen itse kategoriat </b>\n              </Accordion.Title>\n              <Accordion.Content active={!this.state.hotQuestions} style={{marginLeft: \"2em\"}}>\n                <div>\n                  {this.props.kategoriat.map(kateg => \n                    <Checkbox\n                      key={kateg.id}\n                      label={{ children: kateg.nimi }} \n                      style={{padding: \"0.8em\"}}\n                      checked={this.state.categories.includes(kateg.nimi)}\n                      onChange={() => this.handleCategories(kateg.nimi)} />\n                    )}\n                </div>\n              </Accordion.Content>\n            </Accordion>\n          <br />\n          <button className=\"button\" onClick={() => this.renderMachine()}>Aloita</button>\n      </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => ({\n  kategoriat: state.kategoriat,\n});\n\nexport default connect(mapStateToProps)(Settings);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Table, Button } from 'semantic-ui-react';\nimport kysymysService from './../../services/kysymys';\n\nconst linkStyle = {\n  color: 'black',\n  fontSize: 14,\n  fontWeight: 'normal',\n};\n\nclass Questions extends React.Component {\n    remove =k => () => {\n      const ok = window.confirm(`Poistetaanko ${k.kysymys} kysymys`);\n\n      if (!ok) {\n        return;\n      }\n      try {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser');\n        kysymysService.setToken(JSON.parse(loggedUserJSON).token);\n        kysymysService.remove(k.id);\n      } catch (error) {\n        console.log('jotain meni vikaan');\n      }\n    }\n\n    render() {\n      return (\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell positive>Kysymys</Table.HeaderCell>\n              {window.localStorage.getItem('loggedUser') &&\n              <Table.HeaderCell>Poisto</Table.HeaderCell>}\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {this.props.kysymykset.map(k =>\n                  (\n                    <Table.Row key={k.id}>\n                      <Table.Cell selectable><Link style={linkStyle} to={`/kysymykset/${k.id}`}>{k.kysymys}</Link></Table.Cell>\n                      <Table.Cell>{window.localStorage.getItem('loggedUser') === null ?\n                null : <form onSubmit={this.remove(k)}><Button inverted color=\"red\" type=\"submit\">Delete</Button></form>}\n                      </Table.Cell>\n                    </Table.Row>))}\n          </Table.Body>\n        </Table>\n      );\n    }\n}\nconst mapStateToProps = state => ({\n  kysymykset: state.kysymykset,\n});\nexport default connect(\n  mapStateToProps,\n  null,\n)(Questions);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Table, Header, Button } from 'semantic-ui-react'\n\n\nclass Vastaukset extends React.Component {\n  state={\n    tiedot: false,\n  }\n    componentDidMount = () => {\n    }\n\n    nayta = () => {\n      this.setState({\n        tiedot: !this.state.tiedot,\n      })\n    }\n    render() {\n      if (this.props.edustaja) {\n        const edustaja = this.props.edustaja\n        const kysymykset = Object.keys(edustaja)\n        const tiedot = kysymykset.slice(0, 36)\n        const sliced = kysymykset.slice(37, 99)\n        return (\n          <Container style={{ background: '#fff3e6' }}>\n            <Header>{edustaja.etunimi}{' '}{edustaja.sukunimi}</Header>\n            <b>Vastaukset ylen vaalikoneeseen</b>\n            <br />\n            <br />\n            <b>Vaalilupaukset</b>\n            <p style={{ background: '#ffce99' }}>Vaalilupaus 1: {edustaja['Vaalilupaus 1']}</p>\n            <p style={{ background: '#ffce99' }}>Vaalilupaus 2: {edustaja['Vaalilupaus 2']}</p>\n            <p style={{ background: '#ffce99' }}>Vaalilupaus 3: {edustaja['Vaalilupaus 3']}</p>\n            <Button onClick={this.nayta} inverted color=\"blue\"> {!this.state.tiedot ?\n              <p>Näytä edustajan</p> : <p>Piilota </p>}\n          taustatiedot\n            </Button>\n            {this.state.tiedot &&\n            <Table striped>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell style={{ background: 'DeepSkyBlue' }}>Kohta</Table.HeaderCell>\n                  <Table.HeaderCell>Vastaus</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {tiedot.map(x =>\n              (\n                <Table.Row key={x}>\n                  <Table.Cell>{x}</Table.Cell>\n                  <Table.Cell>{edustaja[x]}</Table.Cell>\n                </Table.Row>\n                ))}\n              </Table.Body>\n              <Button onClick={this.nayta} inverted color=\"blue\">Piilota taustatiedot\n              </Button>\n            </Table>\n          }\n            <Table striped celled>\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell style={{ background: '#ffa64d' }}>Kysymys</Table.HeaderCell>\n                  <Table.HeaderCell style={{ background: '#ffa64d' }}>Vastaus</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {sliced.map(x =>\n              (\n                <Table.Row key={x}>\n                  <Table.Cell>{x}</Table.Cell>\n                  <Table.Cell>{edustaja[x]}</Table.Cell>\n                </Table.Row>\n                ))}\n              </Table.Body>\n            </Table>\n          </Container>\n        )\n      } return null\n    }\n}\n\nconst mapStateToProps = state => ({\n  edustaja: state.edustaja,\n});\n\nexport default connect(\n  mapStateToProps,\n  null,\n)(Vastaukset);\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table } from 'semantic-ui-react'\nimport { parseParties } from '../yle/ylesQuestionsCategories';\n\nclass YleKannat extends React.Component {\n  state = {\n    eit: false,\n    jaat: false,\n    yhteensa: false,\n    kannat: false,\n    red: '',\n    green: '',\n  }\n  componentWillMount = () => {\n    const puolueet = this.props.ylenKysymykset.puolueet\n    const puolue = parseParties(this.props.puolue)\n    if (this.props.puolue && this.props.kysymys) {\n      const kannat = puolueet[puolue].map(x => (\n        {\n          edustaja: `${x.etunimi} ${x.sukunimi}`,\n          kanta: x[this.props.kysymys],\n        }))\n      const eit = kannat.filter(x => x.kanta.toString() === 'jokseenkin eri mieltä'\n    || x.kanta.toString() === 'täysin eri mieltä')\n      const jaat = kannat.filter(x => x.kanta.toString() === 'jokseenkin samaa mieltä'\n    || x.kanta.toString() === 'täysin samaa mieltä')\n      const yhteensa = kannat.length\n      if (eit.length > jaat.length) {\n        this.setState({\n          red: '#FFB6C1',\n        })\n      } if (eit.length < jaat.length) {\n        this.setState({\n          green: 'lightgreen',\n        })\n      }\n      this.setState({\n        eit,\n        jaat,\n        yhteensa,\n        kannat,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h2 style={{ textAlign: 'center' }}>Ylen vaalikoneen kysymys</h2>\n        { this.props.show &&\n        <h2 style={{ background: '#ffc180', textAlign: 'center' }}>{this.props.puolue}</h2>\n          }\n        <h3>{this.props.kysymys}</h3>\n        <p><b>Ylen vaalikoneeseen vastanneet edustajat: </b>{this.state.yhteensa}</p>\n        <p style={{ background: this.state.green }}><b>Jaa: </b>\n          {this.state.jaat.length}\n          ({Math.round((this.state.jaat.length / this.state.yhteensa) * 100)}%)\n        </p>\n        <p style={{ background: this.state.red }}>\n          <b>Ei: </b> {this.state.eit.length}\n          ({Math.round((this.state.eit.length / this.state.yhteensa) * 100)}%)\n        </p>\n        { this.props.show &&\n        <Table celled striped id=\"table\">\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell positive>Edustaja</Table.HeaderCell>\n              <Table.HeaderCell>\n              Kanta\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {this.state.kannat.map(x =>\n           (\n             <Table.Row key={x.edustaja}>\n               <Table.Cell> {x.edustaja}</Table.Cell>\n               <Table.Cell>{x.kanta}</Table.Cell>\n             </Table.Row>))}\n          </Table.Body>\n        </Table>\n        }\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  ylenKysymykset: state.ylenKysymykset,\n});\n\nexport default connect(mapStateToProps)(YleKannat);\n\n","\n\nconst edustajaReducer = (store = null, action) => {\n  if (action.type === 'ADD') {\n    return action.data\n  }\n  return store\n}\n\nexport const addEdustaja = data => async (dispatch) => {\n  dispatch({\n    type: 'ADD',\n    data,\n  })\n}\n\nexport default edustajaReducer\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Button, Input, Dropdown } from 'semantic-ui-react'\nimport Vastaukset from './Answers';\nimport YleKannat from '../yleParties/YleKannat';\nimport { puolueet as valuesP } from './ylesQuestionsCategories';\nimport { addEdustaja } from '../../reducers/edustajaReducer';\nimport { notifyCreation } from '../../reducers/notifyReducer'\nimport { getYlenKysymykset  } from '../../reducers/ylenKysymyksetReducer';\n\nclass EtsiVastaus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      etunimi: '',\n      sukunimi: '',\n      kysymys: '',\n      puolue: '',\n      kannat: false,\n    };\n  }\n\n  componentWillMount = async () => {\n    if (!this.props.ylenKysymykset.kysymykset) { window.location.assign('/') }\n  }\n\n    etsi = () => {\n      /*eslint-disable */\n      \n      try {\n      const edustaja = this.props.ylenKysymykset.edustajat.find(x => x.sukunimi.toLowerCase().replace(/\\s/g, '') === this.state.sukunimi.toLowerCase().replace(/\\s/g, ''))\n      /* eslint-enable */\n        if (edustaja.etunimi.toLowerCase().replace(/\\s/g, '') === this.state.etunimi.toLowerCase().replace(/\\s/g, '')) {\n          this.props.addEdustaja(edustaja)\n        }\n      } catch (err) {\n        this.props.notifyCreation('Henkilöä ei löydy. Syötitkö sekä etu- että sukunimen?', 5)\n      }\n    }\n\n    muodosta = () => {\n      const puolueet = this.props.ylenKysymykset.puolueet\n      if (this.state.puolue && this.state.kysymys) {\n        const kannat = puolueet[this.state.puolue].map(x => (\n          {\n            edustaja: `${x.etunimi} ${x.sukunimi}`,\n            kanta: x[this.state.kysymys],\n          }))\n        this.setState({\n          kannat,\n        })\n      } else {\n        this.props.notifyCreation('Tietoja ei löydy. Syötitkö sekä puolueen- että kysymyksen?', 5)\n      }\n    }\n\n    handleChange(e, { name, value }) {\n      // If you are using babel, you can use ES 6 dictionary syntax\n      // let change = { [e.target.name] = e.target.value }\n      if (name && value) {\n        this.setState({ [name]: value })\n      } else {\n        const change = {}\n        change[e.target.name] = e.target.value\n        this.setState(change)\n      }\n    }\n\n    piilotaKannat = () => {\n      this.setState({\n        kannat: false,\n      })\n    }\n\n    // tietokantaan = async () => {\n    //   console.log('haloo', \n    //   this.props.kysymykset[0].edustajat.map(c => c.nimi));\n      \n      \n    //   const yle = await this.props.getYlenKysymyksetFromCSV(\n    //     this.props.kysymykset[0].edustajat.map(c => c.nimi));\n      \n    //     setTimeout(function(){ console.log('yle', yle);\n    //      }, 5000);\n     \n    // }\n\n    render() {\n      if (this.props.ylenKysymykset) {\n      /*eslint-disable */\n      const values = this.props.ylenKysymykset.kysymykset.map(x => x = { text: x, value: x })\n       /* eslint-enable */\n        return (\n          <Container>\n            <h1>Mitä vuonna 2015 tuli luvattua?</h1>\n            <p>Alta voit tarkastaa, mitä ylen vaalikoneessa kysyttiin vuonna 2015 ja miten puolueet ja edustajat kysymyksiin vastasivat.</p>\n            <div style={{ background: 'AliceBlue'}}>\n              <h2>Puolueet</h2>\n              <p>\n           Täältä löydät puolueiden vastaukset yksittäisiin ylen vaalikoneessa vuonna 2015 kysyttyihin kysymyksiin.\n              </p>\n              <Dropdown type=\"text\" name=\"puolue\" placeholder=\"Valitse puolue\" onChange={this.handleChange.bind(this)} fluid search selection options={valuesP} />\n              <Dropdown type=\"text\" name=\"kysymys\" placeholder=\"Valitse kysymys\" onChange={this.handleChange.bind(this)} fluid search selection options={values} />\n              <br />\n              <p><Button positive onClick={this.muodosta}>Tarkastele vastauksia</Button></p>\n              <br />\n              { this.state.kannat &&\n              <div>\n                <Button onClick={this.piilotaKannat}>Piilota {this.state.puolue} kannat</Button>\n                <YleKannat puolue={this.state.puolue} kysymys={this.state.kysymys} show />\n              </div>\n            }\n            </div>\n            <br />\n            <div style={{ background: 'AliceBlue' }}>\n              <h1>Edustajat</h1>\n              <p>\n          Täältä voit etsiä yksittäisten kansanedustajien/ehdokkaiden vastauksia ylen vaalikoneeseen,\n              </p>\n              <Input type=\"text\" onChange={this.handleChange.bind(this)} className=\"form-control\" placeholder=\"Juha\" name=\"etunimi\" label=\"Etunimi\" />\n              <Input type=\"text\" onChange={this.handleChange.bind(this)} className=\"form-control\" placeholder=\"Sipilä\" name=\"sukunimi\" label=\"Sukunimi\" />\n              <br />\n              <br />\n              <p><Button positive color=\"black\" onClick={this.etsi}>Tarkastele vastauksia</Button></p>\n              <br />\n              <Vastaukset />\n            </div>\n          </Container>\n        )\n      }\n      return null\n    }\n}\n\n\nconst mapStateToProps = state => ({\n  edustaja: state.edustaja,\n  kysymykset: state.kysymykset,\n  ylenKysymykset: state.ylenKysymykset,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    addEdustaja,\n    notifyCreation,\n    getYlenKysymykset\n  },\n)(EtsiVastaus);\n","import axios from 'axios'\n\nconst baseUrl = '/api/kategoriat'\n\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst addKategoria = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default {\n  getAll,\n  setToken,\n  addKategoria,\n  remove,\n}\n","import React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport kategoriaService from './../../services/kategoria';\n\nconst vastausKategoriat = {\n  sosiaalipolitiikka: ['147|Kansalaisten oikeus terveyspalveluihin on tärkeämpää kuin kuntien itsehallinto.', '146|Vanhuksen ja hänen omaistensa vastuuta hoitokustannuksista on lisättävä.', '145|Viranomaisten pitää puuttua lapsiperheiden ongelmiin nykyistä herkemmin.', '144|Terveys- ja sosiaalipalvelut on tuotettava ensijaisesti julkisina palveluina.', '143|Parantumattomasti sairaalla on oltava oikeus avustettuun kuolemaan.', '127|Suomessa on liian helppo elää sosiaaliturvan varassa', '129|Suomessa on siirryttävä perustuloon joka korvaisi nykyisen sosiaaliturvan vähimmäistason.', '135|Lapsilisiä on korotettava ja laitettava verolle.', '136|Suomella ei ole varaa nykyisen laajuisiin sosiaali- ja terveyspalveluihin.'],\n  kaupansaantely: ['247|Mietojen viinien ja vahvojen oluiden myynti ruokakaupassa sallitaan.', '244|Hyväksytään periaatepäätös uuden ydinvoimalaitosyksikön rakentamisesta.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.', '144|Terveys- ja sosiaalipalvelut on tuotettava ensijaisesti julkisina palveluina.', '128|Kaupan ja muiden liikkeiden aukioloajat on vapautettava.'],\n  tyoehdot: ['130|Työntekijälle on turvattava lailla minimityöaika.', '131|Ansiosidonnaisen työttömyysturvan kestoa pitää lyhentää.'],\n  eu: ['150|Suomen pitää ottaa suurempi vastuu EU:n alueelle tulevista turvapaikanhakijoista.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.'],\n  talouspolitiikka: ['245|Tuloveroa alennetaan tasaisesti kaikissa tuloluokissa talouden elvyttämiseksi.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.', '146|Vanhuksen ja hänen omaistensa vastuuta hoitokustannuksista on lisättävä.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.', '134|Valtion ja kuntien taloutta on tasapainotettava ensisijaisesti leikkaamalla menoja.', '136|Suomella ei ole varaa nykyisen laajuisiin sosiaali- ja terveyspalveluihin.'],\n  verotus: ['133|Ruoan verotusta on varaa kiristää.', '135|Lapsilisiä on korotettava ja laitettava verolle.'],\n  turvallisuus: ['149|Geenimuunneltu ruoka on turvallista ihmiselle ja ympäristölle.', '142|Suomen on osallistuttava Isisin vastaiseen taisteluun kouluttamalla Irakin hallituksen joukkoja.', '137|Nato-jäsenyys vahvistaisi Suomen turvallisuuspoliittista asemaa.', '138|Suomeen tarvitaan enemmän poliiseja.', '139|Maahanmuuttoa Suomeen on rajoitettava terrorismin uhan vuoksi.', '141|Verkkovalvonnassa valtion turvallisuus on tärkeämpää kuin kansalaisten yksityisyyden suoja.'],\n  maahanmuutto: ['150|Suomen pitää ottaa suurempi vastuu EU:n alueelle tulevista turvapaikanhakijoista.', '139|Maahanmuuttoa Suomeen on rajoitettava terrorismin uhan vuoksi.'],\n  ulkopolitiikka: ['142|Suomen on osallistuttava Isisin vastaiseen taisteluun kouluttamalla Irakin hallituksen joukkoja.', '140|Venäjän etupiiripolitiikka on uhka Suomelle.', '132|Euron ulkopuolella Suomi pärjäisi paremmin.', '137|Nato-jäsenyys vahvistaisi Suomen turvallisuuspoliittista asemaa.'],\n  yksityisyys: ['246|Edellisen eduskunnan hyväksymä lainmuutos samaa sukupuolta olevien avioliiton sallimisesta peruutetaan.', '141|Verkkovalvonnassa valtion turvallisuus on tärkeämpää kuin kansalaisten yksityisyyden suoja.'],\n  ymparisto: ['244|Hyväksytään periaatepäätös uuden ydinvoimalaitosyksikön rakentamisesta.', '149|Geenimuunneltu ruoka on turvallista ihmiselle ja ympäristölle.', '148|Ilmastonmuutoksen hillitseminen pitää asettaa teollisuuden kilpailukyvyn edelle.'],\n  hallinto: ['201|Suomen Nato-jäsenyydestä on järjestettävä kansanäänestys.', '147|Kansalaisten oikeus terveyspalveluihin on tärkeämpää kuin kuntien itsehallinto.', '151|On aika luopua ajatuksesta, että koko Suomi on pidettävä asuttuna.'],\n  koulutus: ['152|Peruskoulun opetusryhmien koko on rajattava lailla esimerkiksi 20 oppilaaseen.'],\n}\n\nclass UusiKategoria extends React.Component {\n    onSubmit = async (e) => {\n      e.preventDefault();\n      const kategoria = {\n        nimi: e.target.kategoria.value,\n      };\n      e.target.kategoria.value = '';\n      const katet = Object.keys(vastausKategoriat)\n      const vastaus = katet.find(x => x === kategoria.nimi.toLowerCase())\n      if (vastaus) {\n        const vastaukset = vastausKategoriat[vastaus]\n        kategoria.vastaukset = vastaukset\n      }\n      try {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser');\n        kategoriaService.setToken(JSON.parse(loggedUserJSON).token);\n        await kategoriaService.addKategoria(kategoria);\n        window.location.assign('/kategoriat');\n      } catch (exception) {\n        console.log('Tapahtui virhe');\n      }\n    }\n\n    render() {\n      return (\n        <Form onSubmit={this.onSubmit}>\n          <Form.Input\n            label=\"Lisättävä kategoria\"\n            placeholder=\"Kategoria\"\n            name=\"kategoria\"\n          />\n          <Button inverted color=\"green\" type=\"submit\">Tallenna</Button>\n\n        </Form>\n\n      );\n    }\n}\n\nexport default UusiKategoria;\n","import kategoriatService from '../services/kategoria'\n\nconst kategoriatReducer = (store = [], action) => {\n  if (action.type === 'GET_GATEGORIES') {\n    return action.data\n  } if (action.type === 'ADD_GATEGORIES') {\n    return store.concat(action.data)\n  }\n  return store\n}\n\nexport const getKategoriat = () => async (dispatch) => {\n  const all = await kategoriatService.getAll()\n  dispatch({\n    type: 'GET_GATEGORIES',\n    data: all,\n  })\n}\n\nexport const addKategoriat = kategoria => async (dispatch) => {\n  const one = await kategoriatService.addKategoria(kategoria);\n  dispatch({\n    type: 'ADD_GATEGORIES',\n    data: one,\n  })\n}\n\nexport default kategoriatReducer\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Table, Button } from 'semantic-ui-react';\nimport kategoriaService from './../../services/kategoria';\nimport UusiKategoria from './UusiKategoria';\nimport { getKategoriat } from './../../reducers/kategoriatReducer';\n\nconst linkStyle = {\n  color: 'black',\n  fontSize: 14,\n  fontWeight: 'normal',\n};\n\nclass Kategoriat extends React.Component {\n    componentDidMount = async () => {\n      this.props.getKategoriat();\n    }\n\n    remove =k => () => {\n      const ok = window.confirm(`Poistetaanko ${k.nimi} kysymys`);\n\n      if (!ok) {\n        return;\n      }\n      try {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser');\n        kategoriaService.setToken(JSON.parse(loggedUserJSON).token);\n        kategoriaService.remove(k.id);\n      } catch (error) {\n        console.log('jotain meni vikaan');\n      }\n    }\n\n\n    render() {\n      return (\n        <div>\n          {window.localStorage.getItem('loggedUser') &&\n          <UusiKategoria />\n        }\n          <Table celled>\n            <Table.Header>\n              <Table.Row>\n                <Table.HeaderCell positive>Kategoriat</Table.HeaderCell>\n                {window.localStorage.getItem('loggedUser') === null ?\n                  <Table.HeaderCell /> : <Table.HeaderCell>Poisto</Table.HeaderCell>}\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {this.props.kategoriat.map(k =>\n                  (\n                    <Table.Row key={k.id}>\n                      <Table.Cell selectable><Link style={linkStyle} to={`/kategoriat/${k.id}`}>{k.nimi}</Link></Table.Cell>\n                      <Table.Cell>{window.localStorage.getItem('loggedUser') &&\n                      <form onSubmit={this.remove(k)}><Button inverted color=\"red\" type=\"submit\">Delete</Button></form>}\n                      </Table.Cell>\n                    </Table.Row>))\n                }\n            </Table.Body>\n          </Table>\n        </div>\n      );\n    }\n}\nconst mapStateToProps = state => ({\n  kategoriat: state.kategoriat,\n});\nexport default connect(\n  mapStateToProps,\n  { getKategoriat },\n)(Kategoriat);\n\n","import React from 'react';\nimport { Item, Button, Divider } from 'semantic-ui-react'\n\nclass YleKategoriat extends React.Component {\n    state={\n      yle: false,\n    }\n    nayta = () => {\n      this.setState({\n        yle: !this.state.yle,\n      })\n    }\n    render() {\n      if (this.props.vastaukset) {\n        return (\n          <div>\n            <Button size=\"mini\" inverted color=\"blue\" onClick={this.nayta}>\n              <p>{!this.state.yle ?\n                <b>Näytä </b> : <b>Piilota </b>\n                  } kategoriaan linkitetyt ylen vaalikoneen kysymykset\n              </p>\n            </Button>\n            {this.state.yle &&\n            <div>\n              {this.props.vastaukset.vastaukset.map(k =>\n                (\n                  <Item style={{ background: 'AliceBlue' }}key={k}>{k}<Divider /></Item>))}\n              <Button basic onClick={this.nayta}>\n                Piilota kategoriaan linkitetyt ylen koneen kysymykset\n              </Button>\n            </div>\n                }\n          </div>\n        )\n      }\n      return (\n        null\n      )\n    }\n}\n\nexport default YleKategoriat\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Item } from 'semantic-ui-react'\nimport YleKategoriat from './YleKategoriat';\n\n\nclass Kategoria extends React.Component {\n  componentDidMount = () => {\n  }\n  render() {\n    if (this.props.kategoria) {\n      return (\n        <div className=\"container\">\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Item.Header><h1>{this.props.kategoria.nimi}</h1></Item.Header>\n                <br />\n                <YleKategoriat vastaukset={this.props.kategoria} />\n              </Item.Content>\n            </Item>\n            {this.props.kategoria.kysymykset.map(k =>\n        (\n          <Item.Group key={k} divided unstackable>\n            <Link to={`/kysymykset/${this.props.kysymykset.find(x => x.id === k).id}`}>\n              {this.props.kysymykset.find(x => x.id === k).kysymys}\n            </Link>\n          </Item.Group>))}\n          </Item.Group>\n        </div>\n      )\n    }\n    return (\n      null\n    )\n  }\n}\n\n\nexport default Kategoria\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Item, Container, List, Button, Grid, Checkbox, TextArea, Divider, Table, Dropdown } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport kysymysService from './../../services/kysymys'\n\nclass Kysymys extends React.Component {\n  state = {\n    kategoriat: false,\n    muokkaa: false,\n    muokattava: null,\n    show: false,\n    puolueet: false,\n    edustajat: false,\n    hot: false,\n    asettelu: false,\n    booleans: false,\n    jaaLeftist: null,\n    jaaLiberal: null,\n    green: null,\n    kysymys: this.props.kysymys\n  }\n\n  componentDidMount = () => {\n    if (this.props.kysymys) {\n      this.setState({\n        hot: this.props.kysymys.hot,\n        asettelu: this.props.kysymys.kysymyksenAsettelu,\n        jaaLeftist: this.props.kysymys.jaaLeftist,\n        jaaLiberal: this.props.kysymys.jaaLiberal,\n        green: this.props.kysymys.green,\n      })\n    }\n  }\n\n  onSubmit = async (e) => {\n    const kysymys = this.props.kysymys\n    if (this.state.muokattava === 'kysymys') {\n      kysymys.kysymys = e.target.muutos.value\n    } if (this.state.muokattava === 'selitys') {\n      kysymys.selitys = e.target.muutos.value\n    } if (this.state.muokattava === 'tunniste') {\n      kysymys.tunniste = e.target.muutos.value\n    } if (this.state.muokattava === 'url') {\n      kysymys.url = e.target.muutos.value\n    } if (this.state.muokattava === 'yle') {\n      kysymys.vastaus = this.state.yleQuestion\n    } \n    \n    \n    if (typeof this.state.jaaLeftist === 'boolean') {\n      kysymys.jaaLeftist = this.state.jaaLeftist\n    } else {\n      kysymys.jaaLeftist = null\n    } \n    \n     if (typeof this.state.jaaLiberal === 'boolean') {\n      kysymys.jaaLiberal = this.state.jaaLiberal\n    } \n    else {\n      kysymys.jaaLiberal = null\n    } \n    if (typeof this.state.green === 'boolean') {\n      kysymys.green = this.state.green\n    } else {\n      kysymys.green = null\n    } \n\n    kysymys.hot = this.state.hot\n    kysymys.kysymyksenAsettelu = this.state.asettelu\n\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    kysymysService.setToken(JSON.parse(loggedUserJSON).token)\n    await kysymysService.modifyKysymys(kysymys.id, kysymys)\n    this.setState({\n      kategoriat: false,\n      muokkaa: false,\n      muokattava: null,\n    })\n  }\n  onKategoriat = async () => {\n    const kategoriat = []\n    this.props.kategoriat.map(k => (document.getElementById(k.nimi).checked\n      ? kategoriat.push(k) : null))\n\n    const kysymys = this.props.kysymys\n    kysymys.kategoriat = kategoriat.map(x => x.id)\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    kysymysService.setToken(JSON.parse(loggedUserJSON).token)\n    await kysymysService.modifyKysymys(kysymys.id, kysymys)\n  }\n\n  kategoriat = () => {\n    this.setState({\n      kategoriat: true,\n      muokkaa: false,\n    })\n  }\n\n  muokkaa = (x) => {\n    this.setState({\n      muokkaa: true,\n      kategoriat: false,\n      muokattava: x,\n      booleans: false,\n    })\n  }\n\n  show = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  }\n\n  showBooleans = () => {\n    this.setState({\n      hot: this.props.kysymys.hot,\n      asettelu: this.props.kysymys.kysymyksenAsettelu,\n      jaaLeftist: this.props.kysymys.jaaLeftist,\n      jaaLiberal: this.props.kysymys.jaaLiberal,\n      green: this.props.kysymys.green,\n    })\n    this.setState({\n      booleans: !this.state.booleans,\n      muokkaa: false,\n    });\n  }\n\n  puolueet = () => {\n    this.setState({\n      puolueet: !this.state.puolueet,\n    });\n  }\n  edustajat = () => {\n    this.setState({\n      edustajat: !this.state.edustajat,\n    });\n  }\n\n  handleHot = () => {\n    this.setState({\n      hot: !this.state.hot,\n    });\n  }\n\n  handleAsettelu = () => {\n    this.setState({\n      asettelu: !this.state.asettelu,\n    });\n  }\n\n  handleJaaLiberal = (value) => {\n    this.setState({\n      jaaLiberal: value,\n    });\n  }\n\n  handleJaaLeftist = (value) => {\n    this.setState({\n      jaaLeftist: value,\n    });\n  }\n\n  handleGreen = (value) => {\n    this.setState({\n      green: value,\n    });\n  }\n\n  disClick = (field) => {\n    this.setState({\n      [field]: null \n    })\n  }\n\n  showYle = () => {\n    this.setState({\n      yle: true,\n      muokattava: \"yle\"\n    })\n  }\n\n  handleYle = (e, data) => {\n    this.setState({\n      yleQuestion: data.value\n    })\n  }\n\n\n  render() {\n\n    if (this.props.kysymys) {\n      const yles = this.props.yle.kysymykset.map(x => { return {text: x, value: x}})\n      return (\n        <Container>\n          <Grid>\n\n            {window.localStorage.getItem('loggedUser') &&\n            <div>\n              <Grid.Row>\n                <Grid.Column width={4} />\n                <Grid.Column width={12}>\n                  <Button.Group inverted color=\"blue\">\n                    <Button onClick={() => this.muokkaa('kysymys')}>Kysymys</Button>\n                    <Button.Or />\n                    <Button onClick={() => this.muokkaa('tunniste')}>Tunniste</Button>\n                    <Button.Or />\n                    <Button onClick={() => this.muokkaa('selitys')}>Selitys</Button>\n                    <Button.Or />\n                    <Button onClick={() => this.showYle()}>Yle</Button>\n                    <Button.Or />\n                    <Button onClick={this.kategoriat}>Kategoriat</Button>\n                    <Button.Or />\n                    <Button onClick={() => this.muokkaa('url')}>Linkki</Button>\n                    <Button.Or />\n                    <Button onClick={() => this.showBooleans()}>\n                      Tärkeys,ristiriita, vihreys, Vas-Oik ja Kons-Lib\n                    </Button>\n                  </Button.Group>\n                </Grid.Column>\n              </Grid.Row>\n              {this.state.yle &&\n              <form onSubmit={this.onSubmit}>\n              <Dropdown placeholder='Valitse ylen kysymys' fluid selection onChange={(e, d) => this.handleYle(e, d)} options={yles} />\n                  <Button type=\"submit\" color=\"green\">Muokkaa</Button>\n                </form>\n            }\n\n              {this.state.booleans &&\n              <div>\n                <br />\n                <Checkbox\n                  toggle\n                  onChange={() => this.handleHot()}\n                  defaultChecked={this.state.hot}\n                  label=\"Keskeinen kysymys tällä hallituskaudella\"\n                />\n                <br />\n                <Checkbox\n                  defaultChecked={this.state.asettelu}\n                  toggle\n                  onChange={() => this.handleAsettelu()}\n                  label=\"Kysymyksen asettelu ristiriitainen ylen kysymykseen nähden\"\n                />\n                <br />\n                <Checkbox\n                  radio\n                  name=\"liberalRadioGroup\"\n                  checked={this.state.jaaLiberal === true}\n                  label=\"Jaa vastaus liberaali\"\n                  onChange={() => this.handleJaaLiberal(true)}\n                />\n                <Checkbox\n                  radio\n                  name=\"liberalRadioGroup\"\n                  checked={this.state.jaaLiberal === false}\n                  label=\"Jaa vastaus konservatiivinen\"\n                  onChange={() => this.handleJaaLiberal(false)}\n                />\n                <Checkbox\n                    radio\n                    name=\"liberalRadioGroup\"\n                    checked={this.state.jaaLiberal === null}\n                    label=\"Ei sovi\"\n                    onChange={() => this.disClick(\"jaaLiberal\")}\n                  />\n                <br />\n                <Checkbox\n                  radio\n                  checked={this.state.jaaLeftist === true}\n                  label=\"Jaa vastaus vasemmistolainen\"\n                  onChange={() => this.handleJaaLeftist(true)}\n                />\n                <Checkbox \n                  radio\n                  checked={this.state.jaaLeftist === false}\n                  label=\"Jaa vastaus oikeistolainen\"\n                  onChange={() => this.handleJaaLeftist(false)}\n                />\n                  <Checkbox\n                    radio\n                    name=\"liberalRadioGroup\"\n                    checked={this.state.jaaLeftist === null}\n                    label=\"Ei sovi\"\n                    onChange={() => this.disClick(\"jaaLeftist\")}\n                  />\n                 <br />\n                <Checkbox\n                  radio\n                  checked={this.state.green === true}\n                  label=\"Jaa vastaus vihreä\"\n                  onChange={() => this.handleGreen(true)}\n                />\n                <Checkbox\n                  radio\n                  checked={this.state.green === false}\n                  label=\"Ei vastaus vihreä\"\n                  onChange={() => this.handleGreen(false)}\n                />\n                  <Checkbox\n                    radio\n                    name=\"liberalRadioGroup\"\n                    checked={this.state.green === null}\n                    label=\"Ei sovi\"\n                    onChange={() => this.disClick(\"green\")}\n                  />\n                <br />\n                <br />\n                <form onSubmit={this.onSubmit}>\n                  <Button type=\"submit\" color=\"green\">Muokkaa tärkeys ja asettelu</Button>\n                </form>\n              </div>\n              }\n              {this.state.kategoriat &&\n              <Grid.Row>\n                <form onSubmit={this.onKategoriat}>\n                  {this.props.kategoriat.map(k =>\n                  (<Checkbox\n                    key={k.nimi}\n                    label={k.nimi}\n                    name=\"kategoriat\"\n                    id={k.nimi}\n                  />))}\n                  <br />\n                  <Button type=\"submit\" color=\"green\">Muokkaa</Button>\n                </form>\n              </Grid.Row>}\n              {this.state.muokkaa &&\n              <form onSubmit={this.onSubmit}>\n                <Grid.Row>\n                  <TextArea name=\"muutos\" />\n                </Grid.Row>\n                <Button type=\"submit\" color=\"green\">Muokkaa {this.state.muokattava}</Button>\n              </form>}\n            </div>}\n            <Grid.Row>\n              <Grid.Column width={12}>\n                <Item.Group divided>\n                  <Divider>Kysymys</Divider>\n                  <Item>\n                    <Item.Content>\n                      <Item.Header>{this.props.kysymys.kysymys} </Item.Header>\n                      <Item.Description>\n                        <Button size=\"mini\" basic onClick={this.show}>Lisätietoja</Button>\n                        {this.state.show && \n                        <div>\n                          <br/>\n                        <b>Jaa vastaus liberaali:</b> {typeof this.props.kysymys.jaaLiberal === 'boolean' && this.props.kysymys.jaaLiberal.toString()}\n                        <br />\n                        <b>Jaa vastaus vasemmistolainen:</b> {typeof this.props.kysymys.jaaLeftist == 'boolean' && this.props.kysymys.jaaLeftist.toString()}\n                        <br />\n                          <b>Jaa vastaus vihreä:</b> {typeof this.props.kysymys.green == 'boolean' && this.props.kysymys.green.toString()}\n                          <br />\n                       <br/>\n                       <h3> {this.props.kysymys.tunniste}</h3>\n                        \n                        {this.props.kysymys.selitys}\n                      \n                        </div>}\n                      </Item.Description>\n                      <br />\n                      <b>Kysymykseen linkitetty ylen vaalikoneen kysymys</b>\n                      <br />\n                      <br />\n                      <p>{this.props.kysymys.vastaus}</p>\n                      <List>\n                        <b>Kategoriat</b>\n                        <List.List>\n                          {this.props.kysymys.kategoriat.map(x =>\n                            (\n                              <List.Item as=\"li\" key={x._id}><Link to={`/kategoriat/${x._id}`}>{x.nimi}</Link>\n                              </List.Item>))}\n                        </List.List>\n                      </List>\n                      <List>\n                        <b>Puolueiden ja edustajien kannat</b>\n                        <br />\n                        <Button size=\"mini\" basic onClick={this.puolueet}>{this.state.puolueet ? 'Piilota' : 'Näytä'}</Button>\n                        {this.state.puolueet &&\n                        <Table>\n                          <Table.Body>\n                            {this.props.kysymys.puolueet.map(x =>\n                            (\n                              <Table.Row key={x.nimi}>\n                                <Table.Cell>{x.nimi}</Table.Cell>\n                                <Table.Cell>{x.kanta}</Table.Cell>\n                              </Table.Row>))}\n                          </Table.Body>\n                          <Table.Body>\n                            <Table.Row>\n                              <Table.Cell>\n                                <Button size=\"mini\" basic onClick={this.edustajat}>Edustajien kannat</Button>\n                              </Table.Cell>\n                            </Table.Row>\n                          </Table.Body>\n                          {this.state.edustajat &&\n                          <Table.Body>\n                            {this.props.kysymys.edustajat.map(x =>\n                            (\n                              <Table.Row key={x.nimi}>\n                                <Table.Cell>{x.nimi}</Table.Cell>\n                                <Table.Cell>{x.kanta}</Table.Cell>\n                              </Table.Row>))}\n                            <Table.Row>\n                              <Table.Cell>\n                                <Button size=\"mini\" basic onClick={this.edustajat}>Piilota edustajien kannat</Button>\n                              </Table.Cell>\n                            </Table.Row>\n                          </Table.Body>\n                          }\n\n                        </Table>\n                        }\n                      </List>\n                      <Item.Extra>\n                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={this.props.kysymys.url}>Linkki eduskunnan sivuille</a>\n                      </Item.Extra>\n                    </Item.Content>\n                  </Item>\n                </Item.Group>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <Grid.Row />\n\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row />\n          </Grid>\n        </Container>\n      )\n    }\n    return (\n      <div />\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  kategoriat: state.kategoriat,\n  kayttaja: state.kayttaja,\n  yle: state.ylenKysymykset\n})\n\nexport default connect(\n  mapStateToProps,\n  {\n  },\n)(Kysymys)\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","\nconst userReducer = (store = '', action) => {\n  if (action.type === 'USER') {\n    return action.user\n  }\n  return store\n}\n\nexport const userLogin = content => async (dispatch) => {\n  dispatch({\n    type: 'USER',\n    user: content,\n  })\n}\n\nexport default userReducer\n","\nimport React from 'react'\nimport { Form, Button } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport loginService from '../services/login'\nimport { userLogin } from '../reducers/userReducer'\nimport kysymysService from '../services/kysymys'\n\n\nclass Login extends React.Component {\n    login = async (e) => {\n      e.preventDefault()\n      try {\n        const user = await loginService.login({\n          username: e.target.username.value,\n          password: e.target.password.value,\n        })\n        window.localStorage.setItem('loggedUser', JSON.stringify(user))\n        this.props.userLogin(user.username)\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\n        kysymysService.setToken(JSON.parse(loggedUserJSON).token)\n      } catch (exception) {\n        console.log('virhe')\n      }\n    }\n\n\n    render() {\n      return (\n        <div>\n          <h2>Kirjaudu</h2>\n\n          <form onSubmit={this.login}>\n            <div>\n        Käyttäjätunnus\n              <Form.Input\n                name=\"username\"\n              />\n            </div>\n            <div>\n        Salasana\n              <Form.Input\n                type=\"password\"\n                name=\"password\"\n              />\n            </div>\n            <br />\n            <Button inverted color=\"green\" type=\"submit\">Kirjaudu</Button>\n          </form>\n        </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n})\n\n\nexport default connect(\n  mapStateToProps,\n  { userLogin },\n)(Login)\n","import kysymysService from '../services/kysymys'\n\nconst kysymyksetReducer = (store = [], action) => {\n  if (action.type === 'GET_ALL') {\n    return action.data\n  }\n  return store\n}\n\nexport const getKysymykset = () => async (dispatch) => {\n  const all = await kysymysService.getAll()\n  dispatch({\n    type: 'GET_ALL',\n    data: all,\n  })\n}\n\nexport default kysymyksetReducer\n","import React from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport HtmlForm from './components/form/HtmlForm';\nimport Home from './components/Home';\nimport Settings from './components/Settings';\nimport NolansMap from './components/nolansMap/NolansMap';\nimport Questions from './components/questions/Questions';\nimport EtsiVastaus from './components/yle/FindAnswer'\nimport Kategoriat from './components/kategoriat/Kategoriat';\nimport Kategoria from './components/kategoriat/Kategoria';\nimport Question from './components/questions/Question';\nimport Login from './components/Login';\nimport Notification from './components/Notification';\nimport { getKysymykset } from './reducers/kysymyksetReducer';\nimport { getKategoriat } from './reducers/kategoriatReducer';\nimport { getYlenKysymykset } from './reducers/ylenKysymyksetReducer';\nimport { Button, TransitionablePortal, Segment, Icon } from 'semantic-ui-react';\n\n\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      yle: []\n    };\n  }\n\n  componentDidMount = async () => {\n    this.props.getKysymykset();\n    this.props.getKategoriat();\n    this.props.getYlenKysymykset();\n  }\n\n  kysymysById = id => (\n    this.props.kysymykset.find(k => k.id === id)\n  )\n\n  kategoriaById = id => (\n    this.props.kategoriat.find(k => k.id === id)\n  )\n\n\n  logout = () => {\n    window.localStorage.removeItem('loggedUser');\n    window.location.assign('/')\n  }\n\n  show = () => {\n    this.setState({\n      show: !this.state.show,\n    });\n  }\n\n  render() {\n    const desktop = window.innerWidth > 1000\n    console.log('desk', this.history);\n    const white = { color: '#004d99', padding: '1px'} \n    const animation = 'slide down'\n    const duration = 200\n    const active = {fontWeight: \"bold\"}\n    \n    return (\n      <Router>\n        <Grid>\n        {desktop && <Grid.Row style={{padding: \"0.5em\", paddingTop: \"0em\"}}/>}\n          <Grid.Row>\n            {desktop && <Grid.Column width={3} />}\n            <Grid.Column \n              width={desktop ? 10 : 16}\n              style={{\n                background: 'white',\n                minHeight: desktop ? '70vh' : '100vh',\n                padding: 0,\n                boxShadow: \"0 4px 8px 0 rgba(0,0,0,0.2)\" \n              }}\n              >\n              <div style={{ background: '#004d99', padding: '1.5em', }}>\n                <img \n                  src=\"https://i.imgur.com/tQ6HhoS.png\" \n                  height=\"100px\"\n                  style={{marginLeft: \"44%\"}}\n                />\n                {window.localStorage.getItem('loggedUser') &&\n                <div style={{display: \"inline-block\", right: \"0\", position: \"absolute\", top: \"0\", paddingTop: \"2em\", paddingRight: \"2em\"}}>\n                    <Icon name='bars' style={{color: \"white\"}} size=\"big\" onClick={() => this.show()}/>\n                    <TransitionablePortal\n                      open={this.state.show} \n                      transition={{ animation, duration }}\n                      onClose={() => this.show()}>\n                      <Segment \n                      style={{textAlign: \"center\", padding: \"0.1em\",\n                      right: desktop ? '18%' : \"0%\",\n                      position: 'fixed',\n                      top: desktop ? '4.5%' : \"0%\",\n                      border: \"1px solid #919499\",\n                      height: window.localStorage.getItem('loggedUser') ? '35em' : \"24.5em\",\n                      width: \"15em\"\n                      }} \n                      >\n                      <img \n                          src=\"https://i.imgur.com/tQ6HhoS.png\" \n                          height=\"50px\"\n                          style={{display: \"block\", paddingTop: \"1em\",\n                            margin: \"0 auto\"}}\n                          \n                        />\n                      <NavLink style={white} exact activeStyle={active} to=\"/\">\n                        <p>Etusivu</p>\n                      </NavLink>\n                      <NavLink style={white}  activeStyle={active} to=\"/kone\">\n                        <p ref=\"kone\">Vaalikausikone</p>\n                      </NavLink>\n                      <NavLink style={white} activeStyle={active} to=\"/kysymykset\">\n                        <p ref=\"kysymykset\">Yksittäiset kysymykset</p>\n                      </NavLink>\n                      <NavLink style={white} activeStyle={active} to=\"/vastaukset\">\n                        <p ref=\"vastaukset\">Vuoden 2015 vaalikone vastaukset</p>\n                      </NavLink>\n                      <NavLink style={white} activeStyle={active} to=\"/kategoriat\">\n                        <p ref=\"kategoriat\">Kategoriat</p>\n                      </NavLink>\n                      {window.localStorage.getItem('loggedUser') &&\n                        <NavLink style={white} activeStyle={active} to=\"/lisaa\">\n                        <p ref=\"lisaa\">Uusi kysymys</p>\n                      </NavLink>\n                      }\n                      {window.localStorage.getItem('loggedUser') &&\n                        <div style={{ padding: '1em' }}>\n                      <Button onClick={() => this.logout()} size=\"tiny\" type=\"submit\"> Kirjaudu ulos</Button>\n                        </div>\n                      }\n                      </Segment>\n                    </TransitionablePortal>\n                  </div>\n                      }\n\n                <h1 style={{\n                  fontSize: '2.3em',\n                  color: 'white',\n                  textAlign: 'center',\n                  verticalAlign: 'bottom',\n                }}\n                >Vaalikausikone\n                </h1>\n              </div>\n              <div\n                id=\"routet\"\n                style={{paddingTop: \"5%\", paddingLeft:\"10%\", marginRight:\"10%\", paddingBottom: \"5%\"}}\n              >\n                <Route exact path=\"/\" render={(history) => <Home history={history}/>} />\n                <Route exact path=\"/kategoriat\" render={history => <Kategoriat history={history} />} />\n                <Route exact path=\"/kysymykset\" render={history => <Questions history={history}/>} />\n                <Route exact path=\"/kone\" render={history => <Settings history={history}/>} />\n                <Route exact path=\"/vastaukset\" render={history => <EtsiVastaus history={history}/>} />\n                <Route exact path=\"/graaffit\" render={history => <NolansMap history={history}/>} />\n                <Route exact path=\"/login\" render={({ history }) => <Login history={history} />} />\n                {window.localStorage.getItem('loggedUser') &&\n                <div>\n                  <Route path=\"/lisaa\" render={({ history }) => <HtmlForm history={history} />} />\n                </div>\n                    }\n                <Route\n                  exact\n                  path=\"/kysymykset/:id\"\n                  render={({ match }) =>\n                    <Question kysymys={this.kysymysById(match.params.id)} />}\n                />\n                <Route\n                  exact\n                  path=\"/kategoriat/:id\"\n                  render={({ match }) =>\n                (<Kategoria\n                  kategoria={this.kategoriaById(match.params.id)}\n                  kysymykset={this.props.kysymykset}\n                />)\n              }\n                />\n\n\n              </div>\n\n            </Grid.Column>\n           {desktop && <Grid.Column width={3} />}\n          </Grid.Row>\n        </Grid>\n      </Router>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  kysymykset: state.kysymykset,\n  kategoriat: state.kategoriat,\n  ylenKysymykset: state.ylenKysymykset,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    getKysymykset,\n    getKategoriat,\n    getYlenKysymykset,\n  },\n)(App);\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport htmlReducer from './reducers/htmlReducer';\nimport kysymysReducer from './reducers/kysymysReducer';\nimport kysymyksetReducer from './reducers/kysymyksetReducer';\nimport notifyReducer from './reducers/notifyReducer';\nimport userReducer from './reducers/userReducer';\nimport kayttajaReducer from './reducers/kayttajaReducer';\nimport kategoriatReducer from './reducers/kategoriatReducer';\nimport edustajaReducer from './reducers/edustajaReducer'\nimport ylenKysymyksetReducer from './reducers/ylenKysymyksetReducer'\n\nconst reducer = combineReducers({\n  html: htmlReducer,\n  kysymys: kysymysReducer,\n  notify: notifyReducer,\n  kysymykset: kysymyksetReducer,\n  user: userReducer,\n  kayttaja: kayttajaReducer,\n  kategoriat: kategoriatReducer,\n  edustaja: edustajaReducer,\n  ylenKysymykset: ylenKysymyksetReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk),\n)\n\nexport default store;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App store={store} />\n  </Provider>,\n  document.getElementById('root'),\n)\n\n"],"sourceRoot":""}